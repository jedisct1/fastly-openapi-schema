components:
    schemas:
        BackendResponse:
            properties:
                address,omitempty:
                    description: Whether or not this backend should be automatically load balanced. If true, all backends with this setting that don't have a `request_condition` will be selected based on their `weight`.
                    type: string
                auto_loadbalance,omitempty:
                    description: Maximum duration in milliseconds that Fastly will wait while receiving no data on a download from a backend. If exceeded, the response received so far will be considered complete and the fetch will end. May be set at runtime using `bereq.between_bytes_timeout`.
                    type: boolean
                between_bytes_timeout,omitempty:
                    description: Unused.
                    format: int32
                    type: integer
                client_cert,omitempty:
                    $ref: '#/components/schemas/NullableString'
                comment,omitempty:
                    $ref: '#/components/schemas/NullableString'
                connect_timeout,omitempty:
                    description: Maximum duration in milliseconds to wait for the server response to begin after a TCP connection is established and the request has been sent. If exceeded, the connection is aborted and a synthetic `503` response will be presented instead. May be set at runtime using `bereq.first_byte_timeout`.
                    format: int32
                    type: integer
                created_at,omitempty:
                    $ref: '#/components/schemas/NullableTime'
                deleted_at,omitempty:
                    $ref: '#/components/schemas/NullableTime'
                first_byte_timeout,omitempty:
                    description: The name of the healthcheck to use with this backend.
                    format: int32
                    type: integer
                healthcheck,omitempty:
                    $ref: '#/components/schemas/NullableString'
                hostname,omitempty:
                    $ref: '#/components/schemas/NullableString'
                ipv4,omitempty:
                    $ref: '#/components/schemas/NullableString'
                ipv6,omitempty:
                    $ref: '#/components/schemas/NullableString'
                keepalive_time,omitempty:
                    $ref: '#/components/schemas/NullableInt32'
                locked,omitempty:
                    type: boolean
                max_conn,omitempty:
                    description: Maximum allowed TLS version on SSL connections to this backend. If your backend server is not able to negotiate a connection meeting this constraint, a synthetic `503` error response will be generated.
                    format: int32
                    type: integer
                max_tls_version,omitempty:
                    $ref: '#/components/schemas/NullableString'
                min_tls_version,omitempty:
                    $ref: '#/components/schemas/NullableString'
                name,omitempty:
                    description: If set, will replace the client-supplied HTTP `Host` header on connections to this backend. Applied after VCL has been processed, so this setting will take precedence over changing `bereq.http.Host` in VCL.
                    type: string
                override_host,omitempty:
                    $ref: '#/components/schemas/NullableString'
                port,omitempty:
                    description: Prefer IPv6 connections for DNS hostname lookups.
                    format: int32
                    type: integer
                prefer_ipv6,omitempty:
                    description: Name of a Condition, which if satisfied, will select this backend during a request. If set, will override any `auto_loadbalance` setting. By default, the first backend added to a service is selected for all requests.
                    type: boolean
                request_condition,omitempty:
                    description: Value that when shared across backends will enable those backends to share the same health check.
                    type: string
                service_id,omitempty:
                    type: string
                share_key,omitempty:
                    $ref: '#/components/schemas/NullableString'
                shield,omitempty:
                    $ref: '#/components/schemas/NullableString'
                ssl_ca_cert,omitempty:
                    $ref: '#/components/schemas/NullableString'
                ssl_cert_hostname,omitempty:
                    $ref: '#/components/schemas/NullableString'
                ssl_check_cert,omitempty:
                    $ref: '#/components/schemas/NullableBool'
                ssl_ciphers,omitempty:
                    $ref: '#/components/schemas/NullableString'
                ssl_client_cert,omitempty:
                    $ref: '#/components/schemas/NullableString'
                ssl_client_key,omitempty:
                    $ref: '#/components/schemas/NullableString'
                ssl_hostname,omitempty:
                    $ref: '#/components/schemas/NullableString'
                ssl_sni_hostname,omitempty:
                    $ref: '#/components/schemas/NullableString'
                tcp_keepalive_enable,omitempty:
                    $ref: '#/components/schemas/NullableBool'
                tcp_keepalive_interval,omitempty:
                    $ref: '#/components/schemas/NullableInt32'
                tcp_keepalive_probes,omitempty:
                    $ref: '#/components/schemas/NullableInt32'
                tcp_keepalive_time,omitempty:
                    $ref: '#/components/schemas/NullableInt32'
                updated_at,omitempty:
                    $ref: '#/components/schemas/NullableTime'
                use_ssl,omitempty:
                    description: Weight used to load balance this backend against others. May be any positive integer. If `auto_loadbalance` is true, the chance of this backend being selected is equal to its own weight over the sum of all weights for backends that have `auto_loadbalance` set to true.
                    type: boolean
                version,omitempty:
                    description: Indicates whether the version of the service this backend is attached to accepts edits.
                    format: int32
                    type: integer
                weight,omitempty:
                    description: Date and time in ISO 8601 format.
                    format: int32
                    type: integer
            type: object
        CacheSettingResponse:
            properties:
                action,omitempty:
                    $ref: '#/components/schemas/NullableString'
                cache_condition,omitempty:
                    $ref: '#/components/schemas/NullableString'
                created_at,omitempty:
                    $ref: '#/components/schemas/NullableTime'
                deleted_at,omitempty:
                    $ref: '#/components/schemas/NullableTime'
                name,omitempty:
                    description: Maximum time in seconds to continue to use a stale version of the object if future requests to your backend server fail (also known as 'stale if error').
                    type: string
                service_id,omitempty:
                    type: string
                stale_ttl,omitempty:
                    description: Maximum time to consider the object fresh in the cache (the cache 'time to live').
                    type: string
                ttl,omitempty:
                    type: string
                updated_at,omitempty:
                    $ref: '#/components/schemas/NullableTime'
                version,omitempty:
                    description: Date and time in ISO 8601 format.
                    type: string
            type: object
        DiffResponse:
            properties:
                diff,omitempty:
                    type: string
                format,omitempty:
                    description: The differences between two specified service versions. Returns the full config if the version configurations are identical.
                    type: string
                from,omitempty:
                    description: The version number being diffed to.
                    format: int32
                    type: integer
                to,omitempty:
                    description: The format the diff is being returned in (`text`, `html` or `html_simple`).
                    format: int32
                    type: integer
            type: object
        Error:
            properties:
                errors:
                    items:
                        properties:
                            code:
                                description: Error code
                                type: string
                            detail:
                                description: Error details
                                type: string
                            status:
                                description: HTTP status code
                                type: string
                            title:
                                description: Error title
                                type: string
                        type: object
                    type: array
            type: object
        HealthcheckResponse:
            properties:
                check_interval,omitempty:
                    description: A freeform descriptive note.
                    format: int32
                    type: integer
                comment,omitempty:
                    $ref: '#/components/schemas/NullableString'
                created_at,omitempty:
                    $ref: '#/components/schemas/NullableTime'
                deleted_at,omitempty:
                    $ref: '#/components/schemas/NullableTime'
                expected_response,omitempty:
                    description: Array of custom headers that will be added to the health check probes.
                    format: int32
                    type: integer
                host,omitempty:
                    description: Whether to use version 1.0 or 1.1 HTTP.
                    type: string
                http_version,omitempty:
                    description: When loading a config, the initial number of probes to be seen as OK.
                    type: string
                initial,omitempty:
                    description: Which HTTP method to use.
                    format: int32
                    type: integer
                method,omitempty:
                    description: The name of the health check.
                    type: string
                name,omitempty:
                    description: The path to check.
                    type: string
                path,omitempty:
                    description: How many health checks must succeed to be considered healthy.
                    type: string
                service_id,omitempty:
                    type: string
                threshold,omitempty:
                    description: Timeout in milliseconds.
                    format: int32
                    type: integer
                timeout,omitempty:
                    description: The number of most recent health check queries to keep for this health check.
                    format: int32
                    type: integer
                updated_at,omitempty:
                    $ref: '#/components/schemas/NullableTime'
                version,omitempty:
                    description: Date and time in ISO 8601 format.
                    format: int32
                    type: integer
                window,omitempty:
                    format: int32
                    type: integer
            type: object
        HistoricalDomainsMeta:
            properties:
                downsample,omitempty:
                    description: A comma-separated list of the metrics that were requested.
                    type: string
                end,omitempty:
                    description: Downsample that was used to perform the query. One of `minute`, `hour`, or `day`.
                    type: string
                filters,omitempty:
                    $ref: '#/components/schemas/HistoricalDomainsMetaFilters'
                group_by,omitempty:
                    type: string
                limit,omitempty:
                    description: A string that can be used to request the next page of results, if any.
                    format: float
                    type: number
                metrics,omitempty:
                    description: The maximum number of results shown per page.
                    type: string
                next_cursor,omitempty:
                    description: A comma-separated list of keys the results are sorted by.
                    type: string
                sort,omitempty:
                    description: A comma-separated list of dimensions being summed over in the query.
                    type: string
                start,omitempty:
                    description: End time that was used to perform the query as an ISO-8601-formatted date and time.
                    type: string
            type: object
        HistoricalDomainsMetaFilters:
            properties:
                datacenter,omitempty:
                    type: string
                domain,omitempty:
                    type: string
                region,omitempty:
                    type: string
            type: object
        HistoricalDomainsResponse:
            properties:
                meta,omitempty:
                    $ref: '#/components/schemas/HistoricalDomainsMeta'
                msg,omitempty:
                    $ref: '#/components/schemas/NullableString'
                status,omitempty:
                    type: string
            type: object
        HistoricalMeta:
            properties:
                by,omitempty:
                    type: string
                from,omitempty:
                    type: string
                region,omitempty:
                    type: string
                to,omitempty:
                    type: string
            type: object
        HistoricalOriginsResponse:
            properties:
                meta,omitempty:
                    $ref: '#/components/schemas/OriginInspectorHistoricalMeta'
                msg,omitempty:
                    $ref: '#/components/schemas/NullableString'
                status,omitempty:
                    type: string
            type: object
        HistoricalStatsAggregatedResponse:
            properties:
                meta,omitempty:
                    $ref: '#/components/schemas/HistoricalMeta'
                msg,omitempty:
                    $ref: '#/components/schemas/NullableString'
                status,omitempty:
                    type: string
            type: object
        HistoricalStatsByServiceResponse:
            properties:
                meta,omitempty:
                    $ref: '#/components/schemas/HistoricalMeta'
                msg,omitempty:
                    $ref: '#/components/schemas/NullableString'
                status,omitempty:
                    type: string
            type: object
        HistoricalUsageServiceResponse:
            properties:
                meta,omitempty:
                    $ref: '#/components/schemas/HistoricalMeta'
                msg,omitempty:
                    $ref: '#/components/schemas/NullableString'
                status,omitempty:
                    type: string
            type: object
        InlineResponse200:
            properties:
                status,omitempty:
                    type: string
            type: object
        Metadata:
            properties:
                limit,omitempty:
                    description: The sort order of the invoices in the response.
                    format: int32
                    type: integer
                next_cursor,omitempty:
                    description: The number of invoices included in the response.
                    type: string
                sort,omitempty:
                    description: Total number of records available on the backend.
                    type: string
                total,omitempty:
                    format: int32
                    type: integer
            type: object
        NullableBool:
            description: A boolean value that can be null
            nullable: true
            type: boolean
        NullableInt32:
            description: An integer value that can be null
            format: int32
            nullable: true
            type: integer
        NullableServiceVersionDetailOrNull:
            additionalProperties: true
            description: NullableServiceVersionDetailOrNull schema
            type: object
        NullableString:
            description: A string value that can be null
            nullable: true
            type: string
        NullableTime:
            description: A timestamp that can be null
            format: date-time
            nullable: true
            type: string
        OriginInspectorHistoricalMeta:
            properties:
                downsample,omitempty:
                    description: A comma-separated list of the metrics that were requested.
                    type: string
                end,omitempty:
                    description: Downsample that was used to perform the query. One of `minute`, `hour` or `day`.
                    type: string
                filters,omitempty:
                    $ref: '#/components/schemas/OriginInspectorHistoricalMetaFilters'
                group_by,omitempty:
                    type: string
                limit,omitempty:
                    description: A string that can be used to request the next page of results, if any.
                    format: float
                    type: number
                metrics,omitempty:
                    description: The maximum number of results shown per page.
                    type: string
                next_cursor,omitempty:
                    description: A comma-separated list of keys the results are sorted by.
                    type: string
                sort,omitempty:
                    description: A comma-separated list of dimensions being summed over in the query.
                    type: string
                start,omitempty:
                    description: End time that was used to perform the query as an ISO-8601-formatted date and time.
                    type: string
            type: object
        OriginInspectorHistoricalMetaFilters:
            properties:
                datacenter,omitempty:
                    type: string
                host,omitempty:
                    type: string
                region,omitempty:
                    type: string
            type: object
        PackageMetadata:
            properties:
                description,omitempty:
                    description: A list of package authors' email addresses.
                    type: string
                files_hash,omitempty:
                    type: string
                hashsum,omitempty:
                    description: Hash of the files within the Compute package.
                    type: string
                language,omitempty:
                    description: Size of the Compute package in bytes.
                    type: string
                name,omitempty:
                    description: Description of the Compute package.
                    type: string
                size,omitempty:
                    description: Hash of the Compute package.
                    format: int32
                    type: integer
            type: object
        PackageResponse:
            properties:
                created_at,omitempty:
                    $ref: '#/components/schemas/NullableTime'
                deleted_at,omitempty:
                    $ref: '#/components/schemas/NullableTime'
                id,omitempty:
                    type: string
                metadata,omitempty:
                    $ref: '#/components/schemas/PackageMetadata'
                service_id,omitempty:
                    type: string
                updated_at,omitempty:
                    $ref: '#/components/schemas/NullableTime'
                version,omitempty:
                    description: Date and time in ISO 8601 format.
                    format: int32
                    type: integer
            type: object
        PurgeResponse:
            properties:
                id,omitempty:
                    type: string
                status,omitempty:
                    type: string
            type: object
        ServiceDetail:
            properties:
                active_version,omitempty:
                    $ref: '#/components/schemas/NullableServiceVersionDetailOrNull'
                comment,omitempty:
                    $ref: '#/components/schemas/NullableString'
                created_at,omitempty:
                    $ref: '#/components/schemas/NullableTime'
                customer_id,omitempty:
                    description: The type of this service.
                    type: string
                deleted_at,omitempty:
                    $ref: '#/components/schemas/NullableTime'
                id,omitempty:
                    description: Unused at this time.
                    type: string
                name,omitempty:
                    description: Alphanumeric string identifying the customer.
                    type: string
                paused,omitempty:
                    description: A list of [versions](https://www.fastly.com/documentation/reference/api/services/version/) associated with the service.
                    type: boolean
                publish_key,omitempty:
                    description: Whether the service is paused. Services are paused due to a lack of traffic for an extended period of time. Services are resumed either when a draft version is activated or a locked version is cloned and reactivated.
                    type: string
                type,omitempty:
                    type: string
                updated_at,omitempty:
                    $ref: '#/components/schemas/NullableTime'
                version,omitempty:
                    $ref: '#/components/schemas/ServiceVersionDetail'
            type: object
        ServiceResponse:
            properties:
                comment,omitempty:
                    $ref: '#/components/schemas/NullableString'
                created_at,omitempty:
                    $ref: '#/components/schemas/NullableTime'
                customer_id,omitempty:
                    description: The type of this service.
                    type: string
                deleted_at,omitempty:
                    $ref: '#/components/schemas/NullableTime'
                id,omitempty:
                    description: Unused at this time.
                    type: string
                name,omitempty:
                    description: Alphanumeric string identifying the customer.
                    type: string
                paused,omitempty:
                    description: A list of [versions](https://www.fastly.com/documentation/reference/api/services/version/) associated with the service.
                    type: boolean
                publish_key,omitempty:
                    description: Whether the service is paused. Services are paused due to a lack of traffic for an extended period of time. Services are resumed either when a draft version is activated or a locked version is cloned and reactivated.
                    type: string
                type,omitempty:
                    type: string
                updated_at,omitempty:
                    $ref: '#/components/schemas/NullableTime'
            type: object
        ServiceVersionDetail:
            properties:
                active,omitempty:
                    description: A freeform descriptive note.
                    type: boolean
                comment,omitempty:
                    $ref: '#/components/schemas/NullableString'
                created_at,omitempty:
                    $ref: '#/components/schemas/NullableTime'
                deleted_at,omitempty:
                    $ref: '#/components/schemas/NullableTime'
                deployed,omitempty:
                    description: Whether this version is locked or not. Objects can not be added or edited on locked versions.
                    type: boolean
                locked,omitempty:
                    description: The number of this version.
                    type: boolean
                number,omitempty:
                    description: Unused at this time.
                    format: int32
                    type: integer
                service_id,omitempty:
                    description: A list of environments where the service has been deployed.
                    type: string
                settings,omitempty:
                    $ref: '#/components/schemas/VersionDetailSettings'
                staging,omitempty:
                    description: Unused at this time.
                    type: boolean
                testing,omitempty:
                    description: Date and time in ISO 8601 format.
                    type: boolean
                updated_at,omitempty:
                    $ref: '#/components/schemas/NullableTime'
            type: object
        Serviceusagemetrics:
            properties:
                data,omitempty:
                    $ref: '#/components/schemas/ServiceusagemetricsData'
            type: object
        ServiceusagemetricsData:
            properties:
                customer_id,omitempty:
                    description: Date and time (in ISO 8601 format) for initiation point of a billing cycle, signifying the start of charges for a service or subscription.
                    type: string
                end_time,omitempty:
                    description: The usage type identifier for the usage. This is a single, billable metric for the product.
                    format: date-time
                    type: string
                meta,omitempty:
                    $ref: '#/components/schemas/Metadata'
                start_time,omitempty:
                    description: Date and time (in ISO 8601 format) for termination point of a billing cycle, signifying the end of charges for a service or subscription.
                    format: date-time
                    type: string
                unit,omitempty:
                    type: string
                usage_type,omitempty:
                    description: The unit for the usage as shown on an invoice. If there is no explicit unit, this field will be \"unit\" (e.g., a request with `product_id` of 'cdn_usage' and `usage_type` of 'North America Requests' has no unit, and will return \"unit\").
                    type: string
            type: object
        Stats:
            additionalProperties: true
            description: Stats model
            type: object
        Usagemetric:
            properties:
                last_updated_at,omitempty:
                    type: string
                month,omitempty:
                    description: The usage type identifier for the usage. This is a single, billable metric for the product.
                    type: string
                name,omitempty:
                    description: The geographical area applicable for regionally based products.
                    type: string
                product_id,omitempty:
                    description: The date when the usage metric was last updated.
                    type: string
                quantity,omitempty:
                    description: The raw units measured for the product.
                    format: float
                    type: number
                raw_quantity,omitempty:
                    description: The product identifier associated with the usage type. This corresponds to a Fastly product offering.
                    format: float
                    type: number
                region,omitempty:
                    description: The unit for the usage as shown on an invoice. If there is no explicit unit, this field will be \"unit\" (e.g., a request with `product_id` of 'cdn_usage' and `usage_type` of 'North America Requests' has no unit, and will return \"unit\").
                    type: string
                unit,omitempty:
                    description: The quantity of the usage for the product.
                    type: string
                usage_type,omitempty:
                    description: Full name of the product usage type as it might appear on a customer's invoice.
                    type: string
            type: object
        Version:
            properties:
                active,omitempty:
                    description: A freeform descriptive note.
                    type: boolean
                comment,omitempty:
                    $ref: '#/components/schemas/NullableString'
                deployed,omitempty:
                    description: Whether this version is locked or not. Objects can not be added or edited on locked versions.
                    type: boolean
                locked,omitempty:
                    description: The number of this version.
                    type: boolean
                number,omitempty:
                    description: Unused at this time.
                    format: int32
                    type: integer
                staging,omitempty:
                    description: Unused at this time.
                    type: boolean
                testing,omitempty:
                    type: boolean
            type: object
        VersionDetailSettings:
            properties:
                general.default_host,omitempty:
                    description: The default time-to-live (TTL) for the version.
                    type: string
                general.default_ttl,omitempty:
                    description: Enables serving a stale object if there is an error.
                    format: int32
                    type: integer
                general.stale_if_error,omitempty:
                    description: The default time-to-live (TTL) for serving the stale object for the version.
                    type: boolean
                general.stale_if_error_ttl,omitempty:
                    format: int32
                    type: integer
            type: object
        VersionResponse:
            properties:
                active,omitempty:
                    description: A freeform descriptive note.
                    type: boolean
                comment,omitempty:
                    $ref: '#/components/schemas/NullableString'
                created_at,omitempty:
                    $ref: '#/components/schemas/NullableTime'
                deleted_at,omitempty:
                    $ref: '#/components/schemas/NullableTime'
                deployed,omitempty:
                    description: Whether this version is locked or not. Objects can not be added or edited on locked versions.
                    type: boolean
                locked,omitempty:
                    description: The number of this version.
                    type: boolean
                number,omitempty:
                    description: Unused at this time.
                    format: int32
                    type: integer
                service_id,omitempty:
                    description: A list of environments where the service has been deployed.
                    type: string
                staging,omitempty:
                    description: Unused at this time.
                    type: boolean
                testing,omitempty:
                    description: Date and time in ISO 8601 format.
                    type: boolean
                updated_at,omitempty:
                    $ref: '#/components/schemas/NullableTime'
            type: object
        purgeResponse:
            additionalProperties: true
            description: purgeResponse model
            type: object
    securitySchemes:
        apiKey:
            description: Fastly API key for authentication
            in: header
            name: Fastly-Key
            type: apiKey
info:
    contact:
        email: oss@fastly.com
        name: Fastly Support
        url: https://www.fastly.com/documentation/reference/api/
    description: Via the Fastly API you can perform any of the operations that are possible within the management console, including creating services, domains, and backends, configuring rules or uploading your own application code, as well as account operations such as user administration and billing reports. The API is organized into collections of endpoints that allow manipulation of objects related to Fastly services and accounts. For the most accurate and up-to-date API reference content, visit our [Developer Hub](https://www.fastly.com/documentation/reference/api/)
    license:
        name: MIT
        url: https://opensource.org/licenses/MIT
    title: Fastly API
    version: 1.0.0
openapi: 3.0.3
paths:
    /billing/v3/service-usage-metrics:
        get:
            operationId: GetServiceLevelUsage
            parameters:
                - description: The limit
                  in: query
                  name: limit
                  schema:
                    format: int32
                    minimum: 1
                    type: integer
                - description: The cursor
                  in: query
                  name: cursor
                  schema:
                    type: string
                - description: The service
                  in: query
                  name: service
                  schema:
                    type: string
                - description: The usage type name
                  in: query
                  name: usage_type_name
                  schema:
                    type: string
                - description: The end month
                  in: query
                  name: end_month
                  schema:
                    type: string
                - description: The product id
                  in: query
                  name: product_id
                  schema:
                    type: string
                - description: The start month
                  in: query
                  name: start_month
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Serviceusagemetrics'
                    description: Successful response
                "401":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthorized
            summary: Retrieve service-level usage metrics for services with non-zero usage units.
            tags:
                - billing_usage_metrics
    /billing/v3/usage-metrics:
        get:
            operationId: GetUsageMetrics
            parameters:
                - description: The end month
                  in: query
                  name: end_month
                  schema:
                    type: string
                - description: The start month
                  in: query
                  name: start_month
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Usagemetric'
                    description: Successful response
                "401":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthorized
            summary: Get monthly usage metrics
            tags:
                - billing_usage_metrics
    /metrics/domains/services/{service_id}:
        get:
            operationId: GetDomainInspectorHistorical
            parameters:
                - description: Alphanumeric string identifying the service
                  in: path
                  name: service_id
                  required: true
                  schema:
                    type: string
                - description: The datacenter
                  in: query
                  name: datacenter
                  schema:
                    type: string
                - description: The domain
                  in: query
                  name: domain
                  schema:
                    type: string
                - description: The limit
                  in: query
                  name: limit
                  schema:
                    format: int32
                    minimum: 1
                    type: integer
                - description: The cursor
                  in: query
                  name: cursor
                  schema:
                    type: string
                - description: The start
                  in: query
                  name: start
                  schema:
                    type: string
                - description: The end
                  in: query
                  name: end
                  schema:
                    type: string
                - description: The group by
                  in: query
                  name: group_by
                  schema:
                    type: string
                - description: The metric
                  in: query
                  name: metric
                  schema:
                    type: string
                - description: The region
                  in: query
                  name: region
                  schema:
                    type: string
                - description: The downsample
                  in: query
                  name: downsample
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/HistoricalDomainsResponse'
                    description: Successful response
                "401":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthorized
                "404":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Not found
            summary: Get historical domain data for a service
            tags:
                - domain_inspector_historical
    /metrics/origins/services/{service_id}:
        get:
            operationId: GetOriginInspectorHistorical
            parameters:
                - description: Alphanumeric string identifying the service
                  in: path
                  name: service_id
                  required: true
                  schema:
                    type: string
                - description: The datacenter
                  in: query
                  name: datacenter
                  schema:
                    type: string
                - description: The limit
                  in: query
                  name: limit
                  schema:
                    format: int32
                    minimum: 1
                    type: integer
                - description: The cursor
                  in: query
                  name: cursor
                  schema:
                    type: string
                - description: The start
                  in: query
                  name: start
                  schema:
                    type: string
                - description: The end
                  in: query
                  name: end
                  schema:
                    type: string
                - description: The group by
                  in: query
                  name: group_by
                  schema:
                    type: string
                - description: The metric
                  in: query
                  name: metric
                  schema:
                    type: string
                - description: The host
                  in: query
                  name: host
                  schema:
                    type: string
                - description: The region
                  in: query
                  name: region
                  schema:
                    type: string
                - description: The downsample
                  in: query
                  name: downsample
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/HistoricalOriginsResponse'
                    description: Successful response
                "401":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthorized
                "404":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Not found
            summary: Get historical origin data for a service
            tags:
                - origin_inspector_historical
    /purge/{cached_url}:
        post:
            operationId: PurgeSingleURL
            parameters:
                - description: Alphanumeric string identifying the cached url
                  in: path
                  name: cached_url
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PurgeResponse'
                    description: Successful response
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Bad request
                "401":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthorized
                "404":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Not found
            summary: Purge a URL
            tags:
                - purge
    /service:
        get:
            operationId: ListServices
            parameters:
                - description: The direction
                  in: query
                  name: direction
                  schema:
                    enum:
                        - ascend
                        - descend
                    type: string
                - description: The sort
                  in: query
                  name: sort
                  schema:
                    enum:
                        - created
                        - -created
                        - updated
                        - -updated
                    type: string
                - description: The per page
                  in: query
                  name: per_page
                  schema:
                    format: int32
                    minimum: 1
                    type: integer
                - description: The page
                  in: query
                  name: page
                  schema:
                    format: int32
                    minimum: 1
                    type: integer
            responses:
                "200":
                    description: Successful response
                "401":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthorized
            summary: List services
            tags:
                - service
    /service/{service_id}:
        get:
            operationId: GetService
            parameters:
                - description: Alphanumeric string identifying the service
                  in: path
                  name: service_id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ServiceResponse'
                    description: Successful response
                "401":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthorized
                "404":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Not found
            summary: Get a service
            tags:
                - service
        put:
            operationId: UpdateService
            parameters:
                - description: Alphanumeric string identifying the service
                  in: path
                  name: service_id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ServiceResponse'
                    description: Successful response
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Bad request
                "401":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthorized
                "404":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Not found
            summary: Update a service
            tags:
                - service
    /service/{service_id}/details:
        get:
            operationId: GetServiceDetail
            parameters:
                - description: Alphanumeric string identifying the service
                  in: path
                  name: service_id
                  required: true
                  schema:
                    type: string
                - description: The version
                  in: query
                  name: version
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ServiceDetail'
                    description: Successful response
                "401":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthorized
                "404":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Not found
            summary: Get service details
            tags:
                - service
    /service/{service_id}/diff/from/{from_version_id}/to/{to_version_id}:
        get:
            operationId: DiffServiceVersions
            parameters:
                - description: Alphanumeric string identifying the service
                  in: path
                  name: service_id
                  required: true
                  schema:
                    type: string
                - description: Alphanumeric string identifying the from version
                  in: path
                  name: from_version_id
                  required: true
                  schema:
                    type: string
                - description: Alphanumeric string identifying the to version
                  in: path
                  name: to_version_id
                  required: true
                  schema:
                    type: string
                - description: The format
                  in: query
                  name: format
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DiffResponse'
                    description: Successful response
                "401":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthorized
                "404":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Not found
            summary: Diff two service versions
            tags:
                - diff
    /service/{service_id}/purge:
        post:
            operationId: BulkPurgeTag
            parameters:
                - description: Alphanumeric string identifying the service
                  in: path
                  name: service_id
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/purgeResponse'
                required: true
            responses:
                "200":
                    description: Successful response
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Bad request
                "401":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthorized
                "404":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Not found
            summary: Purge multiple surrogate key tags
            tags:
                - purge
    /service/{service_id}/purge/{surrogate_key}:
        post:
            operationId: PurgeTag
            parameters:
                - description: Alphanumeric string identifying the service
                  in: path
                  name: service_id
                  required: true
                  schema:
                    type: string
                - description: Alphanumeric string identifying the surrogate key
                  in: path
                  name: surrogate_key
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PurgeResponse'
                    description: Successful response
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Bad request
                "401":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthorized
                "404":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Not found
            summary: Purge by surrogate key tag
            tags:
                - purge
    /service/{service_id}/purge_all:
        post:
            operationId: PurgeAll
            parameters:
                - description: Alphanumeric string identifying the service
                  in: path
                  name: service_id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/InlineResponse200'
                    description: Successful response
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Bad request
                "401":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthorized
                "404":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Not found
            summary: Purge everything from a service
            tags:
                - purge
    /service/{service_id}/stats/summary:
        get:
            description: |
                Get the stats from a service for a block of time. This lists all stats by PoP location, starting with AMS.

                **IMPORTANT**: This endpoint requires parameters to select a block of time to query. Use ONE of these parameter combinations:
                - Option 1: `start_time` + `end_time` (for custom date ranges using Unix timestamps)
                - Option 2: `month` + `year` (for monthly data)

                Do not mix parameters from different options. The API will return an error if you provide both timestamp and month/year parameters.
            operationId: GetServiceStats
            parameters:
                - description: Alphanumeric string identifying the service
                  in: path
                  name: service_id
                  required: true
                  schema:
                    type: string
                - description: Unix epoch timestamp (e.g., 1608560817). Required when using timestamp range option. Limits the results to data on or after this time.
                  in: query
                  name: start_time
                  schema:
                    format: int32
                    type: integer
                - description: Unix epoch timestamp (e.g., 1608560817). Required when using timestamp range option. Limits the results to data on or before this time.
                  in: query
                  name: end_time
                  schema:
                    format: int32
                    type: integer
                - description: 2-digit month (e.g., "05" for May). Required when using month/year option.
                  in: query
                  name: month
                  schema:
                    pattern: ^(0[1-9]|1[0-2])$
                    type: string
                - description: 4-digit year (e.g., "2020"). Required when using month/year option.
                  in: query
                  name: year
                  schema:
                    pattern: ^\d{4}$
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Stats'
                    description: Successful response
                "401":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthorized
                "404":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Not found
            summary: Get stats for a service
            tags:
                - stats
    /service/{service_id}/version:
        get:
            operationId: ListServiceVersions
            parameters:
                - description: Alphanumeric string identifying the service
                  in: path
                  name: service_id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: Successful response
                "401":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthorized
                "404":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Not found
            summary: List versions of a service
            tags:
                - version
    /service/{service_id}/version/{version_id}:
        get:
            operationId: GetServiceVersion
            parameters:
                - description: Alphanumeric string identifying the service
                  in: path
                  name: service_id
                  required: true
                  schema:
                    type: string
                - description: Integer identifying a service version
                  in: path
                  name: version_id
                  required: true
                  schema:
                    format: int32
                    type: integer
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/VersionResponse'
                    description: Successful response
                "401":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthorized
                "404":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Not found
            summary: Get a version of a service
            tags:
                - version
    /service/{service_id}/version/{version_id}/activate:
        put:
            operationId: ActivateServiceVersion
            parameters:
                - description: Alphanumeric string identifying the service
                  in: path
                  name: service_id
                  required: true
                  schema:
                    type: string
                - description: Integer identifying a service version
                  in: path
                  name: version_id
                  required: true
                  schema:
                    format: int32
                    type: integer
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/VersionResponse'
                    description: Successful response
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Bad request
                "401":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthorized
                "404":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Not found
            summary: Activate a service version
            tags:
                - version
    /service/{service_id}/version/{version_id}/backend:
        get:
            operationId: ListBackends
            parameters:
                - description: Alphanumeric string identifying the service
                  in: path
                  name: service_id
                  required: true
                  schema:
                    type: string
                - description: Integer identifying a service version
                  in: path
                  name: version_id
                  required: true
                  schema:
                    format: int32
                    type: integer
            responses:
                "200":
                    description: Successful response
                "401":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthorized
                "404":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Not found
            summary: List backends
            tags:
                - backend
        post:
            operationId: CreateBackend
            parameters:
                - description: Alphanumeric string identifying the service
                  in: path
                  name: service_id
                  required: true
                  schema:
                    type: string
                - description: Integer identifying a service version
                  in: path
                  name: version_id
                  required: true
                  schema:
                    format: int32
                    type: integer
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BackendResponse'
                    description: Successful response
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Bad request
                "401":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthorized
                "404":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Not found
            summary: Create a backend
            tags:
                - backend
    /service/{service_id}/version/{version_id}/backend/{backend_name}:
        get:
            operationId: GetBackend
            parameters:
                - description: Alphanumeric string identifying the service
                  in: path
                  name: service_id
                  required: true
                  schema:
                    type: string
                - description: Integer identifying a service version
                  in: path
                  name: version_id
                  required: true
                  schema:
                    format: int32
                    type: integer
                - description: Alphanumeric string identifying the backend name
                  in: path
                  name: backend_name
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BackendResponse'
                    description: Successful response
                "401":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthorized
                "404":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Not found
            summary: Describe a backend
            tags:
                - backend
        put:
            operationId: UpdateBackend
            parameters:
                - description: Alphanumeric string identifying the service
                  in: path
                  name: service_id
                  required: true
                  schema:
                    type: string
                - description: Integer identifying a service version
                  in: path
                  name: version_id
                  required: true
                  schema:
                    format: int32
                    type: integer
                - description: Alphanumeric string identifying the backend name
                  in: path
                  name: backend_name
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BackendResponse'
                    description: Successful response
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Bad request
                "401":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthorized
                "404":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Not found
            summary: Update a backend
            tags:
                - backend
    /service/{service_id}/version/{version_id}/cache_settings:
        get:
            operationId: ListCacheSettings
            parameters:
                - description: Alphanumeric string identifying the service
                  in: path
                  name: service_id
                  required: true
                  schema:
                    type: string
                - description: Integer identifying a service version
                  in: path
                  name: version_id
                  required: true
                  schema:
                    format: int32
                    type: integer
            responses:
                "200":
                    description: Successful response
                "401":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthorized
                "404":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Not found
            summary: List cache settings objects
            tags:
                - cache_settings
        post:
            operationId: CreateCacheSettings
            parameters:
                - description: Alphanumeric string identifying the service
                  in: path
                  name: service_id
                  required: true
                  schema:
                    type: string
                - description: Integer identifying a service version
                  in: path
                  name: version_id
                  required: true
                  schema:
                    format: int32
                    type: integer
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CacheSettingResponse'
                    description: Successful response
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Bad request
                "401":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthorized
                "404":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Not found
            summary: Create a cache settings object
            tags:
                - cache_settings
    /service/{service_id}/version/{version_id}/cache_settings/{cache_settings_name}:
        get:
            operationId: GetCacheSettings
            parameters:
                - description: Alphanumeric string identifying the service
                  in: path
                  name: service_id
                  required: true
                  schema:
                    type: string
                - description: Integer identifying a service version
                  in: path
                  name: version_id
                  required: true
                  schema:
                    format: int32
                    type: integer
                - description: Alphanumeric string identifying the cache settings name
                  in: path
                  name: cache_settings_name
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CacheSettingResponse'
                    description: Successful response
                "401":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthorized
                "404":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Not found
            summary: Get a cache settings object
            tags:
                - cache_settings
        put:
            operationId: UpdateCacheSettings
            parameters:
                - description: Alphanumeric string identifying the service
                  in: path
                  name: service_id
                  required: true
                  schema:
                    type: string
                - description: Integer identifying a service version
                  in: path
                  name: version_id
                  required: true
                  schema:
                    format: int32
                    type: integer
                - description: Alphanumeric string identifying the cache settings name
                  in: path
                  name: cache_settings_name
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CacheSettingResponse'
                    description: Successful response
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Bad request
                "401":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthorized
                "404":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Not found
            summary: Update a cache settings object
            tags:
                - cache_settings
    /service/{service_id}/version/{version_id}/clone:
        put:
            operationId: CloneServiceVersion
            parameters:
                - description: Alphanumeric string identifying the service
                  in: path
                  name: service_id
                  required: true
                  schema:
                    type: string
                - description: Integer identifying a service version
                  in: path
                  name: version_id
                  required: true
                  schema:
                    format: int32
                    type: integer
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Version'
                    description: Successful response
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Bad request
                "401":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthorized
                "404":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Not found
            summary: Clone a service version
            tags:
                - version
    /service/{service_id}/version/{version_id}/deactivate:
        put:
            operationId: DeactivateServiceVersion
            parameters:
                - description: Alphanumeric string identifying the service
                  in: path
                  name: service_id
                  required: true
                  schema:
                    type: string
                - description: Integer identifying a service version
                  in: path
                  name: version_id
                  required: true
                  schema:
                    format: int32
                    type: integer
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/VersionResponse'
                    description: Successful response
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Bad request
                "401":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthorized
                "404":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Not found
            summary: Deactivate a service version
            tags:
                - version
    /service/{service_id}/version/{version_id}/domain:
        get:
            operationId: ListDomains
            parameters:
                - description: Alphanumeric string identifying the service
                  in: path
                  name: service_id
                  required: true
                  schema:
                    type: string
                - description: Integer identifying a service version
                  in: path
                  name: version_id
                  required: true
                  schema:
                    format: int32
                    type: integer
            responses:
                "200":
                    description: Successful response
                "401":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthorized
                "404":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Not found
            summary: List domains
            tags:
                - domain
    /service/{service_id}/version/{version_id}/healthcheck:
        post:
            operationId: CreateHealthcheck
            parameters:
                - description: Alphanumeric string identifying the service
                  in: path
                  name: service_id
                  required: true
                  schema:
                    type: string
                - description: Integer identifying a service version
                  in: path
                  name: version_id
                  required: true
                  schema:
                    format: int32
                    type: integer
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/HealthcheckResponse'
                    description: Successful response
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Bad request
                "401":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthorized
                "404":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Not found
            summary: Create a health check
            tags:
                - healthcheck
    /service/{service_id}/version/{version_id}/lock:
        put:
            operationId: LockServiceVersion
            parameters:
                - description: Alphanumeric string identifying the service
                  in: path
                  name: service_id
                  required: true
                  schema:
                    type: string
                - description: Integer identifying a service version
                  in: path
                  name: version_id
                  required: true
                  schema:
                    format: int32
                    type: integer
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Version'
                    description: Successful response
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Bad request
                "401":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthorized
                "404":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Not found
            summary: Lock a service version
            tags:
                - version
    /service/{service_id}/version/{version_id}/package:
        get:
            operationId: GetPackage
            parameters:
                - description: Alphanumeric string identifying the service
                  in: path
                  name: service_id
                  required: true
                  schema:
                    type: string
                - description: Integer identifying a service version
                  in: path
                  name: version_id
                  required: true
                  schema:
                    format: int32
                    type: integer
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PackageResponse'
                    description: Successful response
                "401":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthorized
                "404":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Not found
            summary: Get details of the service's Compute package.
            tags:
                - package
    /stats:
        get:
            operationId: GetHistStats
            parameters:
                - description: The region
                  in: query
                  name: region
                  schema:
                    type: string
                - description: Timestamp (Unix seconds)
                  in: query
                  name: to
                  schema:
                    format: int64
                    type: integer
                - description: The by
                  in: query
                  name: by
                  schema:
                    type: string
                - description: Timestamp (Unix seconds)
                  in: query
                  name: from
                  schema:
                    format: int64
                    type: integer
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/HistoricalStatsByServiceResponse'
                    description: Successful response
                "401":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthorized
            summary: Get historical stats
            tags:
                - historical
    /stats/service/{service_id}:
        get:
            operationId: GetHistStatsService
            parameters:
                - description: Alphanumeric string identifying the service
                  in: path
                  name: service_id
                  required: true
                  schema:
                    type: string
                - description: The region
                  in: query
                  name: region
                  schema:
                    type: string
                - description: Timestamp (Unix seconds)
                  in: query
                  name: to
                  schema:
                    format: int64
                    type: integer
                - description: The by
                  in: query
                  name: by
                  schema:
                    type: string
                - description: Timestamp (Unix seconds)
                  in: query
                  name: from
                  schema:
                    format: int64
                    type: integer
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/HistoricalStatsAggregatedResponse'
                    description: Successful response
                "401":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthorized
                "404":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Not found
            summary: Get historical stats for a single service
            tags:
                - historical
    /stats/usage_by_service:
        get:
            operationId: GetUsageService
            parameters:
                - description: Timestamp (Unix seconds)
                  in: query
                  name: to
                  schema:
                    format: int64
                    type: integer
                - description: Timestamp (Unix seconds)
                  in: query
                  name: from
                  schema:
                    format: int64
                    type: integer
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/HistoricalUsageServiceResponse'
                    description: Successful response
                "401":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthorized
            summary: Get usage statistics per service
            tags:
                - historical
security:
    - apiKey: []
servers:
    - description: Fastly API server
      url: https://api.fastly.com
tags:
    - description: Access Control List management
      name: acl
    - description: ACL entry management
      name: acl_entry
    - description: Operations related to acls in compute
      name: acls_in_compute
    - description: Operations related to apex redirect
      name: apex_redirect
    - description: Automation token management
      name: automation_tokens
    - description: Backend server configuration
      name: backend
    - description: Billing address management
      name: billing_address
    - description: Invoice and billing history
      name: billing_invoices
    - description: Operations related to billing usage metrics
      name: billing_usage_metrics
    - description: Cache configuration and TTL settings
      name: cache_settings
    - description: Conditional logic for configurations
      name: condition
    - description: Configuration store management
      name: config_store
    - description: Operations related to config store item
      name: config_store_item
    - description: Operations related to contact
      name: contact
    - description: Operations related to content
      name: content
    - description: Customer account management
      name: customer
    - description: Operations related to customer addresses
      name: customer_addresses
    - description: Operations related to ddos protection
      name: ddos_protection
    - description: Edge dictionary management
      name: dictionary
    - description: Operations related to dictionary info
      name: dictionary_info
    - description: Dictionary entry management
      name: dictionary_item
    - description: Operations related to diff
      name: diff
    - description: Load balancing director configuration
      name: director
    - description: Director backend management
      name: director_backend
    - description: Domain configuration for services
      name: domain
    - description: Operations related to domain inspector historical
      name: domain_inspector_historical
    - description: Operations related to domain inspector realtime
      name: domain_inspector_realtime
    - description: Operations related to domain ownerships
      name: domain_ownerships
    - description: Operations related to events
      name: events
    - description: Gzip compression settings
      name: gzip
    - description: HTTP header manipulation
      name: header
    - description: Backend health check configuration
      name: healthcheck
    - description: Historical data access
      name: historical
    - description: Operations related to http3
      name: http3
    - description: IAM permission management
      name: iam_permissions
    - description: IAM role management
      name: iam_roles
    - description: IAM service group management
      name: iam_service_groups
    - description: IAM user group management
      name: iam_user_groups
    - description: Operations related to image optimizer default settings
      name: image_optimizer_default_settings
    - description: Operations related to insights
      name: insights
    - description: User invitation management
      name: invitations
    - description: Operations related to kv store
      name: kv_store
    - description: Operations related to kv store item
      name: kv_store_item
    - description: Azure Blob Storage logging
      name: logging_azureblob
    - description: Google BigQuery logging
      name: logging_bigquery
    - description: Operations related to logging cloudfiles
      name: logging_cloudfiles
    - description: Datadog logging integration
      name: logging_datadog
    - description: Operations related to logging digitalocean
      name: logging_digitalocean
    - description: Operations related to logging elasticsearch
      name: logging_elasticsearch
    - description: FTP logging endpoint
      name: logging_ftp
    - description: Google Cloud Storage logging
      name: logging_gcs
    - description: Operations related to logging grafanacloudlogs
      name: logging_grafanacloudlogs
    - description: Operations related to logging heroku
      name: logging_heroku
    - description: Operations related to logging honeycomb
      name: logging_honeycomb
    - description: HTTPS logging endpoint
      name: logging_https
    - description: Operations related to logging kafka
      name: logging_kafka
    - description: Operations related to logging kinesis
      name: logging_kinesis
    - description: Operations related to logging logentries
      name: logging_logentries
    - description: Operations related to logging loggly
      name: logging_loggly
    - description: Operations related to logging logshuttle
      name: logging_logshuttle
    - description: Operations related to logging newrelic
      name: logging_newrelic
    - description: Operations related to logging newrelicotlp
      name: logging_newrelicotlp
    - description: Operations related to logging openstack
      name: logging_openstack
    - description: Operations related to logging papertrail
      name: logging_papertrail
    - description: Operations related to logging pubsub
      name: logging_pubsub
    - description: Amazon S3 logging endpoint
      name: logging_s3
    - description: Operations related to logging scalyr
      name: logging_scalyr
    - description: SFTP logging endpoint
      name: logging_sftp
    - description: Splunk logging integration
      name: logging_splunk
    - description: Operations related to logging sumologic
      name: logging_sumologic
    - description: Syslog logging endpoint
      name: logging_syslog
    - description: Operations related to mutual authentication
      name: mutual_authentication
    - description: Operations related to object storage access keys
      name: object_storage_access_keys
    - description: Operations related to observability custom dashboards
      name: observability_custom_dashboards
    - description: Operations related to origin inspector historical
      name: origin_inspector_historical
    - description: Operations related to origin inspector realtime
      name: origin_inspector_realtime
    - description: Operations related to package
      name: package
    - description: Operations related to pool
      name: pool
    - description: Operations related to pop
      name: pop
    - description: Operations related to product ai accelerator
      name: product_ai_accelerator
    - description: Operations related to product bot management
      name: product_bot_management
    - description: Operations related to product brotli compression
      name: product_brotli_compression
    - description: Operations related to product ddos protection
      name: product_ddos_protection
    - description: Operations related to product domain inspector
      name: product_domain_inspector
    - description: Operations related to product fanout
      name: product_fanout
    - description: Operations related to product image optimizer
      name: product_image_optimizer
    - description: Operations related to product log explorer insights
      name: product_log_explorer_insights
    - description: Operations related to product ngwaf
      name: product_ngwaf
    - description: Operations related to product object storage
      name: product_object_storage
    - description: Operations related to product origin inspector
      name: product_origin_inspector
    - description: Operations related to product websockets
      name: product_websockets
    - description: Operations related to public ip list
      name: public_ip_list
    - description: Content purging operations
      name: purge
    - description: Rate limiting configuration
      name: rate_limiter
    - description: Real-time analytics data
      name: realtime
    - description: Request handling configuration
      name: request_settings
    - description: Operations related to resource
      name: resource
    - description: Synthetic response generation
      name: response_object
    - description: Secret storage management
      name: secret_store
    - description: Operations related to secret store item
      name: secret_store_item
    - description: Operations related to server
      name: server
    - description: Core service management operations
      name: service
    - description: Operations related to service authorizations
      name: service_authorizations
    - description: Operations related to settings
      name: settings
    - description: Operations related to snippet
      name: snippet
    - description: Operations related to star
      name: star
    - description: Historical statistics and analytics
      name: stats
    - description: Operations related to sudo
      name: sudo
    - description: TLS certificate activations
      name: tls_activations
    - description: Operations related to tls bulk certificates
      name: tls_bulk_certificates
    - description: TLS certificate management
      name: tls_certificates
    - description: TLS configuration profiles
      name: tls_configurations
    - description: Operations related to tls csrs
      name: tls_csrs
    - description: TLS domain associations
      name: tls_domains
    - description: TLS private key management
      name: tls_private_keys
    - description: Operations related to tls subscriptions
      name: tls_subscriptions
    - description: API token management
      name: tokens
    - description: User account management
      name: user
    - description: VCL (Varnish Configuration Language) management
      name: vcl
    - description: VCL version comparison
      name: vcl_diff
    - description: Service version management
      name: version
    - description: Operations related to whole platform ddos historical
      name: whole_platform_ddos_historical
