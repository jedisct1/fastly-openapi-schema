openapi: 3.0.3
info:
  title: Fastly API
  version: 1.0.0
  description: Via the Fastly API you can perform any of the operations that are possible within the management console, including creating services, domains, and backends, configuring rules or uploading
    your own application code, as well as account operations such as user administration and billing reports. The API is organized into collections of endpoints that allow manipulation of objects related
    to Fastly services and accounts. For the most accurate and up-to-date API reference content, visit our [Developer Hub](https://www.fastly.com/documentation/reference/api/)
  contact:
    name: Fastly Support
    email: oss@fastly.com
    url: https://www.fastly.com/documentation/reference/api/
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
servers:
- url: https://api.fastly.com
  description: Fastly API server
security:
- apiKey: []
tags:
- name: acl
  description: Access Control List management
- name: acl_entry
  description: ACL entry management
- name: acls_in_compute
  description: Operations related to acls in compute
- name: apex_redirect
  description: Operations related to apex redirect
- name: automation_tokens
  description: Automation token management
- name: backend
  description: Backend server configuration
- name: billing_address
  description: Billing address management
- name: billing_invoices
  description: Invoice and billing history
- name: billing_usage_metrics
  description: Operations related to billing usage metrics
- name: cache_settings
  description: Cache configuration and TTL settings
- name: condition
  description: Conditional logic for configurations
- name: config_store
  description: Configuration store management
- name: config_store_item
  description: Operations related to config store item
- name: contact
  description: Operations related to contact
- name: content
  description: Operations related to content
- name: customer
  description: Customer account management
- name: customer_addresses
  description: Operations related to customer addresses
- name: ddos_protection
  description: Operations related to ddos protection
- name: dictionary
  description: Edge dictionary management
- name: dictionary_info
  description: Operations related to dictionary info
- name: dictionary_item
  description: Dictionary entry management
- name: diff
  description: Operations related to diff
- name: director
  description: Load balancing director configuration
- name: director_backend
  description: Director backend management
- name: domain
  description: Domain configuration for services
- name: domain_inspector_historical
  description: Operations related to domain inspector historical
- name: domain_inspector_realtime
  description: Operations related to domain inspector realtime
- name: domain_ownerships
  description: Operations related to domain ownerships
- name: events
  description: Operations related to events
- name: gzip
  description: Gzip compression settings
- name: header
  description: HTTP header manipulation
- name: healthcheck
  description: Backend health check configuration
- name: historical
  description: Historical data access
- name: http3
  description: Operations related to http3
- name: iam_permissions
  description: IAM permission management
- name: iam_roles
  description: IAM role management
- name: iam_service_groups
  description: IAM service group management
- name: iam_user_groups
  description: IAM user group management
- name: image_optimizer_default_settings
  description: Operations related to image optimizer default settings
- name: insights
  description: Operations related to insights
- name: invitations
  description: User invitation management
- name: kv_store
  description: Operations related to kv store
- name: kv_store_item
  description: Operations related to kv store item
- name: logging_azureblob
  description: Azure Blob Storage logging
- name: logging_bigquery
  description: Google BigQuery logging
- name: logging_cloudfiles
  description: Operations related to logging cloudfiles
- name: logging_datadog
  description: Datadog logging integration
- name: logging_digitalocean
  description: Operations related to logging digitalocean
- name: logging_elasticsearch
  description: Operations related to logging elasticsearch
- name: logging_ftp
  description: FTP logging endpoint
- name: logging_gcs
  description: Google Cloud Storage logging
- name: logging_grafanacloudlogs
  description: Operations related to logging grafanacloudlogs
- name: logging_heroku
  description: Operations related to logging heroku
- name: logging_honeycomb
  description: Operations related to logging honeycomb
- name: logging_https
  description: HTTPS logging endpoint
- name: logging_kafka
  description: Operations related to logging kafka
- name: logging_kinesis
  description: Operations related to logging kinesis
- name: logging_logentries
  description: Operations related to logging logentries
- name: logging_loggly
  description: Operations related to logging loggly
- name: logging_logshuttle
  description: Operations related to logging logshuttle
- name: logging_newrelic
  description: Operations related to logging newrelic
- name: logging_newrelicotlp
  description: Operations related to logging newrelicotlp
- name: logging_openstack
  description: Operations related to logging openstack
- name: logging_papertrail
  description: Operations related to logging papertrail
- name: logging_pubsub
  description: Operations related to logging pubsub
- name: logging_s3
  description: Amazon S3 logging endpoint
- name: logging_scalyr
  description: Operations related to logging scalyr
- name: logging_sftp
  description: SFTP logging endpoint
- name: logging_splunk
  description: Splunk logging integration
- name: logging_sumologic
  description: Operations related to logging sumologic
- name: logging_syslog
  description: Syslog logging endpoint
- name: mutual_authentication
  description: Operations related to mutual authentication
- name: object_storage_access_keys
  description: Operations related to object storage access keys
- name: observability_custom_dashboards
  description: Operations related to observability custom dashboards
- name: origin_inspector_historical
  description: Operations related to origin inspector historical
- name: origin_inspector_realtime
  description: Operations related to origin inspector realtime
- name: package
  description: Operations related to package
- name: pool
  description: Operations related to pool
- name: pop
  description: Operations related to pop
- name: product_ai_accelerator
  description: Operations related to product ai accelerator
- name: product_bot_management
  description: Operations related to product bot management
- name: product_brotli_compression
  description: Operations related to product brotli compression
- name: product_ddos_protection
  description: Operations related to product ddos protection
- name: product_domain_inspector
  description: Operations related to product domain inspector
- name: product_fanout
  description: Operations related to product fanout
- name: product_image_optimizer
  description: Operations related to product image optimizer
- name: product_log_explorer_insights
  description: Operations related to product log explorer insights
- name: product_ngwaf
  description: Operations related to product ngwaf
- name: product_object_storage
  description: Operations related to product object storage
- name: product_origin_inspector
  description: Operations related to product origin inspector
- name: product_websockets
  description: Operations related to product websockets
- name: public_ip_list
  description: Operations related to public ip list
- name: purge
  description: Content purging operations
- name: rate_limiter
  description: Rate limiting configuration
- name: realtime
  description: Real-time analytics data
- name: request_settings
  description: Request handling configuration
- name: resource
  description: Operations related to resource
- name: response_object
  description: Synthetic response generation
- name: secret_store
  description: Secret storage management
- name: secret_store_item
  description: Operations related to secret store item
- name: server
  description: Operations related to server
- name: service
  description: Core service management operations
- name: service_authorizations
  description: Operations related to service authorizations
- name: settings
  description: Operations related to settings
- name: snippet
  description: Operations related to snippet
- name: star
  description: Operations related to star
- name: stats
  description: Historical statistics and analytics
- name: sudo
  description: Operations related to sudo
- name: tls_activations
  description: TLS certificate activations
- name: tls_bulk_certificates
  description: Operations related to tls bulk certificates
- name: tls_certificates
  description: TLS certificate management
- name: tls_configurations
  description: TLS configuration profiles
- name: tls_csrs
  description: Operations related to tls csrs
- name: tls_domains
  description: TLS domain associations
- name: tls_private_keys
  description: TLS private key management
- name: tls_subscriptions
  description: Operations related to tls subscriptions
- name: tokens
  description: API token management
- name: user
  description: User account management
- name: vcl
  description: VCL (Varnish Configuration Language) management
- name: vcl_diff
  description: VCL version comparison
- name: version
  description: Service version management
- name: whole_platform_ddos_historical
  description: Operations related to whole platform ddos historical
paths:
  /apex-redirects/{apex_redirect_id}:
    delete:
      operationId: DeleteApexRedirect
      summary: Delete an apex redirect
      tags:
      - apex_redirect
      parameters:
      - name: apex_redirect_id
        in: path
        required: true
        description: Alphanumeric string identifying the apex redirect
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse200'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      operationId: GetApexRedirect
      summary: Get an apex redirect
      tags:
      - apex_redirect
      parameters:
      - name: apex_redirect_id
        in: path
        required: true
        description: Alphanumeric string identifying the apex redirect
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApexRedirect'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      operationId: UpdateApexRedirect
      summary: Update an apex redirect
      tags:
      - apex_redirect
      parameters:
      - name: apex_redirect_id
        in: path
        required: true
        description: Alphanumeric string identifying the apex redirect
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApexRedirect'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /automation-tokens:
    post:
      operationId: CreateAutomationToken
      summary: Create Automation Token
      tags:
      - automation_tokens
      parameters: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutomationTokenCreateResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/automationTokenCreateRequest'
        required: true
    get:
      operationId: ListAutomationTokens
      summary: List Customer Automation Tokens
      tags:
      - automation_tokens
      parameters:
      - name: per_page
        in: query
        required: false
        description: The per page
        schema:
          type: integer
          format: int32
          minimum: 1
      - name: page
        in: query
        required: false
        description: The page
        schema:
          type: integer
          format: int32
          minimum: 1
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /automation-tokens/{id}:
    get:
      operationId: GetAutomationTokenID
      summary: Retrieve an Automation Token by ID
      tags:
      - automation_tokens
      parameters:
      - name: id
        in: path
        required: true
        description: Alphanumeric string identifying the id
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutomationTokenResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      operationId: RevokeAutomationTokenID
      summary: Revoke an Automation Token by ID
      tags:
      - automation_tokens
      parameters:
      - name: id
        in: path
        required: true
        description: Alphanumeric string identifying the id
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutomationTokenErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /automation-tokens/{id}/services:
    get:
      operationId: GetAutomationTokensIDServices
      summary: List Automation Token Services
      tags:
      - automation_tokens
      parameters:
      - name: id
        in: path
        required: true
        description: Alphanumeric string identifying the id
        schema:
          type: string
      - name: per_page
        in: query
        required: false
        description: The per page
        schema:
          type: integer
          format: int32
          minimum: 1
      - name: page
        in: query
        required: false
        description: The page
        schema:
          type: integer
          format: int32
          minimum: 1
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse2001'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /billing/v3/customer-addresses:
    post:
      operationId: CreateCustomerAddress
      summary: Creates an address associated with a customer account.
      tags:
      - customer_addresses
      parameters: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse201'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/customerAddress'
        required: true
    get:
      operationId: ListCustomerAddresses
      summary: Return the list of addresses associated with a customer account.
      tags:
      - customer_addresses
      parameters: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCustomerAddressesResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /billing/v3/customer-addresses/{type}:
    put:
      operationId: UpdateCustomerAddress
      summary: Updates an address associated with a customer account.
      tags:
      - customer_addresses
      parameters:
      - name: type
        in: path
        required: true
        description: Alphanumeric string identifying the type
        schema:
          type: string
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/customerAddress'
        required: true
  /billing/v3/invoices:
    get:
      operationId: ListInvoices
      summary: List of invoices.
      tags:
      - billing_invoices
      parameters:
      - name: billing_start_date
        in: query
        required: false
        description: The billing start date
        schema:
          type: string
      - name: limit
        in: query
        required: false
        description: The limit
        schema:
          type: integer
          format: int32
          minimum: 1
      - name: cursor
        in: query
        required: false
        description: The cursor
        schema:
          type: string
      - name: billing_end_date
        in: query
        required: false
        description: The billing end date
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListEomInvoicesResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /billing/v3/invoices/month-to-date:
    get:
      operationId: GetMonthToDateInvoice
      summary: Get month-to-date invoice.
      tags:
      - billing_invoices
      parameters: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MtdInvoiceResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /billing/v3/invoices/{invoice_id}:
    get:
      operationId: GetInvoiceByInvoiceID
      summary: Get invoice by ID.
      tags:
      - billing_invoices
      parameters:
      - name: invoice_id
        in: path
        required: true
        description: Alphanumeric string identifying the invoice
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EomInvoiceResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /billing/v3/service-usage-metrics:
    get:
      operationId: GetServiceLevelUsage
      summary: Retrieve service-level usage metrics for services with non-zero usage units.
      tags:
      - billing_usage_metrics
      parameters:
      - name: limit
        in: query
        required: false
        description: The limit
        schema:
          type: integer
          format: int32
          minimum: 1
      - name: cursor
        in: query
        required: false
        description: The cursor
        schema:
          type: string
      - name: service
        in: query
        required: false
        description: The service
        schema:
          type: string
      - name: usage_type_name
        in: query
        required: false
        description: The usage type name
        schema:
          type: string
      - name: end_month
        in: query
        required: false
        description: The end month
        schema:
          type: string
      - name: product_id
        in: query
        required: false
        description: The product id
        schema:
          type: string
      - name: start_month
        in: query
        required: false
        description: The start month
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Serviceusagemetrics'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /billing/v3/usage-metrics:
    get:
      operationId: GetUsageMetrics
      summary: Get monthly usage metrics
      tags:
      - billing_usage_metrics
      parameters:
      - name: end_month
        in: query
        required: false
        description: The end month
        schema:
          type: string
      - name: start_month
        in: query
        required: false
        description: The start month
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Usagemetric'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /content/edge_check:
    get:
      operationId: ContentCheck
      summary: Check status of content in each POP's cache
      tags:
      - content
      parameters:
      - name: url
        in: query
        required: false
        description: The url
        schema:
          type: string
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /current_customer:
    get:
      operationId: GetLoggedInCustomer
      summary: Get the logged in customer
      tags:
      - customer
      parameters: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /current_user:
    get:
      operationId: GetCurrentUser
      summary: Get the current user
      tags:
      - user
      parameters: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /current_user/password:
    post:
      operationId: UpdateUserPassword
      summary: Update the user's password
      tags:
      - user
      parameters: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /customer/{customer_id}:
    delete:
      operationId: DeleteCustomer
      summary: Delete a customer
      tags:
      - customer
      parameters:
      - name: customer_id
        in: path
        required: true
        description: Alphanumeric string identifying the customer
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse200'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      operationId: GetCustomer
      summary: Get a customer
      tags:
      - customer
      parameters:
      - name: customer_id
        in: path
        required: true
        description: Alphanumeric string identifying the customer
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      operationId: UpdateCustomer
      summary: Update a customer
      tags:
      - customer
      parameters:
      - name: customer_id
        in: path
        required: true
        description: Alphanumeric string identifying the customer
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /customer/{customer_id}/billing_address:
    post:
      operationId: AddBillingAddr
      summary: Add a billing address to a customer
      tags:
      - billing_address
      parameters:
      - name: customer_id
        in: path
        required: true
        description: Alphanumeric string identifying the customer
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillingAddressResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/billingAddressRequest'
        required: true
    delete:
      operationId: DeleteBillingAddr
      summary: Delete a billing address
      tags:
      - billing_address
      parameters:
      - name: customer_id
        in: path
        required: true
        description: Alphanumeric string identifying the customer
        schema:
          type: string
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      operationId: GetBillingAddr
      summary: Get a billing address
      tags:
      - billing_address
      parameters:
      - name: customer_id
        in: path
        required: true
        description: Alphanumeric string identifying the customer
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillingAddressResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      operationId: UpdateBillingAddr
      summary: Update a billing address
      tags:
      - billing_address
      parameters:
      - name: customer_id
        in: path
        required: true
        description: Alphanumeric string identifying the customer
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillingAddressResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/updateBillingAddressRequest'
        required: true
  /customer/{customer_id}/contacts:
    post:
      operationId: CreateContacts
      summary: Add a new customer contact
      tags:
      - contact
      parameters:
      - name: customer_id
        in: path
        required: true
        description: Alphanumeric string identifying the customer
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      operationId: ListContacts
      summary: List contacts
      tags:
      - contact
      parameters:
      - name: customer_id
        in: path
        required: true
        description: Alphanumeric string identifying the customer
        schema:
          type: string
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /customer/{customer_id}/contacts/{contact_id}:
    delete:
      operationId: DeleteContact
      summary: Delete a contact
      tags:
      - contact
      parameters:
      - name: customer_id
        in: path
        required: true
        description: Alphanumeric string identifying the customer
        schema:
          type: string
      - name: contact_id
        in: path
        required: true
        description: Alphanumeric string identifying the contact
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse200'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /customer/{customer_id}/tokens:
    get:
      operationId: ListTokensCustomer
      summary: List tokens for a customer
      tags:
      - tokens
      parameters:
      - name: customer_id
        in: path
        required: true
        description: Alphanumeric string identifying the customer
        schema:
          type: string
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /customer/{customer_id}/users:
    get:
      operationId: ListUsers
      summary: List users
      tags:
      - customer
      parameters:
      - name: customer_id
        in: path
        required: true
        description: Alphanumeric string identifying the customer
        schema:
          type: string
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /datacenters:
    get:
      operationId: ListPops
      summary: List Fastly POPs
      tags:
      - pop
      parameters: []
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /ddos-protection/v1/events:
    get:
      operationId: DdosProtectionEventList
      summary: Get events
      tags:
      - ddos_protection
      parameters:
      - name: from
        in: query
        required: false
        description: Timestamp (Unix seconds)
        schema:
          type: integer
          format: int64
      - name: limit
        in: query
        required: false
        description: The limit
        schema:
          type: integer
          format: int32
          minimum: 1
      - name: cursor
        in: query
        required: false
        description: The cursor
        schema:
          type: string
      - name: name
        in: query
        required: false
        description: The name
        schema:
          type: string
      - name: to
        in: query
        required: false
        description: Timestamp (Unix seconds)
        schema:
          type: integer
          format: int64
      - name: service_id
        in: query
        required: false
        description: The service id
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse2002'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /ddos-protection/v1/events/{event_id}:
    get:
      operationId: DdosProtectionEventGet
      summary: Get event by ID
      tags:
      - ddos_protection
      parameters:
      - name: event_id
        in: path
        required: true
        description: Alphanumeric string identifying the event
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DdosProtectionEvent'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /ddos-protection/v1/events/{event_id}/rules:
    get:
      operationId: DdosProtectionEventRuleList
      summary: Get all rules for an event
      tags:
      - ddos_protection
      parameters:
      - name: event_id
        in: path
        required: true
        description: Alphanumeric string identifying the event
        schema:
          type: string
      - name: limit
        in: query
        required: false
        description: The limit
        schema:
          type: integer
          format: int32
          minimum: 1
      - name: cursor
        in: query
        required: false
        description: The cursor
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse2003'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /ddos-protection/v1/events/{event_id}/rules/{rule_id}/traffic-stats:
    get:
      operationId: DdosProtectionTrafficStatsRuleGet
      summary: Get traffic stats for a rule
      tags:
      - ddos_protection
      parameters:
      - name: event_id
        in: path
        required: true
        description: Alphanumeric string identifying the event
        schema:
          type: string
      - name: rule_id
        in: path
        required: true
        description: Alphanumeric string identifying the rule
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DdosProtectionTrafficStats'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /ddos-protection/v1/rules/{rule_id}:
    get:
      operationId: DdosProtectionRuleGet
      summary: Get a rule by ID
      tags:
      - ddos_protection
      parameters:
      - name: rule_id
        in: path
        required: true
        description: Alphanumeric string identifying the rule
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DdosProtectionRule'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /domain-ownerships:
    get:
      operationId: ListDomainOwnerships
      summary: List domain-ownerships
      tags:
      - domain_ownerships
      parameters: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse2004'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /enabled-products/v1/ai_accelerator:
    delete:
      operationId: DisableProductAiAccelerator
      summary: Disable product
      tags:
      - product_ai_accelerator
      parameters: []
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      operationId: EnableAiAccelerator
      summary: Enable product
      tags:
      - product_ai_accelerator
      parameters: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AiAcceleratorResponseBodyEnable'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      operationId: GetAiAccelerator
      summary: Get product enablement status
      tags:
      - product_ai_accelerator
      parameters: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AiAcceleratorResponseBodyEnable'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /enabled-products/v1/bot_management/services:
    get:
      operationId: GetServicesProductBotManagement
      summary: Get services with product enabled
      tags:
      - product_bot_management
      parameters: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BotManagementResponseBodyGetAllServices'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /enabled-products/v1/bot_management/services/{service_id}:
    delete:
      operationId: DisableProductBotManagement
      summary: Disable product
      tags:
      - product_bot_management
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      operationId: EnableProductBotManagement
      summary: Enable product
      tags:
      - product_bot_management
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BotManagementResponseBodyEnable'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      operationId: GetProductBotManagement
      summary: Get product enablement status
      tags:
      - product_bot_management
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BotManagementResponseBodyEnable'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /enabled-products/v1/brotli_compression/services:
    get:
      operationId: GetServicesProductBrotliCompression
      summary: Get services with product enabled
      tags:
      - product_brotli_compression
      parameters: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrotliCompressionResponseBodyGetAllServices'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /enabled-products/v1/brotli_compression/services/{service_id}:
    delete:
      operationId: DisableProductBrotliCompression
      summary: Disable product
      tags:
      - product_brotli_compression
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      operationId: EnableProductBrotliCompression
      summary: Enable product
      tags:
      - product_brotli_compression
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrotliCompressionResponseBodyEnable'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      operationId: GetProductBrotliCompression
      summary: Get product enablement status
      tags:
      - product_brotli_compression
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrotliCompressionResponseBodyEnable'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /enabled-products/v1/ddos_protection/services:
    get:
      operationId: GetServicesProductDdosProtection
      summary: Get services with product enabled
      tags:
      - product_ddos_protection
      parameters: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DdosProtectionResponseBodyGetAllServices'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /enabled-products/v1/ddos_protection/services/{service_id}:
    delete:
      operationId: DisableProductDdosProtection
      summary: Disable product
      tags:
      - product_ddos_protection
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      operationId: EnableProductDdosProtection
      summary: Enable product
      tags:
      - product_ddos_protection
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DdosProtectionResponseEnable'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      operationId: GetProductDdosProtection
      summary: Get product enablement status
      tags:
      - product_ddos_protection
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DdosProtectionResponseEnable'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /enabled-products/v1/ddos_protection/services/{service_id}/configuration:
    get:
      operationId: GetProductDdosProtectionConfiguration
      summary: Get configuration
      tags:
      - product_ddos_protection
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DdosProtectionResponseConfigure'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      operationId: SetProductDdosProtectionConfiguration
      summary: Update configuration
      tags:
      - product_ddos_protection
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DdosProtectionResponseConfigure'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ddosProtectionRequestUpdateConfiguration'
        required: true
  /enabled-products/v1/domain_inspector/services:
    get:
      operationId: GetServicesProductDomainInspector
      summary: Get services with product enabled
      tags:
      - product_domain_inspector
      parameters: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainInspectorResponseBodyGetAllServices'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /enabled-products/v1/domain_inspector/services/{service_id}:
    delete:
      operationId: DisableProductDomainInspector
      summary: Disable product
      tags:
      - product_domain_inspector
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      operationId: EnableProductDomainInspector
      summary: Enable product
      tags:
      - product_domain_inspector
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainInspectorResponseBodyEnable'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      operationId: GetProductDomainInspector
      summary: Get product enablement status
      tags:
      - product_domain_inspector
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainInspectorResponseBodyEnable'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /enabled-products/v1/fanout/services:
    get:
      operationId: GetServicesProductFanout
      summary: Get services with product enabled
      tags:
      - product_fanout
      parameters: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FanoutResponseBodyGetAllServices'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /enabled-products/v1/fanout/services/{service_id}:
    delete:
      operationId: DisableProductFanout
      summary: Disable product
      tags:
      - product_fanout
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      operationId: EnableProductFanout
      summary: Enable product
      tags:
      - product_fanout
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FanoutResponseBodyEnable'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      operationId: GetProductFanout
      summary: Get product enablement status
      tags:
      - product_fanout
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FanoutResponseBodyEnable'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /enabled-products/v1/image_optimizer/services:
    get:
      operationId: GetServicesProductImageOptimizer
      summary: Get services with product enabled
      tags:
      - product_image_optimizer
      parameters: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageOptimizerResponseBodyGetAllServices'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /enabled-products/v1/image_optimizer/services/{service_id}:
    delete:
      operationId: DisableProductImageOptimizer
      summary: Disable product
      tags:
      - product_image_optimizer
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      operationId: EnableProductImageOptimizer
      summary: Enable product
      tags:
      - product_image_optimizer
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageOptimizerResponseBodyEnable'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      operationId: GetProductImageOptimizer
      summary: Get product enablement status
      tags:
      - product_image_optimizer
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageOptimizerResponseBodyEnable'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /enabled-products/v1/log_explorer_insights/services:
    get:
      operationId: GetServicesProductLogExplorerInsights
      summary: Get services with product enabled
      tags:
      - product_log_explorer_insights
      parameters: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogExplorerInsightsResponseBodyGetAllServices'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /enabled-products/v1/log_explorer_insights/services/{service_id}:
    delete:
      operationId: DisableProductLogExplorerInsights
      summary: Disable product
      tags:
      - product_log_explorer_insights
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      operationId: EnableProductLogExplorerInsights
      summary: Enable product
      tags:
      - product_log_explorer_insights
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogExplorerInsightsResponseBodyEnable'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      operationId: GetProductLogExplorerInsights
      summary: Get product enablement status
      tags:
      - product_log_explorer_insights
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogExplorerInsightsResponseBodyEnable'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /enabled-products/v1/ngwaf/services:
    get:
      operationId: GetServicesProductNgwaf
      summary: Get services with product enabled
      tags:
      - product_ngwaf
      parameters: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NgwafResponseBodyGetAllServices'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /enabled-products/v1/ngwaf/services/{service_id}:
    delete:
      operationId: DisableProductNgwaf
      summary: Disable product
      tags:
      - product_ngwaf
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      operationId: EnableProductNgwaf
      summary: Enable product
      tags:
      - product_ngwaf
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NgwafResponseEnable'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ngwafRequestEnable'
        required: true
    get:
      operationId: GetProductNgwaf
      summary: Get product enablement status
      tags:
      - product_ngwaf
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NgwafResponseEnable'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /enabled-products/v1/ngwaf/services/{service_id}/configuration:
    get:
      operationId: GetProductNgwafConfiguration
      summary: Get configuration
      tags:
      - product_ngwaf
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NgwafResponseConfigure'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      operationId: SetProductNgwafConfiguration
      summary: Update configuration
      tags:
      - product_ngwaf
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NgwafResponseConfigure'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ngwafRequestUpdateConfiguration'
        required: true
  /enabled-products/v1/object_storage:
    delete:
      operationId: DisableProductObjectStorage
      summary: Disable product
      tags:
      - product_object_storage
      parameters: []
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      operationId: EnableObjectStorage
      summary: Enable product
      tags:
      - product_object_storage
      parameters: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectStorageResponseBodyEnable'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      operationId: GetObjectStorage
      summary: Get product enablement status
      tags:
      - product_object_storage
      parameters: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectStorageResponseBodyEnable'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /enabled-products/v1/origin_inspector/services:
    get:
      operationId: GetServicesProductOriginInspector
      summary: Get services with product enabled
      tags:
      - product_origin_inspector
      parameters: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OriginInspectorResponseBodyGetAllServices'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /enabled-products/v1/origin_inspector/services/{service_id}:
    delete:
      operationId: DisableProductOriginInspector
      summary: Disable product
      tags:
      - product_origin_inspector
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      operationId: EnableProductOriginInspector
      summary: Enable product
      tags:
      - product_origin_inspector
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OriginInspectorResponseBodyEnable'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      operationId: GetProductOriginInspector
      summary: Get product enablement status
      tags:
      - product_origin_inspector
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OriginInspectorResponseBodyEnable'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /enabled-products/v1/websockets/services:
    get:
      operationId: GetServicesProductWebsockets
      summary: Get services with product enabled
      tags:
      - product_websockets
      parameters: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebsocketsResponseBodyGetAllServices'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /enabled-products/v1/websockets/services/{service_id}:
    delete:
      operationId: DisableProductWebsockets
      summary: Disable product
      tags:
      - product_websockets
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      operationId: EnableProductWebsockets
      summary: Enable product
      tags:
      - product_websockets
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebsocketsResponseBodyEnable'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      operationId: GetProductWebsockets
      summary: Get product enablement status
      tags:
      - product_websockets
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebsocketsResponseBodyEnable'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /events:
    get:
      operationId: ListEvents
      summary: List events
      tags:
      - events
      parameters:
      - name: filter[created_at]
        in: query
        required: false
        description: The filter[created at]
        schema:
          type: string
      - name: filter[created_at][lte]
        in: query
        required: false
        description: The filter[created at][lte]
        schema:
          type: string
      - name: filter[created_at][gte]
        in: query
        required: false
        description: The filter[created at][gte]
        schema:
          type: string
      - name: filter[created_at][lt]
        in: query
        required: false
        description: The filter[created at][lt]
        schema:
          type: string
      - name: filter[service_id]
        in: query
        required: false
        description: The filter[service id]
        schema:
          type: string
      - name: page[number]
        in: query
        required: false
        description: The page[number]
        schema:
          type: string
      - name: filter[event_type]
        in: query
        required: false
        description: The filter[event type]
        schema:
          type: string
      - name: sort
        in: query
        required: false
        description: The sort
        schema:
          type: string
          enum:
          - created
          - -created
          - updated
          - -updated
      - name: filter[user_id]
        in: query
        required: false
        description: The filter[user id]
        schema:
          type: string
      - name: filter[created_at][gt]
        in: query
        required: false
        description: The filter[created at][gt]
        schema:
          type: string
      - name: page[size]
        in: query
        required: false
        description: The page[size]
        schema:
          type: string
      - name: filter[token_id]
        in: query
        required: false
        description: The filter[token id]
        schema:
          type: string
      - name: filter[customer_id]
        in: query
        required: false
        description: The filter[customer id]
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventsResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /events/{event_id}:
    get:
      operationId: GetEvent
      summary: Get an event
      tags:
      - events
      parameters:
      - name: event_id
        in: path
        required: true
        description: Alphanumeric string identifying the event
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /invitations:
    post:
      operationId: CreateInvitation
      summary: Create an invitation
      tags:
      - invitations
      parameters: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvitationResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/invitation'
        required: true
    get:
      operationId: ListInvitations
      summary: List invitations
      tags:
      - invitations
      parameters:
      - name: page[number]
        in: query
        required: false
        description: The page[number]
        schema:
          type: string
      - name: page[size]
        in: query
        required: false
        description: The page[size]
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvitationsResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /invitations/{invitation_id}:
    delete:
      operationId: DeleteInvitation
      summary: Delete an invitation
      tags:
      - invitations
      parameters:
      - name: invitation_id
        in: path
        required: true
        description: Alphanumeric string identifying the invitation
        schema:
          type: string
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /metrics/domains/services/{service_id}:
    get:
      operationId: GetDomainInspectorHistorical
      summary: Get historical domain data for a service
      tags:
      - domain_inspector_historical
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: datacenter
        in: query
        required: false
        description: The datacenter
        schema:
          type: string
      - name: domain
        in: query
        required: false
        description: The domain
        schema:
          type: string
      - name: limit
        in: query
        required: false
        description: The limit
        schema:
          type: integer
          format: int32
          minimum: 1
      - name: cursor
        in: query
        required: false
        description: The cursor
        schema:
          type: string
      - name: start
        in: query
        required: false
        description: The start
        schema:
          type: string
      - name: end
        in: query
        required: false
        description: The end
        schema:
          type: string
      - name: group_by
        in: query
        required: false
        description: The group by
        schema:
          type: string
      - name: metric
        in: query
        required: false
        description: The metric
        schema:
          type: string
      - name: region
        in: query
        required: false
        description: The region
        schema:
          type: string
      - name: downsample
        in: query
        required: false
        description: The downsample
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HistoricalDomainsResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /metrics/origins/services/{service_id}:
    get:
      operationId: GetOriginInspectorHistorical
      summary: Get historical origin data for a service
      tags:
      - origin_inspector_historical
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: datacenter
        in: query
        required: false
        description: The datacenter
        schema:
          type: string
      - name: limit
        in: query
        required: false
        description: The limit
        schema:
          type: integer
          format: int32
          minimum: 1
      - name: cursor
        in: query
        required: false
        description: The cursor
        schema:
          type: string
      - name: start
        in: query
        required: false
        description: The start
        schema:
          type: string
      - name: end
        in: query
        required: false
        description: The end
        schema:
          type: string
      - name: group_by
        in: query
        required: false
        description: The group by
        schema:
          type: string
      - name: metric
        in: query
        required: false
        description: The metric
        schema:
          type: string
      - name: host
        in: query
        required: false
        description: The host
        schema:
          type: string
      - name: region
        in: query
        required: false
        description: The region
        schema:
          type: string
      - name: downsample
        in: query
        required: false
        description: The downsample
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HistoricalOriginsResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /metrics/platform/ddos:
    get:
      operationId: GetPlatformDdosHistorical
      summary: Get historical DDoS metrics for the entire Fastly platform
      tags:
      - whole_platform_ddos_historical
      parameters:
      - name: end
        in: query
        required: false
        description: The end
        schema:
          type: string
      - name: downsample
        in: query
        required: false
        description: The downsample
        schema:
          type: string
      - name: start
        in: query
        required: false
        description: The start
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlatformDdosResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /permissions:
    get:
      operationId: ListPermissions
      summary: List permissions
      tags:
      - iam_permissions
      parameters: []
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /public-ip-list:
    get:
      operationId: ListFastlyIps
      summary: List Fastly's public IPs
      tags:
      - public_ip_list
      parameters: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicIPList'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /purge/{cached_url}:
    post:
      operationId: PurgeSingleURL
      summary: Purge a URL
      tags:
      - purge
      parameters:
      - name: cached_url
        in: path
        required: true
        description: Alphanumeric string identifying the cached url
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurgeResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /rate-limiters/{rate_limiter_id}:
    delete:
      operationId: DeleteRateLimiter
      summary: Delete a rate limiter
      tags:
      - rate_limiter
      parameters:
      - name: rate_limiter_id
        in: path
        required: true
        description: Alphanumeric string identifying the rate limiter
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse200'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      operationId: GetRateLimiter
      summary: Get a rate limiter
      tags:
      - rate_limiter
      parameters:
      - name: rate_limiter_id
        in: path
        required: true
        description: Alphanumeric string identifying the rate limiter
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimiterResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      operationId: UpdateRateLimiter
      summary: Update a rate limiter
      description: |
        Update an existing rate limiter by its ID.

        **IMPORTANT - Conditional Response Parameters**:

        1. **Response Object Name and Action**:
           - If `response_object_name` is provided, then `action` MUST be set to "response_object"
           - The `response_object_name` references a pre-existing response object by name

        2. **Custom Response Parameters**:
           When defining a custom response (not using a response object), ALL of the following parameters must be provided together:
           - `response_content` - The content to send in the response
           - `response_content_type` - The content type of the response (e.g., "text/plain", "application/json")
           - `response_status` - The HTTP status code to return (e.g., 429, 503)

           Providing only some of these parameters will result in an error.

        3. **Typical Configurations**:
           - Use a pre-existing response object: Set `action="response_object"` and provide `response_object_name`
           - Define a custom response: Provide all three response parameters together
           - Use default rate limiting behavior: Don't provide any response parameters
      tags:
      - rate_limiter
      parameters:
      - name: rate_limiter_id
        in: path
        required: true
        description: Alphanumeric string identifying the rate limiter
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimiterResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /resources/acls:
    post:
      operationId: ComputeACLCreateAcls
      summary: Create a new ACL
      tags:
      - acls_in_compute
      parameters: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComputeACLCreateAclsResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/computeACLCreateAclsRequest'
        required: true
    get:
      operationId: ComputeACLListAcls
      summary: List ACLs
      tags:
      - acls_in_compute
      parameters: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComputeACLList'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /resources/acls/{acl_id}:
    delete:
      operationId: ComputeACLDeleteSAclID
      summary: Delete an ACL
      tags:
      - acls_in_compute
      parameters:
      - name: acl_id
        in: path
        required: true
        description: Alphanumeric string identifying the acl
        schema:
          type: string
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      operationId: ComputeACLListAclsSAclID
      summary: Describe an ACL
      tags:
      - acls_in_compute
      parameters:
      - name: acl_id
        in: path
        required: true
        description: Alphanumeric string identifying the acl
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComputeACLCreateAclsResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /resources/acls/{acl_id}/entries:
    get:
      operationId: ComputeACLListAclEntries
      summary: List an ACL
      tags:
      - acls_in_compute
      parameters:
      - name: acl_id
        in: path
        required: true
        description: Alphanumeric string identifying the acl
        schema:
          type: string
      - name: limit
        in: query
        required: false
        description: The limit
        schema:
          type: integer
          format: int32
          minimum: 1
      - name: cursor
        in: query
        required: false
        description: The cursor
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComputeACLListEntries'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      operationId: ComputeACLUpdateAcls
      summary: Update an ACL
      tags:
      - acls_in_compute
      parameters:
      - name: acl_id
        in: path
        required: true
        description: Alphanumeric string identifying the acl
        schema:
          type: string
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/computeACLUpdate'
        required: true
  /resources/acls/{acl_id}/entry/{acl_ip}:
    get:
      operationId: ComputeACLLookupAcls
      summary: Lookup an ACL
      tags:
      - acls_in_compute
      parameters:
      - name: acl_id
        in: path
        required: true
        description: Alphanumeric string identifying the acl
        schema:
          type: string
      - name: acl_ip
        in: path
        required: true
        description: Alphanumeric string identifying the acl ip
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComputeACLLookup'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /resources/object-storage/access-keys:
    post:
      operationId: CreateAccessKey
      summary: Create an access key
      tags:
      - object_storage_access_keys
      parameters: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessKeyResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/accessKey'
        required: true
    get:
      operationId: ListAccessKeys
      summary: List access keys
      tags:
      - object_storage_access_keys
      parameters: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessKeyResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /resources/object-storage/access-keys/{access_key}:
    delete:
      operationId: DeleteAccessKey
      summary: Delete an access key
      tags:
      - object_storage_access_keys
      parameters:
      - name: access_key
        in: path
        required: true
        description: Alphanumeric string identifying the access key
        schema:
          type: string
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      operationId: GetAccessKey
      summary: Get an access key
      tags:
      - object_storage_access_keys
      parameters:
      - name: access_key
        in: path
        required: true
        description: Alphanumeric string identifying the access key
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessKey'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /resources/stores/config:
    post:
      operationId: CreateConfigStore
      summary: Create a config store
      tags:
      - config_store
      parameters: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigStoreResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      operationId: ListConfigStores
      summary: List config stores
      tags:
      - config_store
      parameters:
      - name: name
        in: query
        required: false
        description: The name
        schema:
          type: string
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /resources/stores/config/{config_store_id}:
    delete:
      operationId: DeleteConfigStore
      summary: Delete a config store
      tags:
      - config_store
      parameters:
      - name: config_store_id
        in: path
        required: true
        description: Alphanumeric string identifying the config store
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse200'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      operationId: GetConfigStore
      summary: Describe a config store
      tags:
      - config_store
      parameters:
      - name: config_store_id
        in: path
        required: true
        description: Alphanumeric string identifying the config store
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigStoreResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      operationId: UpdateConfigStore
      summary: Update a config store
      tags:
      - config_store
      parameters:
      - name: config_store_id
        in: path
        required: true
        description: Alphanumeric string identifying the config store
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigStoreResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /resources/stores/config/{config_store_id}/info:
    get:
      operationId: GetConfigStoreInfo
      summary: Get config store metadata
      tags:
      - config_store
      parameters:
      - name: config_store_id
        in: path
        required: true
        description: Alphanumeric string identifying the config store
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigStoreInfoResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /resources/stores/config/{config_store_id}/item:
    post:
      operationId: CreateConfigStoreItem
      summary: Create an entry in a config store
      tags:
      - config_store_item
      parameters:
      - name: config_store_id
        in: path
        required: true
        description: Alphanumeric string identifying the config store
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigStoreItemResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /resources/stores/config/{config_store_id}/item/{config_store_item_key}:
    delete:
      operationId: DeleteConfigStoreItem
      summary: Delete an item from a config store
      description: |
        Delete a single item from a config store by specifying the item key in the path.
      tags:
      - config_store_item
      parameters:
      - name: config_store_id
        in: path
        required: true
        description: Alphanumeric string identifying the config store
        schema:
          type: string
      - name: config_store_item_key
        in: path
        required: true
        description: Alphanumeric string identifying the config store item key
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse200'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      operationId: GetConfigStoreItem
      summary: Get an item from a config store
      tags:
      - config_store_item
      parameters:
      - name: config_store_id
        in: path
        required: true
        description: Alphanumeric string identifying the config store
        schema:
          type: string
      - name: config_store_item_key
        in: path
        required: true
        description: Alphanumeric string identifying the config store item key
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigStoreItemResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      operationId: UpdateConfigStoreItem
      summary: Update an entry in a config store
      tags:
      - config_store_item
      parameters:
      - name: config_store_id
        in: path
        required: true
        description: Alphanumeric string identifying the config store
        schema:
          type: string
      - name: config_store_item_key
        in: path
        required: true
        description: Alphanumeric string identifying the config store item key
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigStoreItemResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      operationId: UpsertConfigStoreItem
      summary: Insert or update an entry in a config store
      tags:
      - config_store_item
      parameters:
      - name: config_store_id
        in: path
        required: true
        description: Alphanumeric string identifying the config store
        schema:
          type: string
      - name: config_store_item_key
        in: path
        required: true
        description: Alphanumeric string identifying the config store item key
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigStoreItemResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /resources/stores/config/{config_store_id}/items:
    patch:
      operationId: BulkUpdateConfigStoreItem
      summary: Update multiple entries in a config store
      tags:
      - config_store_item
      parameters:
      - name: config_store_id
        in: path
        required: true
        description: Alphanumeric string identifying the config store
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse200'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/bulkUpdateConfigStoreListRequest'
        required: true
    get:
      operationId: ListConfigStoreItems
      summary: List items in a config store
      tags:
      - config_store_item
      parameters:
      - name: config_store_id
        in: path
        required: true
        description: Alphanumeric string identifying the config store
        schema:
          type: string
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /resources/stores/config/{config_store_id}/services:
    get:
      operationId: ListConfigStoreServices
      summary: List linked services
      tags:
      - config_store
      parameters:
      - name: config_store_id
        in: path
        required: true
        description: Alphanumeric string identifying the config store
        schema:
          type: string
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /resources/stores/kv:
    post:
      operationId: KvStoreCreate
      summary: Create a KV store.
      tags:
      - kv_store
      parameters:
      - name: location
        in: query
        required: false
        description: The location
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KvStoreDetails'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/kvStoreRequestCreate'
        required: true
    get:
      operationId: KvStoreList
      summary: List all KV stores.
      tags:
      - kv_store
      parameters:
      - name: limit
        in: query
        required: false
        description: The limit
        schema:
          type: integer
          format: int32
          minimum: 1
      - name: cursor
        in: query
        required: false
        description: The cursor
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse2005'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /resources/stores/kv/{store_id}:
    delete:
      operationId: KvStoreDelete
      summary: Delete a KV store.
      tags:
      - kv_store
      parameters:
      - name: store_id
        in: path
        required: true
        description: Alphanumeric string identifying the store
        schema:
          type: string
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      operationId: KvStoreGet
      summary: Describe a KV store.
      tags:
      - kv_store
      parameters:
      - name: store_id
        in: path
        required: true
        description: Alphanumeric string identifying the store
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KvStoreDetails'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /resources/stores/kv/{store_id}/keys:
    get:
      operationId: KvStoreListItemKeys
      summary: List item keys.
      tags:
      - kv_store_item
      parameters:
      - name: store_id
        in: path
        required: true
        description: Alphanumeric string identifying the store
        schema:
          type: string
      - name: limit
        in: query
        required: false
        description: The limit
        schema:
          type: integer
          format: int32
          minimum: 1
      - name: cursor
        in: query
        required: false
        description: The cursor
        schema:
          type: string
      - name: prefix
        in: query
        required: false
        description: The prefix
        schema:
          type: string
      - name: consistency
        in: query
        required: false
        description: The consistency
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse2006'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /resources/stores/kv/{store_id}/keys/{key}:
    delete:
      operationId: KvStoreDeleteItem
      summary: Delete an item.
      description: |
        Delete a single key-value pair from a KV store by specifying the key in the path.
      tags:
      - kv_store_item
      parameters:
      - name: store_id
        in: path
        required: true
        description: Alphanumeric string identifying the store
        schema:
          type: string
      - name: key
        in: path
        required: true
        description: Alphanumeric string identifying the key
        schema:
          type: string
      - name: force
        in: query
        required: false
        description: The force
        schema:
          type: string
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      operationId: KvStoreGetItem
      summary: Get an item.
      tags:
      - kv_store_item
      parameters:
      - name: store_id
        in: path
        required: true
        description: Alphanumeric string identifying the store
        schema:
          type: string
      - name: key
        in: path
        required: true
        description: Alphanumeric string identifying the key
        schema:
          type: string
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      operationId: KvStoreUpsertItem
      summary: Insert or update an item.
      tags:
      - kv_store_item
      parameters:
      - name: store_id
        in: path
        required: true
        description: Alphanumeric string identifying the store
        schema:
          type: string
      - name: key
        in: path
        required: true
        description: Alphanumeric string identifying the key
        schema:
          type: string
      - name: prepend
        in: query
        required: false
        description: The prepend
        schema:
          type: string
      - name: append
        in: query
        required: false
        description: The append
        schema:
          type: string
      - name: add
        in: query
        required: false
        description: The add
        schema:
          type: string
      - name: background_fetch
        in: query
        required: false
        description: The background fetch
        schema:
          type: string
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        content:
          application/octet-stream:
            schema:
              $ref: '#/components/schemas/body'
        required: true
  /resources/stores/secret:
    post:
      operationId: CreateSecretStore
      summary: Create new secret store
      tags:
      - secret_store
      parameters: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretStoreResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/secretStore'
        required: true
    get:
      operationId: GetSecretStores
      summary: Get all secret stores
      tags:
      - secret_store
      parameters:
      - name: limit
        in: query
        required: false
        description: The limit
        schema:
          type: integer
          format: int32
          minimum: 1
      - name: cursor
        in: query
        required: false
        description: The cursor
        schema:
          type: string
      - name: name
        in: query
        required: false
        description: The name
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse2007'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /resources/stores/secret/client-key:
    post:
      operationId: ClientKey
      summary: Create new client key
      tags:
      - secret_store
      parameters: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientKey'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /resources/stores/secret/signing-key:
    get:
      operationId: SigningKey
      summary: Get public key
      tags:
      - secret_store
      parameters: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SigningKey'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /resources/stores/secret/{store_id}:
    delete:
      operationId: DeleteSecretStore
      summary: Delete secret store
      tags:
      - secret_store
      parameters:
      - name: store_id
        in: path
        required: true
        description: Alphanumeric string identifying the store
        schema:
          type: string
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      operationId: GetSecretStore
      summary: Get secret store by ID
      tags:
      - secret_store
      parameters:
      - name: store_id
        in: path
        required: true
        description: Alphanumeric string identifying the store
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretStoreResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /resources/stores/secret/{store_id}/secrets:
    post:
      operationId: CreateSecret
      summary: Create a new secret in a store.
      tags:
      - secret_store_item
      parameters:
      - name: store_id
        in: path
        required: true
        description: Alphanumeric string identifying the store
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/secret'
        required: true
    get:
      operationId: GetSecrets
      summary: List secrets within a store.
      tags:
      - secret_store_item
      parameters:
      - name: store_id
        in: path
        required: true
        description: Alphanumeric string identifying the store
        schema:
          type: string
      - name: limit
        in: query
        required: false
        description: The limit
        schema:
          type: integer
          format: int32
          minimum: 1
      - name: cursor
        in: query
        required: false
        description: The cursor
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse2008'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      operationId: MustRecreateSecret
      summary: Recreate a secret in a store.
      tags:
      - secret_store_item
      parameters:
      - name: store_id
        in: path
        required: true
        description: Alphanumeric string identifying the store
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/secret'
        required: true
    put:
      operationId: RecreateSecret
      summary: Create or recreate a secret in a store.
      tags:
      - secret_store_item
      parameters:
      - name: store_id
        in: path
        required: true
        description: Alphanumeric string identifying the store
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/secret'
        required: true
  /resources/stores/secret/{store_id}/secrets/{secret_name}:
    delete:
      operationId: DeleteSecret
      summary: Delete a secret from a store.
      tags:
      - secret_store_item
      parameters:
      - name: store_id
        in: path
        required: true
        description: Alphanumeric string identifying the store
        schema:
          type: string
      - name: secret_name
        in: path
        required: true
        description: Alphanumeric string identifying the secret name
        schema:
          type: string
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      operationId: GetSecret
      summary: Get secret metadata.
      tags:
      - secret_store_item
      parameters:
      - name: store_id
        in: path
        required: true
        description: Alphanumeric string identifying the store
        schema:
          type: string
      - name: secret_name
        in: path
        required: true
        description: Alphanumeric string identifying the secret name
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /roles:
    post:
      operationId: CreateARole
      summary: Create a role
      tags:
      - iam_roles
      parameters: []
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requestBody'
        required: true
    get:
      operationId: ListRoles
      summary: List roles
      tags:
      - iam_roles
      parameters:
      - name: per_page
        in: query
        required: false
        description: The per page
        schema:
          type: integer
          format: int32
          minimum: 1
      - name: page
        in: query
        required: false
        description: The page
        schema:
          type: integer
          format: int32
          minimum: 1
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /roles/{role_id}:
    delete:
      operationId: DeleteARole
      summary: Delete a role
      tags:
      - iam_roles
      parameters:
      - name: role_id
        in: path
        required: true
        description: Alphanumeric string identifying the role
        schema:
          type: string
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      operationId: GetARole
      summary: Get a role
      tags:
      - iam_roles
      parameters:
      - name: role_id
        in: path
        required: true
        description: Alphanumeric string identifying the role
        schema:
          type: string
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      operationId: UpdateARole
      summary: Update a role
      tags:
      - iam_roles
      parameters:
      - name: role_id
        in: path
        required: true
        description: Alphanumeric string identifying the role
        schema:
          type: string
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requestBody'
        required: true
  /roles/{role_id}/permissions:
    post:
      operationId: AddRolePermissions
      summary: Add permissions to a role
      tags:
      - iam_roles
      parameters:
      - name: role_id
        in: path
        required: true
        description: Alphanumeric string identifying the role
        schema:
          type: string
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requestBody'
        required: true
    get:
      operationId: ListRolePermissions
      summary: List permissions in a role
      tags:
      - iam_roles
      parameters:
      - name: role_id
        in: path
        required: true
        description: Alphanumeric string identifying the role
        schema:
          type: string
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      operationId: RemoveRolePermissions
      summary: Remove permissions from a role
      tags:
      - iam_roles
      parameters:
      - name: role_id
        in: path
        required: true
        description: Alphanumeric string identifying the role
        schema:
          type: string
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requestBody'
        required: true
  /service:
    post:
      operationId: CreateService
      summary: Create a service
      tags:
      - service
      parameters: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      operationId: ListServices
      summary: List services
      tags:
      - service
      parameters:
      - name: direction
        in: query
        required: false
        description: The direction
        schema:
          type: string
          enum:
          - ascend
          - descend
      - name: sort
        in: query
        required: false
        description: The sort
        schema:
          type: string
          enum:
          - created
          - -created
          - updated
          - -updated
      - name: per_page
        in: query
        required: false
        description: The per page
        schema:
          type: integer
          format: int32
          minimum: 1
      - name: page
        in: query
        required: false
        description: The page
        schema:
          type: integer
          format: int32
          minimum: 1
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /service-authorizations:
    post:
      operationId: CreateServiceAuthorization
      summary: Create service authorization
      tags:
      - service_authorizations
      parameters: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAuthorizationResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/serviceAuthorization'
        required: true
    delete:
      operationId: DeleteServiceAuthorization2
      summary: Delete service authorizations
      tags:
      - service_authorizations
      parameters: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse2009'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        content:
          application/vnd.api+json; ext=bulk:
            schema:
              $ref: '#/components/schemas/requestBody'
        required: true
    get:
      operationId: ListServiceAuthorization
      summary: List service authorizations
      tags:
      - service_authorizations
      parameters:
      - name: page[number]
        in: query
        required: false
        description: The page[number]
        schema:
          type: string
      - name: page[size]
        in: query
        required: false
        description: The page[size]
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAuthorizationsResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      operationId: UpdateServiceAuthorization2
      summary: Update service authorizations
      tags:
      - service_authorizations
      parameters: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAuthorizationsResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        content:
          application/vnd.api+json; ext=bulk:
            schema:
              $ref: '#/components/schemas/requestBody'
        required: true
  /service-authorizations/{service_authorization_id}:
    delete:
      operationId: DeleteServiceAuthorization
      summary: Delete service authorization
      tags:
      - service_authorizations
      parameters:
      - name: service_authorization_id
        in: path
        required: true
        description: Alphanumeric string identifying the service authorization
        schema:
          type: string
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      operationId: ShowServiceAuthorization
      summary: Show service authorization
      tags:
      - service_authorizations
      parameters:
      - name: service_authorization_id
        in: path
        required: true
        description: Alphanumeric string identifying the service authorization
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAuthorizationResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      operationId: UpdateServiceAuthorization
      summary: Update service authorization
      tags:
      - service_authorizations
      parameters:
      - name: service_authorization_id
        in: path
        required: true
        description: Alphanumeric string identifying the service authorization
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAuthorizationResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/serviceAuthorization'
        required: true
  /service-groups:
    post:
      operationId: CreateAServiceGroup
      summary: Create a service group
      tags:
      - iam_service_groups
      parameters: []
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requestBody'
        required: true
    get:
      operationId: ListServiceGroups
      summary: List service groups
      tags:
      - iam_service_groups
      parameters:
      - name: per_page
        in: query
        required: false
        description: The per page
        schema:
          type: integer
          format: int32
          minimum: 1
      - name: page
        in: query
        required: false
        description: The page
        schema:
          type: integer
          format: int32
          minimum: 1
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /service-groups/{service_group_id}:
    delete:
      operationId: DeleteAServiceGroup
      summary: Delete a service group
      tags:
      - iam_service_groups
      parameters:
      - name: service_group_id
        in: path
        required: true
        description: Alphanumeric string identifying the service group
        schema:
          type: string
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      operationId: GetAServiceGroup
      summary: Get a service group
      tags:
      - iam_service_groups
      parameters:
      - name: service_group_id
        in: path
        required: true
        description: Alphanumeric string identifying the service group
        schema:
          type: string
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      operationId: UpdateAServiceGroup
      summary: Update a service group
      tags:
      - iam_service_groups
      parameters:
      - name: service_group_id
        in: path
        required: true
        description: Alphanumeric string identifying the service group
        schema:
          type: string
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requestBody'
        required: true
  /service-groups/{service_group_id}/services:
    post:
      operationId: AddServiceGroupServices
      summary: Add services in a service group
      tags:
      - iam_service_groups
      parameters:
      - name: service_group_id
        in: path
        required: true
        description: Alphanumeric string identifying the service group
        schema:
          type: string
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requestBody'
        required: true
    get:
      operationId: ListServiceGroupServices
      summary: List services to a service group
      tags:
      - iam_service_groups
      parameters:
      - name: service_group_id
        in: path
        required: true
        description: Alphanumeric string identifying the service group
        schema:
          type: string
      - name: per_page
        in: query
        required: false
        description: The per page
        schema:
          type: integer
          format: int32
          minimum: 1
      - name: page
        in: query
        required: false
        description: The page
        schema:
          type: integer
          format: int32
          minimum: 1
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      operationId: RemoveServiceGroupServices
      summary: Remove services from a service group
      tags:
      - iam_service_groups
      parameters:
      - name: service_group_id
        in: path
        required: true
        description: Alphanumeric string identifying the service group
        schema:
          type: string
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requestBody'
        required: true
  /service/search:
    get:
      operationId: SearchService
      summary: Search for a service by name
      tags:
      - service
      parameters:
      - name: name
        in: query
        required: false
        description: The name
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /service/{service_id}:
    delete:
      operationId: DeleteService
      summary: Delete a service
      tags:
      - service
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse200'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      operationId: GetService
      summary: Get a service
      tags:
      - service
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      operationId: UpdateService
      summary: Update a service
      tags:
      - service
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /service/{service_id}/acl/{acl_id}/entries:
    patch:
      operationId: BulkUpdateACLEntries
      summary: Update multiple ACL entries
      tags:
      - acl_entry
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: acl_id
        in: path
        required: true
        description: Alphanumeric string identifying the acl
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse200'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/bulkUpdateACLEntriesRequest'
        required: true
    get:
      operationId: ListACLEntries
      summary: List ACL entries
      tags:
      - acl_entry
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: acl_id
        in: path
        required: true
        description: Alphanumeric string identifying the acl
        schema:
          type: string
      - name: direction
        in: query
        required: false
        description: The direction
        schema:
          type: string
          enum:
          - asc
          - desc
      - name: sort
        in: query
        required: false
        description: The sort
        schema:
          type: string
          enum:
          - created
          - -created
          - updated
          - -updated
      - name: per_page
        in: query
        required: false
        description: The per page
        schema:
          type: integer
          format: int32
          minimum: 1
      - name: page
        in: query
        required: false
        description: The page
        schema:
          type: integer
          format: int32
          minimum: 1
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /service/{service_id}/acl/{acl_id}/entry:
    post:
      operationId: CreateACLEntry
      summary: Create an ACL entry
      tags:
      - acl_entry
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: acl_id
        in: path
        required: true
        description: Alphanumeric string identifying the acl
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ACLEntryResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/aclEntry'
        required: true
  /service/{service_id}/acl/{acl_id}/entry/{acl_entry_id}:
    delete:
      operationId: DeleteACLEntry
      summary: Delete an ACL entry
      tags:
      - acl_entry
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: acl_id
        in: path
        required: true
        description: Alphanumeric string identifying the acl
        schema:
          type: string
      - name: acl_entry_id
        in: path
        required: true
        description: Alphanumeric string identifying the acl entry
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse200'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      operationId: GetACLEntry
      summary: Describe an ACL entry
      tags:
      - acl_entry
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: acl_id
        in: path
        required: true
        description: Alphanumeric string identifying the acl
        schema:
          type: string
      - name: acl_entry_id
        in: path
        required: true
        description: Alphanumeric string identifying the acl entry
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ACLEntryResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      operationId: UpdateACLEntry
      summary: Update an ACL entry
      tags:
      - acl_entry
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: acl_id
        in: path
        required: true
        description: Alphanumeric string identifying the acl
        schema:
          type: string
      - name: acl_entry_id
        in: path
        required: true
        description: Alphanumeric string identifying the acl entry
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ACLEntryResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/aclEntry'
        required: true
  /service/{service_id}/details:
    get:
      operationId: GetServiceDetail
      summary: Get service details
      tags:
      - service
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version
        in: query
        required: false
        description: The version
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceDetail'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /service/{service_id}/dictionary/{dictionary_id}/item:
    post:
      operationId: CreateDictionaryItem
      summary: Create an entry in a dictionary
      tags:
      - dictionary_item
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: dictionary_id
        in: path
        required: true
        description: Alphanumeric string identifying the dictionary
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DictionaryItemResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /service/{service_id}/dictionary/{dictionary_id}/item/{dictionary_item_key}:
    delete:
      operationId: DeleteDictionaryItem
      summary: Delete an item from a dictionary
      tags:
      - dictionary_item
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: dictionary_id
        in: path
        required: true
        description: Alphanumeric string identifying the dictionary
        schema:
          type: string
      - name: dictionary_item_key
        in: path
        required: true
        description: Alphanumeric string identifying the dictionary item key
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse200'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      operationId: GetDictionaryItem
      summary: Get an item from a dictionary
      tags:
      - dictionary_item
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: dictionary_id
        in: path
        required: true
        description: Alphanumeric string identifying the dictionary
        schema:
          type: string
      - name: dictionary_item_key
        in: path
        required: true
        description: Alphanumeric string identifying the dictionary item key
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DictionaryItemResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      operationId: UpdateDictionaryItem
      summary: Update an entry in a dictionary
      tags:
      - dictionary_item
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: dictionary_id
        in: path
        required: true
        description: Alphanumeric string identifying the dictionary
        schema:
          type: string
      - name: dictionary_item_key
        in: path
        required: true
        description: Alphanumeric string identifying the dictionary item key
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DictionaryItemResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      operationId: UpsertDictionaryItem
      summary: Insert or update an entry in a dictionary
      tags:
      - dictionary_item
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: dictionary_id
        in: path
        required: true
        description: Alphanumeric string identifying the dictionary
        schema:
          type: string
      - name: dictionary_item_key
        in: path
        required: true
        description: Alphanumeric string identifying the dictionary item key
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DictionaryItemResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /service/{service_id}/dictionary/{dictionary_id}/items:
    patch:
      operationId: BulkUpdateDictionaryItem
      summary: Update multiple entries in a dictionary
      tags:
      - dictionary_item
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: dictionary_id
        in: path
        required: true
        description: Alphanumeric string identifying the dictionary
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse200'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/bulkUpdateDictionaryListRequest'
        required: true
    get:
      operationId: ListDictionaryItems
      summary: List items in a dictionary
      tags:
      - dictionary_item
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: dictionary_id
        in: path
        required: true
        description: Alphanumeric string identifying the dictionary
        schema:
          type: string
      - name: direction
        in: query
        required: false
        description: The direction
        schema:
          type: string
          enum:
          - asc
          - desc
      - name: sort
        in: query
        required: false
        description: The sort
        schema:
          type: string
          enum:
          - created
          - -created
          - updated
          - -updated
      - name: per_page
        in: query
        required: false
        description: The per page
        schema:
          type: integer
          format: int32
          minimum: 1
      - name: page
        in: query
        required: false
        description: The page
        schema:
          type: integer
          format: int32
          minimum: 1
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /service/{service_id}/diff/from/{from_version_id}/to/{to_version_id}:
    get:
      operationId: DiffServiceVersions
      summary: Diff two service versions
      tags:
      - diff
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: from_version_id
        in: path
        required: true
        description: Alphanumeric string identifying the from version
        schema:
          type: string
      - name: to_version_id
        in: path
        required: true
        description: Alphanumeric string identifying the to version
        schema:
          type: string
      - name: format
        in: query
        required: false
        description: The format
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiffResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /service/{service_id}/domain:
    get:
      operationId: ListServiceDomains
      summary: List the domains within a service
      tags:
      - service
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /service/{service_id}/pool/{pool_id}/server:
    post:
      operationId: CreatePoolServer
      summary: Add a server to a pool
      tags:
      - server
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: pool_id
        in: path
        required: true
        description: Alphanumeric string identifying the pool
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /service/{service_id}/pool/{pool_id}/server/{server_id}:
    delete:
      operationId: DeletePoolServer
      summary: Delete a server from a pool
      tags:
      - server
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: pool_id
        in: path
        required: true
        description: Alphanumeric string identifying the pool
        schema:
          type: string
      - name: server_id
        in: path
        required: true
        description: Alphanumeric string identifying the server
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse200'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      operationId: GetPoolServer
      summary: Get a pool server
      tags:
      - server
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: pool_id
        in: path
        required: true
        description: Alphanumeric string identifying the pool
        schema:
          type: string
      - name: server_id
        in: path
        required: true
        description: Alphanumeric string identifying the server
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      operationId: UpdatePoolServer
      summary: Update a server
      tags:
      - server
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: pool_id
        in: path
        required: true
        description: Alphanumeric string identifying the pool
        schema:
          type: string
      - name: server_id
        in: path
        required: true
        description: Alphanumeric string identifying the server
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /service/{service_id}/pool/{pool_id}/servers:
    get:
      operationId: ListPoolServers
      summary: List servers in a pool
      tags:
      - server
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: pool_id
        in: path
        required: true
        description: Alphanumeric string identifying the pool
        schema:
          type: string
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /service/{service_id}/purge:
    post:
      operationId: BulkPurgeTag
      summary: Purge multiple surrogate key tags
      tags:
      - purge
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/purgeResponse'
        required: true
  /service/{service_id}/purge/{surrogate_key}:
    post:
      operationId: PurgeTag
      summary: Purge by surrogate key tag
      tags:
      - purge
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: surrogate_key
        in: path
        required: true
        description: Alphanumeric string identifying the surrogate key
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurgeResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /service/{service_id}/purge_all:
    post:
      operationId: PurgeAll
      summary: Purge everything from a service
      tags:
      - purge
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse200'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /service/{service_id}/snippet/{id}:
    get:
      operationId: GetSnippetDynamic
      summary: Get a dynamic snippet
      tags:
      - snippet
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: Alphanumeric string identifying the id
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SnippetResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      operationId: UpdateSnippetDynamic
      summary: Update a dynamic snippet
      tags:
      - snippet
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: Alphanumeric string identifying the id
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SnippetResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /service/{service_id}/stats/summary:
    get:
      operationId: GetServiceStats
      summary: Get stats for a service
      description: |
        Get the stats from a service for a block of time. This lists all stats by PoP location, starting with AMS.

        **IMPORTANT**: This endpoint requires parameters to select a block of time to query. Use ONE of these parameter combinations:
        - Option 1: `start_time` + `end_time` (for custom date ranges using Unix timestamps)
        - Option 2: `month` + `year` (for monthly data)

        Do not mix parameters from different options. The API will return an error if you provide both timestamp and month/year parameters.
      tags:
      - stats
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: start_time
        in: query
        required: false
        description: Unix epoch timestamp (e.g., 1608560817). Required when using timestamp range option. Limits the results to data on or after this time.
        schema:
          type: integer
          format: int32
      - name: end_time
        in: query
        required: false
        description: Unix epoch timestamp (e.g., 1608560817). Required when using timestamp range option. Limits the results to data on or before this time.
        schema:
          type: integer
          format: int32
      - name: month
        in: query
        required: false
        description: 2-digit month (e.g., "05" for May). Required when using month/year option.
        schema:
          type: string
          pattern: '^(0[1-9]|1[0-2])$'
      - name: year
        in: query
        required: false
        description: 4-digit year (e.g., "2020"). Required when using month/year option.
        schema:
          type: string
          pattern: '^\d{4}$'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stats'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /service/{service_id}/vcl/diff/from/{from_version_id}/to/{to_version_id}:
    get:
      operationId: VclDiffServiceVersions
      summary: Get a comparison of the VCL changes between two service versions
      tags:
      - vcl_diff
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: from_version_id
        in: path
        required: true
        description: Alphanumeric string identifying the from version
        schema:
          type: string
      - name: to_version_id
        in: path
        required: true
        description: Alphanumeric string identifying the to version
        schema:
          type: string
      - name: format
        in: query
        required: false
        description: The format
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VclDiff'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /service/{service_id}/version:
    post:
      operationId: CreateServiceVersion
      summary: Create a service version
      tags:
      - version
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionCreateResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      operationId: ListServiceVersions
      summary: List versions of a service
      tags:
      - version
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /service/{service_id}/version/{version_id}:
    get:
      operationId: GetServiceVersion
      summary: Get a version of a service
      tags:
      - version
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      operationId: UpdateServiceVersion
      summary: Update a service version
      tags:
      - version
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /service/{service_id}/version/{version_id}/acl:
    post:
      operationId: CreateACL
      summary: Create a new ACL
      tags:
      - acl
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ACLResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      operationId: ListACLs
      summary: List ACLs
      tags:
      - acl
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /service/{service_id}/version/{version_id}/acl/{acl_name}:
    delete:
      operationId: DeleteACL
      summary: Delete an ACL
      tags:
      - acl
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      - name: acl_name
        in: path
        required: true
        description: Alphanumeric string identifying the acl name
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse200'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      operationId: GetACL
      summary: Describe an ACL
      tags:
      - acl
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      - name: acl_name
        in: path
        required: true
        description: Alphanumeric string identifying the acl name
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ACLResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      operationId: UpdateACL
      summary: Update an ACL
      tags:
      - acl
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      - name: acl_name
        in: path
        required: true
        description: Alphanumeric string identifying the acl name
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ACLResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /service/{service_id}/version/{version_id}/activate:
    put:
      operationId: ActivateServiceVersion
      summary: Activate a service version
      tags:
      - version
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /service/{service_id}/version/{version_id}/activate/{environment_name}:
    put:
      operationId: ActivateServiceVersionEnvironment
      summary: Activate a service version on the specified environment
      tags:
      - version
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      - name: environment_name
        in: path
        required: true
        description: Alphanumeric string identifying the environment name
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /service/{service_id}/version/{version_id}/apex-redirects:
    post:
      operationId: CreateApexRedirect
      summary: Create an apex redirect
      tags:
      - apex_redirect
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApexRedirect'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      operationId: ListApexRedirects
      summary: List apex redirects
      tags:
      - apex_redirect
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /service/{service_id}/version/{version_id}/backend:
    post:
      operationId: CreateBackend
      summary: Create a backend
      tags:
      - backend
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackendResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      operationId: ListBackends
      summary: List backends
      tags:
      - backend
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /service/{service_id}/version/{version_id}/backend/{backend_name}:
    delete:
      operationId: DeleteBackend
      summary: Delete a backend
      tags:
      - backend
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      - name: backend_name
        in: path
        required: true
        description: Alphanumeric string identifying the backend name
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse200'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      operationId: GetBackend
      summary: Describe a backend
      tags:
      - backend
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      - name: backend_name
        in: path
        required: true
        description: Alphanumeric string identifying the backend name
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackendResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      operationId: UpdateBackend
      summary: Update a backend
      tags:
      - backend
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      - name: backend_name
        in: path
        required: true
        description: Alphanumeric string identifying the backend name
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackendResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /service/{service_id}/version/{version_id}/boilerplate:
    get:
      operationId: GetCustomVclBoilerplate
      summary: Get boilerplate VCL
      tags:
      - vcl
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /service/{service_id}/version/{version_id}/cache_settings:
    post:
      operationId: CreateCacheSettings
      summary: Create a cache settings object
      tags:
      - cache_settings
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CacheSettingResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      operationId: ListCacheSettings
      summary: List cache settings objects
      tags:
      - cache_settings
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /service/{service_id}/version/{version_id}/cache_settings/{cache_settings_name}:
    delete:
      operationId: DeleteCacheSettings
      summary: Delete a cache settings object
      tags:
      - cache_settings
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      - name: cache_settings_name
        in: path
        required: true
        description: Alphanumeric string identifying the cache settings name
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse200'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      operationId: GetCacheSettings
      summary: Get a cache settings object
      tags:
      - cache_settings
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      - name: cache_settings_name
        in: path
        required: true
        description: Alphanumeric string identifying the cache settings name
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CacheSettingResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      operationId: UpdateCacheSettings
      summary: Update a cache settings object
      tags:
      - cache_settings
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      - name: cache_settings_name
        in: path
        required: true
        description: Alphanumeric string identifying the cache settings name
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CacheSettingResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /service/{service_id}/version/{version_id}/clone:
    put:
      operationId: CloneServiceVersion
      summary: Clone a service version
      tags:
      - version
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Version'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /service/{service_id}/version/{version_id}/condition:
    post:
      operationId: CreateCondition
      summary: Create a condition
      tags:
      - condition
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConditionResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      operationId: ListConditions
      summary: List conditions
      tags:
      - condition
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /service/{service_id}/version/{version_id}/condition/{condition_name}:
    delete:
      operationId: DeleteCondition
      summary: Delete a condition
      tags:
      - condition
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      - name: condition_name
        in: path
        required: true
        description: Alphanumeric string identifying the condition name
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse200'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      operationId: GetCondition
      summary: Describe a condition
      tags:
      - condition
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      - name: condition_name
        in: path
        required: true
        description: Alphanumeric string identifying the condition name
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConditionResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      operationId: UpdateCondition
      summary: Update a condition
      tags:
      - condition
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      - name: condition_name
        in: path
        required: true
        description: Alphanumeric string identifying the condition name
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConditionResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /service/{service_id}/version/{version_id}/deactivate:
    put:
      operationId: DeactivateServiceVersion
      summary: Deactivate a service version
      tags:
      - version
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /service/{service_id}/version/{version_id}/deactivate/{environment_name}:
    put:
      operationId: DeactivateServiceVersionEnvironment
      summary: Deactivate a service version on an environment
      tags:
      - version
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      - name: environment_name
        in: path
        required: true
        description: Alphanumeric string identifying the environment name
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /service/{service_id}/version/{version_id}/dictionary:
    post:
      operationId: CreateDictionary
      summary: Create a dictionary
      tags:
      - dictionary
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DictionaryResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      operationId: ListDictionaries
      summary: List dictionaries
      tags:
      - dictionary
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /service/{service_id}/version/{version_id}/dictionary/{dictionary_id}/info:
    get:
      operationId: GetDictionaryInfo
      summary: Get dictionary metadata
      tags:
      - dictionary_info
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      - name: dictionary_id
        in: path
        required: true
        description: Alphanumeric string identifying the dictionary
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DictionaryInfoResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /service/{service_id}/version/{version_id}/dictionary/{dictionary_name}:
    delete:
      operationId: DeleteDictionary
      summary: Delete a dictionary
      tags:
      - dictionary
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      - name: dictionary_name
        in: path
        required: true
        description: Alphanumeric string identifying the dictionary name
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse200'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      operationId: GetDictionary
      summary: Get a dictionary
      tags:
      - dictionary
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      - name: dictionary_name
        in: path
        required: true
        description: Alphanumeric string identifying the dictionary name
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DictionaryResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      operationId: UpdateDictionary
      summary: Update a dictionary
      tags:
      - dictionary
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      - name: dictionary_name
        in: path
        required: true
        description: Alphanumeric string identifying the dictionary name
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DictionaryResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /service/{service_id}/version/{version_id}/director:
    post:
      operationId: CreateDirector
      summary: Create a director
      tags:
      - director
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      operationId: ListDirectors
      summary: List directors
      tags:
      - director
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /service/{service_id}/version/{version_id}/director/{director_name}:
    delete:
      operationId: DeleteDirector
      summary: Delete a director
      tags:
      - director
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      - name: director_name
        in: path
        required: true
        description: Alphanumeric string identifying the director name
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse200'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      operationId: GetDirector
      summary: Get a director
      tags:
      - director
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      - name: director_name
        in: path
        required: true
        description: Alphanumeric string identifying the director name
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      operationId: UpdateDirector
      summary: Update a director
      tags:
      - director
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      - name: director_name
        in: path
        required: true
        description: Alphanumeric string identifying the director name
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /service/{service_id}/version/{version_id}/director/{director_name}/backend/{backend_name}:
    post:
      operationId: CreateDirectorBackend
      summary: Create a director-backend relationship
      tags:
      - director_backend
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      - name: director_name
        in: path
        required: true
        description: Alphanumeric string identifying the director name
        schema:
          type: string
      - name: backend_name
        in: path
        required: true
        description: Alphanumeric string identifying the backend name
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectorBackend'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      operationId: DeleteDirectorBackend
      summary: Delete a director-backend relationship
      tags:
      - director_backend
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      - name: director_name
        in: path
        required: true
        description: Alphanumeric string identifying the director name
        schema:
          type: string
      - name: backend_name
        in: path
        required: true
        description: Alphanumeric string identifying the backend name
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse200'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      operationId: GetDirectorBackend
      summary: Get a director-backend relationship
      tags:
      - director_backend
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      - name: director_name
        in: path
        required: true
        description: Alphanumeric string identifying the director name
        schema:
          type: string
      - name: backend_name
        in: path
        required: true
        description: Alphanumeric string identifying the backend name
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectorBackend'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /service/{service_id}/version/{version_id}/domain:
    post:
      operationId: CreateDomain
      summary: Add a domain name to a service
      tags:
      - domain
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      operationId: ListDomains
      summary: List domains
      tags:
      - domain
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /service/{service_id}/version/{version_id}/domain/check_all:
    get:
      operationId: CheckDomains
      summary: Validate DNS configuration for all domains on a service
      tags:
      - domain
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /service/{service_id}/version/{version_id}/domain/{domain_name}:
    delete:
      operationId: DeleteDomain
      summary: Remove a domain from a service
      tags:
      - domain
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      - name: domain_name
        in: path
        required: true
        description: Alphanumeric string identifying the domain name
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse200'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      operationId: GetDomain
      summary: Describe a domain
      tags:
      - domain
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      - name: domain_name
        in: path
        required: true
        description: Alphanumeric string identifying the domain name
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      operationId: UpdateDomain
      summary: Update a domain
      description: |
        Update an existing domain for a particular service and version.

        **IMPORTANT - Either/Or Parameter Requirement**:

        You must provide at least ONE of the following parameters in the request body to update a domain:
        - `name`: The new domain name to replace the existing one
        - `comment`: A descriptive comment about the domain

        You can provide both parameters if you want to update both the name and comment simultaneously.

        **Note**: The domain name in the path (`domain_name`) identifies which domain to update. The `name` parameter in the request body specifies the new name for the domain.
      tags:
      - domain
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      - name: domain_name
        in: path
        required: true
        description: Alphanumeric string identifying the domain name
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /service/{service_id}/version/{version_id}/domain/{domain_name}/check:
    get:
      operationId: CheckDomain
      summary: Validate DNS configuration for a single domain on a service
      tags:
      - domain
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      - name: domain_name
        in: path
        required: true
        description: Alphanumeric string identifying the domain name
        schema:
          type: string
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /service/{service_id}/version/{version_id}/generated_vcl:
    get:
      operationId: GetCustomVclGenerated
      summary: Get the generated VCL for a service
      tags:
      - vcl
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VclResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /service/{service_id}/version/{version_id}/generated_vcl/content:
    get:
      operationId: GetCustomVclGeneratedHighlighted
      summary: Get the generated VCL with syntax highlighting
      tags:
      - vcl
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VclSyntaxHighlightingResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /service/{service_id}/version/{version_id}/gzip:
    post:
      operationId: CreateGzipConfig
      summary: Create a gzip configuration
      tags:
      - gzip
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GzipResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      operationId: ListGzipConfigs
      summary: List gzip configurations
      tags:
      - gzip
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /service/{service_id}/version/{version_id}/gzip/{gzip_name}:
    delete:
      operationId: DeleteGzipConfig
      summary: Delete a gzip configuration
      tags:
      - gzip
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      - name: gzip_name
        in: path
        required: true
        description: Alphanumeric string identifying the gzip name
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse200'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      operationId: GetGzipConfigs
      summary: Get a gzip configuration
      tags:
      - gzip
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      - name: gzip_name
        in: path
        required: true
        description: Alphanumeric string identifying the gzip name
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GzipResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      operationId: UpdateGzipConfig
      summary: Update a gzip configuration
      tags:
      - gzip
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      - name: gzip_name
        in: path
        required: true
        description: Alphanumeric string identifying the gzip name
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GzipResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /service/{service_id}/version/{version_id}/header:
    post:
      operationId: CreateHeaderObject
      summary: Create a Header object
      tags:
      - header
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HeaderResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      operationId: ListHeaderObjects
      summary: List Header objects
      tags:
      - header
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /service/{service_id}/version/{version_id}/header/{header_name}:
    delete:
      operationId: DeleteHeaderObject
      summary: Delete a Header object
      tags:
      - header
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      - name: header_name
        in: path
        required: true
        description: Alphanumeric string identifying the header name
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse200'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      operationId: GetHeaderObject
      summary: Get a Header object
      tags:
      - header
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      - name: header_name
        in: path
        required: true
        description: Alphanumeric string identifying the header name
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HeaderResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      operationId: UpdateHeaderObject
      summary: Update a Header object
      tags:
      - header
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      - name: header_name
        in: path
        required: true
        description: Alphanumeric string identifying the header name
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HeaderResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /service/{service_id}/version/{version_id}/healthcheck:
    post:
      operationId: CreateHealthcheck
      summary: Create a health check
      tags:
      - healthcheck
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthcheckResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      operationId: ListHealthchecks
      summary: List health checks
      tags:
      - healthcheck
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /service/{service_id}/version/{version_id}/healthcheck/{healthcheck_name}:
    delete:
      operationId: DeleteHealthcheck
      summary: Delete a health check
      tags:
      - healthcheck
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      - name: healthcheck_name
        in: path
        required: true
        description: Alphanumeric string identifying the healthcheck name
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse200'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      operationId: GetHealthcheck
      summary: Get a health check
      tags:
      - healthcheck
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      - name: healthcheck_name
        in: path
        required: true
        description: Alphanumeric string identifying the healthcheck name
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthcheckResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      operationId: UpdateHealthcheck
      summary: Update a health check
      tags:
      - healthcheck
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      - name: healthcheck_name
        in: path
        required: true
        description: Alphanumeric string identifying the healthcheck name
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthcheckResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /service/{service_id}/version/{version_id}/http3:
    post:
      operationId: CreateHTTP3
      summary: Enable support for HTTP/3
      tags:
      - http3
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTP3'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      operationId: DeleteHTTP3
      summary: Disable support for HTTP/3
      tags:
      - http3
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse200'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      operationId: GetHTTP3
      summary: Get HTTP/3 status
      tags:
      - http3
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTP3'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /service/{service_id}/version/{version_id}/image_optimizer_default_settings:
    get:
      operationId: GetDefaultSettings
      summary: Get current Image Optimizer Default Settings
      tags:
      - image_optimizer_default_settings
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultSettingsResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      operationId: UpdateDefaultSettings
      summary: Update Image Optimizer Default Settings
      tags:
      - image_optimizer_default_settings
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultSettingsResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/defaultSettings'
        required: true
  /service/{service_id}/version/{version_id}/lock:
    put:
      operationId: LockServiceVersion
      summary: Lock a service version
      tags:
      - version
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Version'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /service/{service_id}/version/{version_id}/logging/azureblob:
    post:
      operationId: CreateLogAzure
      summary: Create an Azure Blob Storage log endpoint
      tags:
      - logging_azureblob
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoggingAzureblobResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      operationId: ListLogAzure
      summary: List Azure Blob Storage log endpoints
      tags:
      - logging_azureblob
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /service/{service_id}/version/{version_id}/logging/azureblob/{logging_azureblob_name}:
    delete:
      operationId: DeleteLogAzure
      summary: Delete the Azure Blob Storage log endpoint
      tags:
      - logging_azureblob
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      - name: logging_azureblob_name
        in: path
        required: true
        description: Alphanumeric string identifying the logging azureblob name
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse200'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      operationId: GetLogAzure
      summary: Get an Azure Blob Storage log endpoint
      tags:
      - logging_azureblob
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      - name: logging_azureblob_name
        in: path
        required: true
        description: Alphanumeric string identifying the logging azureblob name
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoggingAzureblobResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      operationId: UpdateLogAzure
      summary: Update an Azure Blob Storage log endpoint
      tags:
      - logging_azureblob
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      - name: logging_azureblob_name
        in: path
        required: true
        description: Alphanumeric string identifying the logging azureblob name
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoggingAzureblobResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /service/{service_id}/version/{version_id}/logging/bigquery:
    post:
      operationId: CreateLogBigquery
      summary: Create a BigQuery log endpoint
      tags:
      - logging_bigquery
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoggingBigqueryResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      operationId: ListLogBigquery
      summary: List BigQuery log endpoints
      tags:
      - logging_bigquery
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /service/{service_id}/version/{version_id}/logging/bigquery/{logging_bigquery_name}:
    delete:
      operationId: DeleteLogBigquery
      summary: Delete a BigQuery log endpoint
      tags:
      - logging_bigquery
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      - name: logging_bigquery_name
        in: path
        required: true
        description: Alphanumeric string identifying the logging bigquery name
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse200'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      operationId: GetLogBigquery
      summary: Get a BigQuery log endpoint
      tags:
      - logging_bigquery
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      - name: logging_bigquery_name
        in: path
        required: true
        description: Alphanumeric string identifying the logging bigquery name
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoggingBigqueryResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      operationId: UpdateLogBigquery
      summary: Update a BigQuery log endpoint
      tags:
      - logging_bigquery
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      - name: logging_bigquery_name
        in: path
        required: true
        description: Alphanumeric string identifying the logging bigquery name
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoggingBigqueryResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /service/{service_id}/version/{version_id}/logging/cloudfiles:
    post:
      operationId: CreateLogCloudfiles
      summary: Create a Cloud Files log endpoint
      tags:
      - logging_cloudfiles
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoggingCloudfilesResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      operationId: ListLogCloudfiles
      summary: List Cloud Files log endpoints
      tags:
      - logging_cloudfiles
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /service/{service_id}/version/{version_id}/logging/cloudfiles/{logging_cloudfiles_name}:
    delete:
      operationId: DeleteLogCloudfiles
      summary: Delete the Cloud Files log endpoint
      tags:
      - logging_cloudfiles
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      - name: logging_cloudfiles_name
        in: path
        required: true
        description: Alphanumeric string identifying the logging cloudfiles name
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse200'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      operationId: GetLogCloudfiles
      summary: Get a Cloud Files log endpoint
      tags:
      - logging_cloudfiles
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      - name: logging_cloudfiles_name
        in: path
        required: true
        description: Alphanumeric string identifying the logging cloudfiles name
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoggingCloudfilesResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      operationId: UpdateLogCloudfiles
      summary: Update the Cloud Files log endpoint
      tags:
      - logging_cloudfiles
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      - name: logging_cloudfiles_name
        in: path
        required: true
        description: Alphanumeric string identifying the logging cloudfiles name
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoggingCloudfilesResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /service/{service_id}/version/{version_id}/logging/datadog:
    post:
      operationId: CreateLogDatadog
      summary: Create a Datadog log endpoint
      tags:
      - logging_datadog
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoggingDatadogResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      operationId: ListLogDatadog
      summary: List Datadog log endpoints
      tags:
      - logging_datadog
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /service/{service_id}/version/{version_id}/logging/datadog/{logging_datadog_name}:
    delete:
      operationId: DeleteLogDatadog
      summary: Delete a Datadog log endpoint
      tags:
      - logging_datadog
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      - name: logging_datadog_name
        in: path
        required: true
        description: Alphanumeric string identifying the logging datadog name
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse200'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      operationId: GetLogDatadog
      summary: Get a Datadog log endpoint
      tags:
      - logging_datadog
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      - name: logging_datadog_name
        in: path
        required: true
        description: Alphanumeric string identifying the logging datadog name
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoggingDatadogResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      operationId: UpdateLogDatadog
      summary: Update a Datadog log endpoint
      tags:
      - logging_datadog
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      - name: logging_datadog_name
        in: path
        required: true
        description: Alphanumeric string identifying the logging datadog name
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoggingDatadogResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /service/{service_id}/version/{version_id}/logging/digitalocean:
    post:
      operationId: CreateLogDigocean
      summary: Create a DigitalOcean Spaces log endpoint
      tags:
      - logging_digitalocean
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoggingDigitaloceanResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      operationId: ListLogDigocean
      summary: List DigitalOcean Spaces log endpoints
      tags:
      - logging_digitalocean
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /service/{service_id}/version/{version_id}/logging/digitalocean/{logging_digitalocean_name}:
    delete:
      operationId: DeleteLogDigocean
      summary: Delete a DigitalOcean Spaces log endpoint
      tags:
      - logging_digitalocean
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      - name: logging_digitalocean_name
        in: path
        required: true
        description: Alphanumeric string identifying the logging digitalocean name
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse200'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      operationId: GetLogDigocean
      summary: Get a DigitalOcean Spaces log endpoint
      tags:
      - logging_digitalocean
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      - name: logging_digitalocean_name
        in: path
        required: true
        description: Alphanumeric string identifying the logging digitalocean name
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoggingDigitaloceanResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      operationId: UpdateLogDigocean
      summary: Update a DigitalOcean Spaces log endpoint
      tags:
      - logging_digitalocean
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      - name: logging_digitalocean_name
        in: path
        required: true
        description: Alphanumeric string identifying the logging digitalocean name
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoggingDigitaloceanResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /service/{service_id}/version/{version_id}/logging/elasticsearch:
    post:
      operationId: CreateLogElasticsearch
      summary: Create an Elasticsearch log endpoint
      tags:
      - logging_elasticsearch
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoggingElasticsearchResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      operationId: ListLogElasticsearch
      summary: List Elasticsearch log endpoints
      tags:
      - logging_elasticsearch
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /service/{service_id}/version/{version_id}/logging/elasticsearch/{logging_elasticsearch_name}:
    delete:
      operationId: DeleteLogElasticsearch
      summary: Delete an Elasticsearch log endpoint
      tags:
      - logging_elasticsearch
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      - name: logging_elasticsearch_name
        in: path
        required: true
        description: Alphanumeric string identifying the logging elasticsearch name
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse200'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      operationId: GetLogElasticsearch
      summary: Get an Elasticsearch log endpoint
      tags:
      - logging_elasticsearch
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      - name: logging_elasticsearch_name
        in: path
        required: true
        description: Alphanumeric string identifying the logging elasticsearch name
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoggingElasticsearchResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      operationId: UpdateLogElasticsearch
      summary: Update an Elasticsearch log endpoint
      tags:
      - logging_elasticsearch
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      - name: logging_elasticsearch_name
        in: path
        required: true
        description: Alphanumeric string identifying the logging elasticsearch name
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoggingElasticsearchResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /service/{service_id}/version/{version_id}/logging/ftp:
    post:
      operationId: CreateLogFtp
      summary: Create an FTP log endpoint
      tags:
      - logging_ftp
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoggingFtpResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      operationId: ListLogFtp
      summary: List FTP log endpoints
      tags:
      - logging_ftp
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /service/{service_id}/version/{version_id}/logging/ftp/{logging_ftp_name}:
    delete:
      operationId: DeleteLogFtp
      summary: Delete an FTP log endpoint
      tags:
      - logging_ftp
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      - name: logging_ftp_name
        in: path
        required: true
        description: Alphanumeric string identifying the logging ftp name
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse200'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      operationId: GetLogFtp
      summary: Get an FTP log endpoint
      tags:
      - logging_ftp
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      - name: logging_ftp_name
        in: path
        required: true
        description: Alphanumeric string identifying the logging ftp name
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoggingFtpResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      operationId: UpdateLogFtp
      summary: Update an FTP log endpoint
      tags:
      - logging_ftp
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      - name: logging_ftp_name
        in: path
        required: true
        description: Alphanumeric string identifying the logging ftp name
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoggingFtpResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /service/{service_id}/version/{version_id}/logging/gcs:
    post:
      operationId: CreateLogGcs
      summary: Create a GCS log endpoint
      tags:
      - logging_gcs
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoggingGcsResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      operationId: ListLogGcs
      summary: List GCS log endpoints
      tags:
      - logging_gcs
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /service/{service_id}/version/{version_id}/logging/gcs/{logging_gcs_name}:
    delete:
      operationId: DeleteLogGcs
      summary: Delete a GCS log endpoint
      tags:
      - logging_gcs
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      - name: logging_gcs_name
        in: path
        required: true
        description: Alphanumeric string identifying the logging gcs name
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse200'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      operationId: GetLogGcs
      summary: Get a GCS log endpoint
      tags:
      - logging_gcs
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      - name: logging_gcs_name
        in: path
        required: true
        description: Alphanumeric string identifying the logging gcs name
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoggingGcsResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      operationId: UpdateLogGcs
      summary: Update a GCS log endpoint
      tags:
      - logging_gcs
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      - name: logging_gcs_name
        in: path
        required: true
        description: Alphanumeric string identifying the logging gcs name
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoggingGcsResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /service/{service_id}/version/{version_id}/logging/grafanacloudlogs:
    post:
      operationId: CreateLogGrafanacloudlogs
      summary: Create a Grafana Cloud Logs log endpoint
      tags:
      - logging_grafanacloudlogs
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoggingGrafanacloudlogsResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      operationId: ListLogGrafanacloudlogs
      summary: List Grafana Cloud Logs log endpoints
      tags:
      - logging_grafanacloudlogs
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /service/{service_id}/version/{version_id}/logging/grafanacloudlogs/{logging_grafanacloudlogs_name}:
    delete:
      operationId: DeleteLogGrafanacloudlogs
      summary: Delete the Grafana Cloud Logs log endpoint
      tags:
      - logging_grafanacloudlogs
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      - name: logging_grafanacloudlogs_name
        in: path
        required: true
        description: Alphanumeric string identifying the logging grafanacloudlogs name
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse200'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      operationId: GetLogGrafanacloudlogs
      summary: Get a Grafana Cloud Logs log endpoint
      tags:
      - logging_grafanacloudlogs
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      - name: logging_grafanacloudlogs_name
        in: path
        required: true
        description: Alphanumeric string identifying the logging grafanacloudlogs name
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoggingGrafanacloudlogsResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      operationId: UpdateLogGrafanacloudlogs
      summary: Update a Grafana Cloud Logs log endpoint
      tags:
      - logging_grafanacloudlogs
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      - name: logging_grafanacloudlogs_name
        in: path
        required: true
        description: Alphanumeric string identifying the logging grafanacloudlogs name
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoggingGrafanacloudlogsResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /service/{service_id}/version/{version_id}/logging/heroku:
    post:
      operationId: CreateLogHeroku
      summary: Create a Heroku log endpoint
      tags:
      - logging_heroku
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoggingHerokuResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      operationId: ListLogHeroku
      summary: List Heroku log endpoints
      tags:
      - logging_heroku
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /service/{service_id}/version/{version_id}/logging/heroku/{logging_heroku_name}:
    delete:
      operationId: DeleteLogHeroku
      summary: Delete the Heroku log endpoint
      tags:
      - logging_heroku
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      - name: logging_heroku_name
        in: path
        required: true
        description: Alphanumeric string identifying the logging heroku name
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse200'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      operationId: GetLogHeroku
      summary: Get a Heroku log endpoint
      tags:
      - logging_heroku
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      - name: logging_heroku_name
        in: path
        required: true
        description: Alphanumeric string identifying the logging heroku name
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoggingHerokuResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      operationId: UpdateLogHeroku
      summary: Update the Heroku log endpoint
      tags:
      - logging_heroku
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      - name: logging_heroku_name
        in: path
        required: true
        description: Alphanumeric string identifying the logging heroku name
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoggingHerokuResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /service/{service_id}/version/{version_id}/logging/honeycomb:
    post:
      operationId: CreateLogHoneycomb
      summary: Create a Honeycomb log endpoint
      tags:
      - logging_honeycomb
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoggingHoneycombResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      operationId: ListLogHoneycomb
      summary: List Honeycomb log endpoints
      tags:
      - logging_honeycomb
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /service/{service_id}/version/{version_id}/logging/honeycomb/{logging_honeycomb_name}:
    delete:
      operationId: DeleteLogHoneycomb
      summary: Delete the Honeycomb log endpoint
      tags:
      - logging_honeycomb
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      - name: logging_honeycomb_name
        in: path
        required: true
        description: Alphanumeric string identifying the logging honeycomb name
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse200'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      operationId: GetLogHoneycomb
      summary: Get a Honeycomb log endpoint
      tags:
      - logging_honeycomb
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      - name: logging_honeycomb_name
        in: path
        required: true
        description: Alphanumeric string identifying the logging honeycomb name
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoggingHoneycombResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      operationId: UpdateLogHoneycomb
      summary: Update a Honeycomb log endpoint
      tags:
      - logging_honeycomb
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      - name: logging_honeycomb_name
        in: path
        required: true
        description: Alphanumeric string identifying the logging honeycomb name
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoggingHoneycombResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /service/{service_id}/version/{version_id}/logging/https:
    post:
      operationId: CreateLogHTTPS
      summary: Create an HTTPS log endpoint
      tags:
      - logging_https
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoggingHTTPSResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      operationId: ListLogHTTPS
      summary: List HTTPS log endpoints
      tags:
      - logging_https
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /service/{service_id}/version/{version_id}/logging/https/{logging_https_name}:
    delete:
      operationId: DeleteLogHTTPS
      summary: Delete an HTTPS log endpoint
      tags:
      - logging_https
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      - name: logging_https_name
        in: path
        required: true
        description: Alphanumeric string identifying the logging https name
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse200'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      operationId: GetLogHTTPS
      summary: Get an HTTPS log endpoint
      tags:
      - logging_https
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      - name: logging_https_name
        in: path
        required: true
        description: Alphanumeric string identifying the logging https name
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoggingHTTPSResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      operationId: UpdateLogHTTPS
      summary: Update an HTTPS log endpoint
      tags:
      - logging_https
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      - name: logging_https_name
        in: path
        required: true
        description: Alphanumeric string identifying the logging https name
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoggingHTTPSResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /service/{service_id}/version/{version_id}/logging/kafka:
    post:
      operationId: CreateLogKafka
      summary: Create a Kafka log endpoint
      description: |
        Create a Kafka logging endpoint for a particular service and version.

        **IMPORTANT - Conditional SASL Authentication Parameters**:

        The following parameters have conditional requirements based on the `use_sasl` parameter:

        **When `use_sasl=true`** (SASL authentication enabled):
        - `auth_method` - REQUIRED: The SASL authentication method (e.g., "plain", "scram-sha-256", "scram-sha-512")
        - `username` - REQUIRED: SASL username
        - `password` - REQUIRED: SASL password

        **When `use_sasl=false`** (SASL authentication disabled):
        - These parameters (`auth_method`, `username`, `password`) must NOT be provided
        - Including them will result in an error
      tags:
      - logging_kafka
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoggingKafkaResponsePost'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      operationId: ListLogKafka
      summary: List Kafka log endpoints
      tags:
      - logging_kafka
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /service/{service_id}/version/{version_id}/logging/kafka/{logging_kafka_name}:
    delete:
      operationId: DeleteLogKafka
      summary: Delete the Kafka log endpoint
      tags:
      - logging_kafka
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      - name: logging_kafka_name
        in: path
        required: true
        description: Alphanumeric string identifying the logging kafka name
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse200'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      operationId: GetLogKafka
      summary: Get a Kafka log endpoint
      tags:
      - logging_kafka
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      - name: logging_kafka_name
        in: path
        required: true
        description: Alphanumeric string identifying the logging kafka name
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoggingKafkaResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      operationId: UpdateLogKafka
      summary: Update the Kafka log endpoint
      description: |
        Update a Kafka logging endpoint for a particular service and version.

        **IMPORTANT - Conditional SASL Authentication Parameters**:

        The following parameters have conditional requirements based on the `use_sasl` parameter:

        **When `use_sasl=true`** (SASL authentication enabled):
        - `auth_method` - REQUIRED: The SASL authentication method (e.g., "plain", "scram-sha-256", "scram-sha-512")
        - `username` - REQUIRED: SASL username
        - `password` - REQUIRED: SASL password

        **When `use_sasl=false`** (SASL authentication disabled):
        - These parameters (`auth_method`, `username`, `password`) must NOT be provided
        - Including them will result in an error
      tags:
      - logging_kafka
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      - name: logging_kafka_name
        in: path
        required: true
        description: Alphanumeric string identifying the logging kafka name
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoggingKafkaResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /service/{service_id}/version/{version_id}/logging/kinesis:
    post:
      operationId: CreateLogKinesis
      summary: Create  an Amazon Kinesis log endpoint
      tags:
      - logging_kinesis
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoggingKinesisResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      operationId: ListLogKinesis
      summary: List Amazon Kinesis log endpoints
      tags:
      - logging_kinesis
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /service/{service_id}/version/{version_id}/logging/kinesis/{logging_kinesis_name}:
    delete:
      operationId: DeleteLogKinesis
      summary: Delete the Amazon Kinesis log endpoint
      tags:
      - logging_kinesis
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      - name: logging_kinesis_name
        in: path
        required: true
        description: Alphanumeric string identifying the logging kinesis name
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse200'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      operationId: GetLogKinesis
      summary: Get an Amazon Kinesis log endpoint
      tags:
      - logging_kinesis
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      - name: logging_kinesis_name
        in: path
        required: true
        description: Alphanumeric string identifying the logging kinesis name
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoggingKinesisResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      operationId: UpdateLogKinesis
      summary: Update the Amazon Kinesis log endpoint
      tags:
      - logging_kinesis
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      - name: logging_kinesis_name
        in: path
        required: true
        description: Alphanumeric string identifying the logging kinesis name
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoggingKinesisResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /service/{service_id}/version/{version_id}/logging/logentries:
    post:
      operationId: CreateLogLogentries
      summary: Create a Logentries log endpoint
      tags:
      - logging_logentries
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoggingLogentriesResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      operationId: ListLogLogentries
      summary: List Logentries log endpoints
      tags:
      - logging_logentries
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /service/{service_id}/version/{version_id}/logging/logentries/{logging_logentries_name}:
    delete:
      operationId: DeleteLogLogentries
      summary: Delete a Logentries log endpoint
      tags:
      - logging_logentries
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      - name: logging_logentries_name
        in: path
        required: true
        description: Alphanumeric string identifying the logging logentries name
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse200'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      operationId: GetLogLogentries
      summary: Get a Logentries log endpoint
      tags:
      - logging_logentries
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      - name: logging_logentries_name
        in: path
        required: true
        description: Alphanumeric string identifying the logging logentries name
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoggingLogentriesResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      operationId: UpdateLogLogentries
      summary: Update a Logentries log endpoint
      tags:
      - logging_logentries
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      - name: logging_logentries_name
        in: path
        required: true
        description: Alphanumeric string identifying the logging logentries name
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoggingLogentriesResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /service/{service_id}/version/{version_id}/logging/loggly:
    post:
      operationId: CreateLogLoggly
      summary: Create a Loggly log endpoint
      tags:
      - logging_loggly
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoggingLogglyResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      operationId: ListLogLoggly
      summary: List Loggly log endpoints
      tags:
      - logging_loggly
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /service/{service_id}/version/{version_id}/logging/loggly/{logging_loggly_name}:
    delete:
      operationId: DeleteLogLoggly
      summary: Delete a Loggly log endpoint
      tags:
      - logging_loggly
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      - name: logging_loggly_name
        in: path
        required: true
        description: Alphanumeric string identifying the logging loggly name
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse200'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      operationId: GetLogLoggly
      summary: Get a Loggly log endpoint
      tags:
      - logging_loggly
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      - name: logging_loggly_name
        in: path
        required: true
        description: Alphanumeric string identifying the logging loggly name
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoggingLogglyResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      operationId: UpdateLogLoggly
      summary: Update a Loggly log endpoint
      tags:
      - logging_loggly
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      - name: logging_loggly_name
        in: path
        required: true
        description: Alphanumeric string identifying the logging loggly name
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoggingLogglyResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /service/{service_id}/version/{version_id}/logging/logshuttle:
    post:
      operationId: CreateLogLogshuttle
      summary: Create a Log Shuttle log endpoint
      tags:
      - logging_logshuttle
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoggingLogshuttleResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      operationId: ListLogLogshuttle
      summary: List Log Shuttle log endpoints
      tags:
      - logging_logshuttle
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /service/{service_id}/version/{version_id}/logging/logshuttle/{logging_logshuttle_name}:
    delete:
      operationId: DeleteLogLogshuttle
      summary: Delete a Log Shuttle log endpoint
      tags:
      - logging_logshuttle
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      - name: logging_logshuttle_name
        in: path
        required: true
        description: Alphanumeric string identifying the logging logshuttle name
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse200'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      operationId: GetLogLogshuttle
      summary: Get a Log Shuttle log endpoint
      tags:
      - logging_logshuttle
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      - name: logging_logshuttle_name
        in: path
        required: true
        description: Alphanumeric string identifying the logging logshuttle name
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoggingLogshuttleResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      operationId: UpdateLogLogshuttle
      summary: Update a Log Shuttle log endpoint
      tags:
      - logging_logshuttle
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      - name: logging_logshuttle_name
        in: path
        required: true
        description: Alphanumeric string identifying the logging logshuttle name
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoggingLogshuttleResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /service/{service_id}/version/{version_id}/logging/newrelic:
    post:
      operationId: CreateLogNewrelic
      summary: Create a New Relic log endpoint
      tags:
      - logging_newrelic
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoggingNewrelicResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      operationId: ListLogNewrelic
      summary: List New Relic log endpoints
      tags:
      - logging_newrelic
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /service/{service_id}/version/{version_id}/logging/newrelic/{logging_newrelic_name}:
    delete:
      operationId: DeleteLogNewrelic
      summary: Delete a New Relic log endpoint
      tags:
      - logging_newrelic
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      - name: logging_newrelic_name
        in: path
        required: true
        description: Alphanumeric string identifying the logging newrelic name
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse200'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      operationId: GetLogNewrelic
      summary: Get a New Relic log endpoint
      tags:
      - logging_newrelic
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      - name: logging_newrelic_name
        in: path
        required: true
        description: Alphanumeric string identifying the logging newrelic name
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoggingNewrelicResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      operationId: UpdateLogNewrelic
      summary: Update a New Relic log endpoint
      tags:
      - logging_newrelic
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      - name: logging_newrelic_name
        in: path
        required: true
        description: Alphanumeric string identifying the logging newrelic name
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoggingNewrelicResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /service/{service_id}/version/{version_id}/logging/newrelicotlp:
    post:
      operationId: CreateLogNewrelicotlp
      summary: Create a New Relic OTLP endpoint
      tags:
      - logging_newrelicotlp
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoggingNewrelicotlpResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      operationId: ListLogNewrelicotlp
      summary: List New Relic OTLP endpoints
      tags:
      - logging_newrelicotlp
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /service/{service_id}/version/{version_id}/logging/newrelicotlp/{logging_newrelicotlp_name}:
    delete:
      operationId: DeleteLogNewrelicotlp
      summary: Delete a New Relic OTLP endpoint
      tags:
      - logging_newrelicotlp
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      - name: logging_newrelicotlp_name
        in: path
        required: true
        description: Alphanumeric string identifying the logging newrelicotlp name
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse200'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      operationId: GetLogNewrelicotlp
      summary: Get a New Relic OTLP endpoint
      tags:
      - logging_newrelicotlp
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      - name: logging_newrelicotlp_name
        in: path
        required: true
        description: Alphanumeric string identifying the logging newrelicotlp name
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoggingNewrelicotlpResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      operationId: UpdateLogNewrelicotlp
      summary: Update a New Relic log endpoint
      tags:
      - logging_newrelicotlp
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      - name: logging_newrelicotlp_name
        in: path
        required: true
        description: Alphanumeric string identifying the logging newrelicotlp name
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoggingNewrelicotlpResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /service/{service_id}/version/{version_id}/logging/openstack:
    post:
      operationId: CreateLogOpenstack
      summary: Create an OpenStack log endpoint
      tags:
      - logging_openstack
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoggingOpenstackResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      operationId: ListLogOpenstack
      summary: List OpenStack log endpoints
      tags:
      - logging_openstack
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /service/{service_id}/version/{version_id}/logging/openstack/{logging_openstack_name}:
    delete:
      operationId: DeleteLogOpenstack
      summary: Delete an OpenStack log endpoint
      tags:
      - logging_openstack
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      - name: logging_openstack_name
        in: path
        required: true
        description: Alphanumeric string identifying the logging openstack name
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse200'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      operationId: GetLogOpenstack
      summary: Get an OpenStack log endpoint
      tags:
      - logging_openstack
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      - name: logging_openstack_name
        in: path
        required: true
        description: Alphanumeric string identifying the logging openstack name
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoggingOpenstackResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      operationId: UpdateLogOpenstack
      summary: Update an OpenStack log endpoint
      tags:
      - logging_openstack
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      - name: logging_openstack_name
        in: path
        required: true
        description: Alphanumeric string identifying the logging openstack name
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoggingOpenstackResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /service/{service_id}/version/{version_id}/logging/papertrail:
    post:
      operationId: CreateLogPapertrail
      summary: Create a Papertrail log endpoint
      tags:
      - logging_papertrail
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoggingPapertrailResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      operationId: ListLogPapertrail
      summary: List Papertrail log endpoints
      tags:
      - logging_papertrail
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /service/{service_id}/version/{version_id}/logging/papertrail/{logging_papertrail_name}:
    delete:
      operationId: DeleteLogPapertrail
      summary: Delete a Papertrail log endpoint
      tags:
      - logging_papertrail
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      - name: logging_papertrail_name
        in: path
        required: true
        description: Alphanumeric string identifying the logging papertrail name
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse200'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      operationId: GetLogPapertrail
      summary: Get a Papertrail log endpoint
      tags:
      - logging_papertrail
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      - name: logging_papertrail_name
        in: path
        required: true
        description: Alphanumeric string identifying the logging papertrail name
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoggingPapertrailResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      operationId: UpdateLogPapertrail
      summary: Update a Papertrail log endpoint
      tags:
      - logging_papertrail
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      - name: logging_papertrail_name
        in: path
        required: true
        description: Alphanumeric string identifying the logging papertrail name
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoggingPapertrailResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /service/{service_id}/version/{version_id}/logging/pubsub:
    post:
      operationId: CreateLogGcpPubsub
      summary: Create a GCP Cloud Pub/Sub log endpoint
      tags:
      - logging_pubsub
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoggingGooglePubsubResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      operationId: ListLogGcpPubsub
      summary: List GCP Cloud Pub/Sub log endpoints
      tags:
      - logging_pubsub
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /service/{service_id}/version/{version_id}/logging/pubsub/{logging_google_pubsub_name}:
    delete:
      operationId: DeleteLogGcpPubsub
      summary: Delete a GCP Cloud Pub/Sub log endpoint
      tags:
      - logging_pubsub
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      - name: logging_google_pubsub_name
        in: path
        required: true
        description: Alphanumeric string identifying the logging google pubsub name
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse200'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      operationId: GetLogGcpPubsub
      summary: Get a GCP Cloud Pub/Sub log endpoint
      tags:
      - logging_pubsub
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      - name: logging_google_pubsub_name
        in: path
        required: true
        description: Alphanumeric string identifying the logging google pubsub name
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoggingGooglePubsubResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      operationId: UpdateLogGcpPubsub
      summary: Update a GCP Cloud Pub/Sub log endpoint
      tags:
      - logging_pubsub
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      - name: logging_google_pubsub_name
        in: path
        required: true
        description: Alphanumeric string identifying the logging google pubsub name
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoggingGooglePubsubResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /service/{service_id}/version/{version_id}/logging/s3:
    post:
      operationId: CreateLogAwsS3
      summary: Create an AWS S3 log endpoint
      tags:
      - logging_s3
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoggingS3Response'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      operationId: ListLogAwsS3
      summary: List AWS S3 log endpoints
      tags:
      - logging_s3
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /service/{service_id}/version/{version_id}/logging/s3/{logging_s3_name}:
    delete:
      operationId: DeleteLogAwsS3
      summary: Delete an AWS S3 log endpoint
      tags:
      - logging_s3
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      - name: logging_s3_name
        in: path
        required: true
        description: Alphanumeric string identifying the logging s3 name
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse200'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      operationId: GetLogAwsS3
      summary: Get an AWS S3 log endpoint
      tags:
      - logging_s3
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      - name: logging_s3_name
        in: path
        required: true
        description: Alphanumeric string identifying the logging s3 name
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoggingS3Response'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      operationId: UpdateLogAwsS3
      summary: Update an AWS S3 log endpoint
      tags:
      - logging_s3
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      - name: logging_s3_name
        in: path
        required: true
        description: Alphanumeric string identifying the logging s3 name
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoggingS3Response'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /service/{service_id}/version/{version_id}/logging/scalyr:
    post:
      operationId: CreateLogScalyr
      summary: Create a Scalyr log endpoint
      tags:
      - logging_scalyr
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoggingScalyrResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      operationId: ListLogScalyr
      summary: List Scalyr log endpoints
      tags:
      - logging_scalyr
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /service/{service_id}/version/{version_id}/logging/scalyr/{logging_scalyr_name}:
    delete:
      operationId: DeleteLogScalyr
      summary: Delete the Scalyr log endpoint
      tags:
      - logging_scalyr
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      - name: logging_scalyr_name
        in: path
        required: true
        description: Alphanumeric string identifying the logging scalyr name
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse200'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      operationId: GetLogScalyr
      summary: Get a Scalyr log endpoint
      tags:
      - logging_scalyr
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      - name: logging_scalyr_name
        in: path
        required: true
        description: Alphanumeric string identifying the logging scalyr name
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoggingScalyrResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      operationId: UpdateLogScalyr
      summary: Update the Scalyr log endpoint
      tags:
      - logging_scalyr
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      - name: logging_scalyr_name
        in: path
        required: true
        description: Alphanumeric string identifying the logging scalyr name
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoggingScalyrResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /service/{service_id}/version/{version_id}/logging/sftp:
    post:
      operationId: CreateLogSftp
      summary: Create an SFTP log endpoint
      tags:
      - logging_sftp
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoggingSftpResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      operationId: ListLogSftp
      summary: List SFTP log endpoints
      tags:
      - logging_sftp
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /service/{service_id}/version/{version_id}/logging/sftp/{logging_sftp_name}:
    delete:
      operationId: DeleteLogSftp
      summary: Delete an SFTP log endpoint
      tags:
      - logging_sftp
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      - name: logging_sftp_name
        in: path
        required: true
        description: Alphanumeric string identifying the logging sftp name
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse200'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      operationId: GetLogSftp
      summary: Get an SFTP log endpoint
      tags:
      - logging_sftp
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      - name: logging_sftp_name
        in: path
        required: true
        description: Alphanumeric string identifying the logging sftp name
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoggingSftpResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      operationId: UpdateLogSftp
      summary: Update an SFTP log endpoint
      tags:
      - logging_sftp
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      - name: logging_sftp_name
        in: path
        required: true
        description: Alphanumeric string identifying the logging sftp name
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoggingSftpResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /service/{service_id}/version/{version_id}/logging/splunk:
    post:
      operationId: CreateLogSplunk
      summary: Create a Splunk log endpoint
      tags:
      - logging_splunk
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoggingSplunkResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      operationId: ListLogSplunk
      summary: List Splunk log endpoints
      tags:
      - logging_splunk
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /service/{service_id}/version/{version_id}/logging/splunk/{logging_splunk_name}:
    delete:
      operationId: DeleteLogSplunk
      summary: Delete a Splunk log endpoint
      tags:
      - logging_splunk
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      - name: logging_splunk_name
        in: path
        required: true
        description: Alphanumeric string identifying the logging splunk name
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse200'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      operationId: GetLogSplunk
      summary: Get a Splunk log endpoint
      tags:
      - logging_splunk
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      - name: logging_splunk_name
        in: path
        required: true
        description: Alphanumeric string identifying the logging splunk name
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoggingSplunkResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      operationId: UpdateLogSplunk
      summary: Update a Splunk log endpoint
      tags:
      - logging_splunk
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      - name: logging_splunk_name
        in: path
        required: true
        description: Alphanumeric string identifying the logging splunk name
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoggingSplunkResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /service/{service_id}/version/{version_id}/logging/sumologic:
    post:
      operationId: CreateLogSumologic
      summary: Create a Sumologic log endpoint
      tags:
      - logging_sumologic
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoggingSumologicResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      operationId: ListLogSumologic
      summary: List Sumologic log endpoints
      tags:
      - logging_sumologic
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /service/{service_id}/version/{version_id}/logging/sumologic/{logging_sumologic_name}:
    delete:
      operationId: DeleteLogSumologic
      summary: Delete a Sumologic log endpoint
      tags:
      - logging_sumologic
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      - name: logging_sumologic_name
        in: path
        required: true
        description: Alphanumeric string identifying the logging sumologic name
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse200'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      operationId: GetLogSumologic
      summary: Get a Sumologic log endpoint
      tags:
      - logging_sumologic
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      - name: logging_sumologic_name
        in: path
        required: true
        description: Alphanumeric string identifying the logging sumologic name
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoggingSumologicResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      operationId: UpdateLogSumologic
      summary: Update a Sumologic log endpoint
      tags:
      - logging_sumologic
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      - name: logging_sumologic_name
        in: path
        required: true
        description: Alphanumeric string identifying the logging sumologic name
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoggingSumologicResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /service/{service_id}/version/{version_id}/logging/syslog:
    post:
      operationId: CreateLogSyslog
      summary: Create a syslog log endpoint
      tags:
      - logging_syslog
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoggingSyslogResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      operationId: ListLogSyslog
      summary: List Syslog log endpoints
      tags:
      - logging_syslog
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /service/{service_id}/version/{version_id}/logging/syslog/{logging_syslog_name}:
    delete:
      operationId: DeleteLogSyslog
      summary: Delete a syslog log endpoint
      tags:
      - logging_syslog
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      - name: logging_syslog_name
        in: path
        required: true
        description: Alphanumeric string identifying the logging syslog name
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse200'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      operationId: GetLogSyslog
      summary: Get a syslog log endpoint
      tags:
      - logging_syslog
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      - name: logging_syslog_name
        in: path
        required: true
        description: Alphanumeric string identifying the logging syslog name
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoggingSyslogResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      operationId: UpdateLogSyslog
      summary: Update a syslog log endpoint
      tags:
      - logging_syslog
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      - name: logging_syslog_name
        in: path
        required: true
        description: Alphanumeric string identifying the logging syslog name
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoggingSyslogResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /service/{service_id}/version/{version_id}/package:
    get:
      operationId: GetPackage
      summary: Get details of the service's Compute package.
      tags:
      - package
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PackageResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      operationId: PutPackage
      summary: Upload a Compute package.
      tags:
      - package
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PackageResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /service/{service_id}/version/{version_id}/pool:
    post:
      operationId: CreateServerPool
      summary: Create a server pool
      tags:
      - pool
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PoolResponsePost'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      operationId: ListServerPools
      summary: List server pools
      tags:
      - pool
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /service/{service_id}/version/{version_id}/pool/{pool_name}:
    delete:
      operationId: DeleteServerPool
      summary: Delete a server pool
      tags:
      - pool
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      - name: pool_name
        in: path
        required: true
        description: Alphanumeric string identifying the pool name
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse200'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      operationId: GetServerPool
      summary: Get a server pool
      tags:
      - pool
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      - name: pool_name
        in: path
        required: true
        description: Alphanumeric string identifying the pool name
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PoolResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      operationId: UpdateServerPool
      summary: Update a server pool
      tags:
      - pool
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      - name: pool_name
        in: path
        required: true
        description: Alphanumeric string identifying the pool name
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PoolResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /service/{service_id}/version/{version_id}/rate-limiters:
    post:
      operationId: CreateRateLimiter
      summary: Create a rate limiter
      description: |
        Create a new rate limiter for a particular service and version.

        **IMPORTANT - Conditional Response Parameters**:

        1. **Response Object Name and Action**:
           - If `response_object_name` is provided, then `action` MUST be set to "response_object"
           - The `response_object_name` references a pre-existing response object by name

        2. **Custom Response Parameters**:
           When defining a custom response (not using a response object), ALL of the following parameters must be provided together:
           - `response_content` - The content to send in the response
           - `response_content_type` - The content type of the response (e.g., "text/plain", "application/json")
           - `response_status` - The HTTP status code to return (e.g., 429, 503)

           Providing only some of these parameters will result in an error.

        3. **Typical Configurations**:
           - Use a pre-existing response object: Set `action="response_object"` and provide `response_object_name`
           - Define a custom response: Provide all three response parameters together
           - Use default rate limiting behavior: Don't provide any response parameters
      tags:
      - rate_limiter
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimiterResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      operationId: ListRateLimiters
      summary: List rate limiters
      tags:
      - rate_limiter
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /service/{service_id}/version/{version_id}/request_settings:
    post:
      operationId: CreateRequestSettings
      summary: Create a Request Settings object
      tags:
      - request_settings
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestSettingsResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      operationId: ListRequestSettings
      summary: List Request Settings objects
      tags:
      - request_settings
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /service/{service_id}/version/{version_id}/request_settings/{request_settings_name}:
    delete:
      operationId: DeleteRequestSettings
      summary: Delete a Request Settings object
      tags:
      - request_settings
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      - name: request_settings_name
        in: path
        required: true
        description: Alphanumeric string identifying the request settings name
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse200'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      operationId: GetRequestSettings
      summary: Get a Request Settings object
      tags:
      - request_settings
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      - name: request_settings_name
        in: path
        required: true
        description: Alphanumeric string identifying the request settings name
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestSettingsResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      operationId: UpdateRequestSettings
      summary: Update a Request Settings object
      tags:
      - request_settings
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      - name: request_settings_name
        in: path
        required: true
        description: Alphanumeric string identifying the request settings name
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestSettingsResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /service/{service_id}/version/{version_id}/resource:
    post:
      operationId: CreateResource
      summary: Create a resource link
      tags:
      - resource
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      operationId: ListResources
      summary: List resource links
      tags:
      - resource
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /service/{service_id}/version/{version_id}/resource/{id}:
    delete:
      operationId: DeleteResource
      summary: Delete a resource link
      tags:
      - resource
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        required: true
        description: Alphanumeric string identifying the id
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse200'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      operationId: GetResource
      summary: Display a resource link
      tags:
      - resource
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        required: true
        description: Alphanumeric string identifying the id
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      operationId: UpdateResource
      summary: Update a resource link
      tags:
      - resource
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        required: true
        description: Alphanumeric string identifying the id
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /service/{service_id}/version/{version_id}/response_object:
    post:
      operationId: CreateResponseObject
      summary: Create a Response object
      tags:
      - response_object
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseObjectResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createResponseObjectRequest'
        required: true
    get:
      operationId: ListResponseObjects
      summary: List Response objects
      tags:
      - response_object
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /service/{service_id}/version/{version_id}/response_object/{response_object_name}:
    delete:
      operationId: DeleteResponseObject
      summary: Delete a Response Object
      tags:
      - response_object
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      - name: response_object_name
        in: path
        required: true
        description: Alphanumeric string identifying the response object name
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse200'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      operationId: GetResponseObject
      summary: Get a Response object
      tags:
      - response_object
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      - name: response_object_name
        in: path
        required: true
        description: Alphanumeric string identifying the response object name
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseObjectResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      operationId: UpdateResponseObject
      summary: Update a Response object
      tags:
      - response_object
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      - name: response_object_name
        in: path
        required: true
        description: Alphanumeric string identifying the response object name
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseObjectResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createResponseObjectRequest'
        required: true
  /service/{service_id}/version/{version_id}/settings:
    get:
      operationId: GetServiceSettings
      summary: Get service settings
      tags:
      - settings
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SettingsResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      operationId: UpdateServiceSettings
      summary: Update service settings
      tags:
      - settings
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SettingsResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /service/{service_id}/version/{version_id}/snippet:
    post:
      operationId: CreateSnippet
      summary: Create a snippet
      tags:
      - snippet
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SnippetResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      operationId: ListSnippets
      summary: List snippets
      tags:
      - snippet
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /service/{service_id}/version/{version_id}/snippet/{name}:
    delete:
      operationId: DeleteSnippet
      summary: Delete a snippet
      tags:
      - snippet
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      - name: name
        in: path
        required: true
        description: Alphanumeric string identifying the name
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse200'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      operationId: GetSnippet
      summary: Get a versioned snippet
      tags:
      - snippet
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      - name: name
        in: path
        required: true
        description: Alphanumeric string identifying the name
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SnippetResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      operationId: UpdateSnippet
      summary: Update a versioned snippet
      tags:
      - snippet
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      - name: name
        in: path
        required: true
        description: Alphanumeric string identifying the name
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SnippetResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /service/{service_id}/version/{version_id}/validate:
    get:
      operationId: ValidateServiceVersion
      summary: Validate a service version
      tags:
      - version
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse200'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /service/{service_id}/version/{version_id}/vcl:
    post:
      operationId: CreateCustomVcl
      summary: Create a custom VCL file
      tags:
      - vcl
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VclResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /service/{service_id}/version/{version_id}/vcl/{vcl_name}:
    delete:
      operationId: DeleteCustomVcl
      summary: Delete a custom VCL file
      tags:
      - vcl
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      - name: vcl_name
        in: path
        required: true
        description: Alphanumeric string identifying the vcl name
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse200'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      operationId: GetCustomVcl
      summary: Get a custom VCL file
      tags:
      - vcl
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      - name: vcl_name
        in: path
        required: true
        description: Alphanumeric string identifying the vcl name
        schema:
          type: string
      - name: no_content
        in: query
        required: false
        description: The no content
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VclResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /service/{service_id}/version/{version_id}/vcl/{vcl_name}/content:
    get:
      operationId: GetCustomVclHighlighted
      summary: Get a custom VCL file with syntax highlighting
      tags:
      - vcl
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      - name: vcl_name
        in: path
        required: true
        description: Alphanumeric string identifying the vcl name
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VclSyntaxHighlightingResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /service/{service_id}/version/{version_id}/vcl/{vcl_name}/download:
    get:
      operationId: GetCustomVclRaw
      summary: Download a custom VCL file
      tags:
      - vcl
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: version_id
        in: path
        required: true
        description: Integer identifying a service version
        schema:
          type: integer
          format: int32
      - name: vcl_name
        in: path
        required: true
        description: Alphanumeric string identifying the vcl name
        schema:
          type: string
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /stars:
    post:
      operationId: CreateServiceStar
      summary: Create a star
      tags:
      - star
      parameters: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StarResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/star'
        required: true
    get:
      operationId: ListServiceStars
      summary: List stars
      tags:
      - star
      parameters: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pagination'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /stars/{star_id}:
    delete:
      operationId: DeleteServiceStar
      summary: Delete a star
      tags:
      - star
      parameters:
      - name: star_id
        in: path
        required: true
        description: Alphanumeric string identifying the star
        schema:
          type: string
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      operationId: GetServiceStar
      summary: Get a star
      tags:
      - star
      parameters:
      - name: star_id
        in: path
        required: true
        description: Alphanumeric string identifying the star
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StarResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /stats:
    get:
      operationId: GetHistStats
      summary: Get historical stats
      tags:
      - historical
      parameters:
      - name: region
        in: query
        required: false
        description: The region
        schema:
          type: string
      - name: to
        in: query
        required: false
        description: Timestamp (Unix seconds)
        schema:
          type: integer
          format: int64
      - name: by
        in: query
        required: false
        description: The by
        schema:
          type: string
      - name: from
        in: query
        required: false
        description: Timestamp (Unix seconds)
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HistoricalStatsByServiceResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /stats/aggregate:
    get:
      operationId: GetHistStatsAggregated
      summary: Get aggregated historical stats
      tags:
      - historical
      parameters:
      - name: region
        in: query
        required: false
        description: The region
        schema:
          type: string
      - name: to
        in: query
        required: false
        description: Timestamp (Unix seconds)
        schema:
          type: integer
          format: int64
      - name: by
        in: query
        required: false
        description: The by
        schema:
          type: string
      - name: from
        in: query
        required: false
        description: Timestamp (Unix seconds)
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HistoricalStatsAggregatedResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /stats/field/{field}:
    get:
      operationId: GetHistStatsField
      summary: Get historical stats for a single field
      tags:
      - historical
      parameters:
      - name: field
        in: path
        required: true
        description: Alphanumeric string identifying the field
        schema:
          type: string
      - name: region
        in: query
        required: false
        description: The region
        schema:
          type: string
      - name: to
        in: query
        required: false
        description: Timestamp (Unix seconds)
        schema:
          type: integer
          format: int64
      - name: by
        in: query
        required: false
        description: The by
        schema:
          type: string
      - name: from
        in: query
        required: false
        description: Timestamp (Unix seconds)
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HistoricalStatsByServiceResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /stats/regions:
    get:
      operationId: GetRegions
      summary: Get region codes
      tags:
      - historical
      parameters: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HistoricalRegionsResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /stats/service/{service_id}:
    get:
      operationId: GetHistStatsService
      summary: Get historical stats for a single service
      tags:
      - historical
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: region
        in: query
        required: false
        description: The region
        schema:
          type: string
      - name: to
        in: query
        required: false
        description: Timestamp (Unix seconds)
        schema:
          type: integer
          format: int64
      - name: by
        in: query
        required: false
        description: The by
        schema:
          type: string
      - name: from
        in: query
        required: false
        description: Timestamp (Unix seconds)
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HistoricalStatsAggregatedResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /stats/service/{service_id}/field/{field}:
    get:
      operationId: GetHistStatsServiceField
      summary: Get historical stats for a single service/field combination
      tags:
      - historical
      parameters:
      - name: service_id
        in: path
        required: true
        description: Alphanumeric string identifying the service
        schema:
          type: string
      - name: field
        in: path
        required: true
        description: Alphanumeric string identifying the field
        schema:
          type: string
      - name: region
        in: query
        required: false
        description: The region
        schema:
          type: string
      - name: to
        in: query
        required: false
        description: Timestamp (Unix seconds)
        schema:
          type: integer
          format: int64
      - name: by
        in: query
        required: false
        description: The by
        schema:
          type: string
      - name: from
        in: query
        required: false
        description: Timestamp (Unix seconds)
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HistoricalStatsAggregatedResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /stats/usage:
    get:
      operationId: GetUsage
      summary: Get usage statistics
      tags:
      - historical
      parameters:
      - name: to
        in: query
        required: false
        description: Timestamp (Unix seconds)
        schema:
          type: integer
          format: int64
      - name: from
        in: query
        required: false
        description: Timestamp (Unix seconds)
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HistoricalUsageAggregatedResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /stats/usage_by_month:
    get:
      operationId: GetUsageMonth
      summary: Get month-to-date usage statistics
      tags:
      - historical
      parameters:
      - name: month
        in: query
        required: false
        description: The month
        schema:
          type: string
      - name: billable_units
        in: query
        required: false
        description: The billable units
        schema:
          type: string
      - name: year
        in: query
        required: false
        description: The year
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HistoricalUsageMonthResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /stats/usage_by_service:
    get:
      operationId: GetUsageService
      summary: Get usage statistics per service
      tags:
      - historical
      parameters:
      - name: to
        in: query
        required: false
        description: Timestamp (Unix seconds)
        schema:
          type: integer
          format: int64
      - name: from
        in: query
        required: false
        description: Timestamp (Unix seconds)
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HistoricalUsageServiceResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /sudo:
    post:
      operationId: RequestSudoAccess
      summary: Request Sudo access
      tags:
      - sudo
      parameters: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SudoResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/sudoRequest'
        required: true
  /tls/activations:
    post:
      operationId: CreateTLSActivation
      summary: Enable TLS for a domain using a custom certificate
      tags:
      - tls_activations
      parameters: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TLSActivationResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/tlsActivation'
        required: true
    get:
      operationId: ListTLSActivations
      summary: List TLS activations
      tags:
      - tls_activations
      parameters:
      - name: filter[tls_configuration.id]
        in: query
        required: false
        description: The filter[tls configuration.id]
        schema:
          type: string
      - name: include
        in: query
        required: false
        description: The include
        schema:
          type: string
      - name: page[number]
        in: query
        required: false
        description: The page[number]
        schema:
          type: string
      - name: page[size]
        in: query
        required: false
        description: The page[size]
        schema:
          type: string
      - name: filter[tls_domain.id]
        in: query
        required: false
        description: The filter[tls domain.id]
        schema:
          type: string
      - name: filter[tls_certificate.id]
        in: query
        required: false
        description: The filter[tls certificate.id]
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TLSActivationsResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /tls/activations/{tls_activation_id}:
    delete:
      operationId: DeleteTLSActivation
      summary: Disable TLS on a domain
      tags:
      - tls_activations
      parameters:
      - name: tls_activation_id
        in: path
        required: true
        description: Alphanumeric string identifying the tls activation
        schema:
          type: string
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      operationId: GetTLSActivation
      summary: Get a TLS activation
      tags:
      - tls_activations
      parameters:
      - name: tls_activation_id
        in: path
        required: true
        description: Alphanumeric string identifying the tls activation
        schema:
          type: string
      - name: include
        in: query
        required: false
        description: The include
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TLSActivationResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      operationId: UpdateTLSActivation
      summary: Update a certificate
      tags:
      - tls_activations
      parameters:
      - name: tls_activation_id
        in: path
        required: true
        description: Alphanumeric string identifying the tls activation
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TLSActivationResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/tlsActivation'
        required: true
  /tls/bulk/certificates:
    get:
      operationId: ListTLSBulkCerts
      summary: List certificates
      tags:
      - tls_bulk_certificates
      parameters:
      - name: filter[not_before]
        in: query
        required: false
        description: The filter[not before]
        schema:
          type: string
      - name: filter[not_after]
        in: query
        required: false
        description: The filter[not after]
        schema:
          type: string
      - name: page[number]
        in: query
        required: false
        description: The page[number]
        schema:
          type: string
      - name: sort
        in: query
        required: false
        description: The sort
        schema:
          type: string
          enum:
          - created
          - -created
          - updated
          - -updated
      - name: page[size]
        in: query
        required: false
        description: The page[size]
        schema:
          type: string
      - name: filter[tls_domain.id]
        in: query
        required: false
        description: The filter[tls domain.id]
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TLSBulkCertificatesResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      operationId: UploadTLSBulkCert
      summary: Upload a certificate
      tags:
      - tls_bulk_certificates
      parameters: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TLSBulkCertificateResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/tlsBulkCertificate'
        required: true
  /tls/bulk/certificates/{certificate_id}:
    delete:
      operationId: DeleteBulkTLSCert
      summary: Delete a certificate
      tags:
      - tls_bulk_certificates
      parameters:
      - name: certificate_id
        in: path
        required: true
        description: Alphanumeric string identifying the certificate
        schema:
          type: string
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      operationId: GetTLSBulkCert
      summary: Get a certificate
      tags:
      - tls_bulk_certificates
      parameters:
      - name: certificate_id
        in: path
        required: true
        description: Alphanumeric string identifying the certificate
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TLSBulkCertificateResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      operationId: UpdateBulkTLSCert
      summary: Update a certificate
      tags:
      - tls_bulk_certificates
      parameters:
      - name: certificate_id
        in: path
        required: true
        description: Alphanumeric string identifying the certificate
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TLSBulkCertificateResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/tlsBulkCertificate'
        required: true
  /tls/certificate_signing_requests:
    post:
      operationId: CreateCsr
      summary: Create CSR
      tags:
      - tls_csrs
      parameters: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TLSCsrResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/tlsCsr'
        required: true
  /tls/certificates:
    post:
      operationId: CreateTLSCert
      summary: Create a TLS certificate
      description: |
        Create a new TLS certificate to be used for TLS configurations.

        **IMPORTANT**: The request body must include the certificate data in PEM format within the `data.attributes.cert_blob` field.
      tags:
      - tls_certificates
      parameters: []
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/tlsCertificate'
        required: true
    get:
      operationId: ListTLSCerts
      summary: List TLS certificates
      tags:
      - tls_certificates
      parameters:
      - name: filter[not_after]
        in: query
        required: false
        description: The filter[not after]
        schema:
          type: string
      - name: include
        in: query
        required: false
        description: The include
        schema:
          type: string
      - name: sort
        in: query
        required: false
        description: The sort
        schema:
          type: string
          enum:
          - created
          - -created
          - updated
          - -updated
      - name: page[number]
        in: query
        required: false
        description: The page[number]
        schema:
          type: string
      - name: filter[tls_domains.id]
        in: query
        required: false
        description: The filter[tls domains.id]
        schema:
          type: string
      - name: filter[in_use]
        in: query
        required: false
        description: The filter[in use]
        schema:
          type: string
      - name: page[size]
        in: query
        required: false
        description: The page[size]
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TLSCertificatesResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /tls/certificates/{tls_certificate_id}:
    delete:
      operationId: DeleteTLSCert
      summary: Delete a TLS certificate
      tags:
      - tls_certificates
      parameters:
      - name: tls_certificate_id
        in: path
        required: true
        description: Alphanumeric string identifying the tls certificate
        schema:
          type: string
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      operationId: GetTLSCert
      summary: Get a TLS certificate
      tags:
      - tls_certificates
      parameters:
      - name: tls_certificate_id
        in: path
        required: true
        description: Alphanumeric string identifying the tls certificate
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TLSCertificateResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      operationId: UpdateTLSCert
      summary: Update a TLS certificate
      description: |
        Update an existing TLS certificate.

        **IMPORTANT**: To update the certificate content, include the new certificate data in PEM format within the `data.attributes.cert_blob` field.
      tags:
      - tls_certificates
      parameters:
      - name: tls_certificate_id
        in: path
        required: true
        description: Alphanumeric string identifying the tls certificate
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TLSCertificateResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/tlsCertificate'
        required: true
  /tls/certificates/{tls_certificate_id}/blob:
    get:
      operationId: GetTLSCertBlob
      summary: Get a TLS certificate blob (Limited Availability)
      tags:
      - tls_certificates
      parameters:
      - name: tls_certificate_id
        in: path
        required: true
        description: Alphanumeric string identifying the tls certificate
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TLSCertificateBlobResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /tls/configurations:
    get:
      operationId: ListTLSConfigs
      summary: List TLS configurations
      tags:
      - tls_configurations
      parameters:
      - name: page[size]
        in: query
        required: false
        description: The page[size]
        schema:
          type: string
      - name: filter[bulk]
        in: query
        required: false
        description: The filter[bulk]
        schema:
          type: string
      - name: page[number]
        in: query
        required: false
        description: The page[number]
        schema:
          type: string
      - name: include
        in: query
        required: false
        description: The include
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TLSConfigurationsResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /tls/configurations/{tls_configuration_id}:
    get:
      operationId: GetTLSConfig
      summary: Get a TLS configuration
      tags:
      - tls_configurations
      parameters:
      - name: tls_configuration_id
        in: path
        required: true
        description: Alphanumeric string identifying the tls configuration
        schema:
          type: string
      - name: include
        in: query
        required: false
        description: The include
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TLSConfigurationResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      operationId: UpdateTLSConfig
      summary: Update a TLS configuration
      tags:
      - tls_configurations
      parameters:
      - name: tls_configuration_id
        in: path
        required: true
        description: Alphanumeric string identifying the tls configuration
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TLSConfigurationResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/tlsConfiguration'
        required: true
  /tls/domains:
    get:
      operationId: ListTLSDomains
      summary: List TLS domains
      tags:
      - tls_domains
      parameters:
      - name: filter[tls_subscriptions.id]
        in: query
        required: false
        description: The filter[tls subscriptions.id]
        schema:
          type: string
      - name: filter[tls_certificates.id]
        in: query
        required: false
        description: The filter[tls certificates.id]
        schema:
          type: string
      - name: include
        in: query
        required: false
        description: The include
        schema:
          type: string
      - name: sort
        in: query
        required: false
        description: The sort
        schema:
          type: string
          enum:
          - created
          - -created
          - updated
          - -updated
      - name: page[number]
        in: query
        required: false
        description: The page[number]
        schema:
          type: string
      - name: filter[in_use]
        in: query
        required: false
        description: The filter[in use]
        schema:
          type: string
      - name: page[size]
        in: query
        required: false
        description: The page[size]
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TLSDomainsResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /tls/mutual_authentications:
    post:
      operationId: CreateMutualTLSAuthentication
      summary: Create a Mutual Authentication
      tags:
      - mutual_authentication
      parameters: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MutualAuthenticationResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/mutualAuthentication'
        required: true
    get:
      operationId: ListMutualAuthentications
      summary: List Mutual Authentications
      tags:
      - mutual_authentication
      parameters:
      - name: page[number]
        in: query
        required: false
        description: The page[number]
        schema:
          type: string
      - name: page[size]
        in: query
        required: false
        description: The page[size]
        schema:
          type: string
      - name: include
        in: query
        required: false
        description: The include
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MutualAuthenticationsResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /tls/mutual_authentications/{mutual_authentication_id}:
    delete:
      operationId: DeleteMutualTLS
      summary: Delete a Mutual TLS
      tags:
      - mutual_authentication
      parameters:
      - name: mutual_authentication_id
        in: path
        required: true
        description: Alphanumeric string identifying the mutual authentication
        schema:
          type: string
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      operationId: GetMutualAuthentication
      summary: Get a Mutual Authentication
      tags:
      - mutual_authentication
      parameters:
      - name: mutual_authentication_id
        in: path
        required: true
        description: Alphanumeric string identifying the mutual authentication
        schema:
          type: string
      - name: include
        in: query
        required: false
        description: The include
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MutualAuthenticationResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      operationId: PatchMutualAuthentication
      summary: Update a Mutual Authentication
      tags:
      - mutual_authentication
      parameters:
      - name: mutual_authentication_id
        in: path
        required: true
        description: Alphanumeric string identifying the mutual authentication
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MutualAuthenticationResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/mutualAuthentication'
        required: true
  /tls/private_keys:
    post:
      operationId: CreateTLSKey
      summary: Create a TLS private key
      description: |
        Create a new TLS private key to be used for TLS configurations.

        **IMPORTANT**: The request body must include the private key data in PEM format within the `data.attributes.key` field.
      tags:
      - tls_private_keys
      parameters: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TLSPrivateKeyResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/tlsPrivateKey'
        required: true
    get:
      operationId: ListTLSKeys
      summary: List TLS private keys
      tags:
      - tls_private_keys
      parameters:
      - name: page[number]
        in: query
        required: false
        description: The page[number]
        schema:
          type: string
      - name: page[size]
        in: query
        required: false
        description: The page[size]
        schema:
          type: string
      - name: filter[in_use]
        in: query
        required: false
        description: The filter[in use]
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TLSPrivateKeysResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /tls/private_keys/{tls_private_key_id}:
    delete:
      operationId: DeleteTLSKey
      summary: Delete a TLS private key
      tags:
      - tls_private_keys
      parameters:
      - name: tls_private_key_id
        in: path
        required: true
        description: Alphanumeric string identifying the tls private key
        schema:
          type: string
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      operationId: GetTLSKey
      summary: Get a TLS private key
      tags:
      - tls_private_keys
      parameters:
      - name: tls_private_key_id
        in: path
        required: true
        description: Alphanumeric string identifying the tls private key
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TLSPrivateKeyResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /tls/subscriptions:
    post:
      operationId: CreateTLSSub
      summary: Create a TLS subscription
      tags:
      - tls_subscriptions
      parameters:
      - name: force
        in: query
        required: false
        description: The force
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TLSSubscriptionResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/tlsSubscription'
        required: true
    get:
      operationId: ListTLSSubs
      summary: List TLS subscriptions
      tags:
      - tls_subscriptions
      parameters:
      - name: include
        in: query
        required: false
        description: The include
        schema:
          type: string
      - name: filter[state]
        in: query
        required: false
        description: The filter[state]
        schema:
          type: string
      - name: sort
        in: query
        required: false
        description: The sort
        schema:
          type: string
          enum:
          - created
          - -created
          - updated
          - -updated
      - name: filter[has_active_order]
        in: query
        required: false
        description: The filter[has active order]
        schema:
          type: string
      - name: page[number]
        in: query
        required: false
        description: The page[number]
        schema:
          type: string
      - name: filter[tls_domains.id]
        in: query
        required: false
        description: The filter[tls domains.id]
        schema:
          type: string
      - name: page[size]
        in: query
        required: false
        description: The page[size]
        schema:
          type: string
      - name: filter[certificate_authority]
        in: query
        required: false
        description: The filter[certificate authority]
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TLSSubscriptionsResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /tls/subscriptions/{tls_subscription_id}:
    delete:
      operationId: DeleteTLSSub
      summary: Delete a TLS subscription
      tags:
      - tls_subscriptions
      parameters:
      - name: tls_subscription_id
        in: path
        required: true
        description: Alphanumeric string identifying the tls subscription
        schema:
          type: string
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      operationId: GetTLSSub
      summary: Get a TLS subscription
      tags:
      - tls_subscriptions
      parameters:
      - name: tls_subscription_id
        in: path
        required: true
        description: Alphanumeric string identifying the tls subscription
        schema:
          type: string
      - name: include
        in: query
        required: false
        description: The include
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TLSSubscriptionResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      operationId: PatchTLSSub
      summary: Update a TLS subscription
      tags:
      - tls_subscriptions
      parameters:
      - name: tls_subscription_id
        in: path
        required: true
        description: Alphanumeric string identifying the tls subscription
        schema:
          type: string
      - name: force
        in: query
        required: false
        description: The force
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TLSSubscriptionResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/tlsSubscription'
        required: true
  /tls/subscriptions/{tls_subscription_id}/authorizations/{tls_authorization_id}/globalsign_email_challenges:
    post:
      operationId: CreateGlobalsignEmailChallenge
      summary: Creates a GlobalSign email challenge.
      tags:
      - tls_subscriptions
      parameters:
      - name: tls_subscription_id
        in: path
        required: true
        description: Alphanumeric string identifying the tls subscription
        schema:
          type: string
      - name: tls_authorization_id
        in: path
        required: true
        description: Alphanumeric string identifying the tls authorization
        schema:
          type: string
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/requestBody'
        required: true
  ? /tls/subscriptions/{tls_subscription_id}/authorizations/{tls_authorization_id}/globalsign_email_challenges/{globalsign_email_challenge_id}
  : delete:
      operationId: DeleteGlobalsignEmailChallenge
      summary: Delete a GlobalSign email challenge
      tags:
      - tls_subscriptions
      parameters:
      - name: tls_subscription_id
        in: path
        required: true
        description: Alphanumeric string identifying the tls subscription
        schema:
          type: string
      - name: tls_authorization_id
        in: path
        required: true
        description: Alphanumeric string identifying the tls authorization
        schema:
          type: string
      - name: globalsign_email_challenge_id
        in: path
        required: true
        description: Alphanumeric string identifying the globalsign email challenge
        schema:
          type: string
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /tokens:
    delete:
      operationId: BulkRevokeTokens
      summary: Revoke multiple tokens
      tags:
      - tokens
      parameters: []
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        content:
          application/vnd.api+json; ext=bulk:
            schema:
              $ref: '#/components/schemas/requestBody'
        required: true
    post:
      operationId: CreateToken
      summary: Create a token
      tags:
      - tokens
      parameters: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenCreatedResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      operationId: ListTokensUser
      summary: List tokens for the authenticated user
      tags:
      - tokens
      parameters: []
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /tokens/self:
    get:
      operationId: GetTokenCurrent
      summary: Get the current token
      tags:
      - tokens
      parameters: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      operationId: RevokeTokenCurrent
      summary: Revoke the current token
      tags:
      - tokens
      parameters: []
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /tokens/{token_id}:
    get:
      operationId: GetToken
      summary: Get a token
      tags:
      - tokens
      parameters:
      - name: token_id
        in: path
        required: true
        description: Alphanumeric string identifying the token
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      operationId: RevokeToken
      summary: Revoke a token
      tags:
      - tokens
      parameters:
      - name: token_id
        in: path
        required: true
        description: Alphanumeric string identifying the token
        schema:
          type: string
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /user:
    post:
      operationId: CreateUser
      summary: Create a user
      tags:
      - user
      parameters: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /user-groups:
    post:
      operationId: CreateAUserGroup
      summary: Create a user group
      tags:
      - iam_user_groups
      parameters: []
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requestBody'
        required: true
    get:
      operationId: ListUserGroups
      summary: List user groups
      tags:
      - iam_user_groups
      parameters:
      - name: per_page
        in: query
        required: false
        description: The per page
        schema:
          type: integer
          format: int32
          minimum: 1
      - name: page
        in: query
        required: false
        description: The page
        schema:
          type: integer
          format: int32
          minimum: 1
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /user-groups/{user_group_id}:
    delete:
      operationId: DeleteAUserGroup
      summary: Delete a user group
      tags:
      - iam_user_groups
      parameters:
      - name: user_group_id
        in: path
        required: true
        description: Alphanumeric string identifying the user group
        schema:
          type: string
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      operationId: GetAUserGroup
      summary: Get a user group
      tags:
      - iam_user_groups
      parameters:
      - name: user_group_id
        in: path
        required: true
        description: Alphanumeric string identifying the user group
        schema:
          type: string
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      operationId: UpdateAUserGroup
      summary: Update a user group
      tags:
      - iam_user_groups
      parameters:
      - name: user_group_id
        in: path
        required: true
        description: Alphanumeric string identifying the user group
        schema:
          type: string
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requestBody'
        required: true
  /user-groups/{user_group_id}/members:
    post:
      operationId: AddUserGroupMembers
      summary: Add members to a user group
      tags:
      - iam_user_groups
      parameters:
      - name: user_group_id
        in: path
        required: true
        description: Alphanumeric string identifying the user group
        schema:
          type: string
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requestBody'
        required: true
    get:
      operationId: ListUserGroupMembers
      summary: List members of a user group
      tags:
      - iam_user_groups
      parameters:
      - name: user_group_id
        in: path
        required: true
        description: Alphanumeric string identifying the user group
        schema:
          type: string
      - name: per_page
        in: query
        required: false
        description: The per page
        schema:
          type: integer
          format: int32
          minimum: 1
      - name: page
        in: query
        required: false
        description: The page
        schema:
          type: integer
          format: int32
          minimum: 1
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      operationId: RemoveUserGroupMembers
      summary: Remove members of a user group
      tags:
      - iam_user_groups
      parameters:
      - name: user_group_id
        in: path
        required: true
        description: Alphanumeric string identifying the user group
        schema:
          type: string
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requestBody'
        required: true
  /user-groups/{user_group_id}/roles:
    post:
      operationId: AddUserGroupRoles
      summary: Add roles to a user group
      tags:
      - iam_user_groups
      parameters:
      - name: user_group_id
        in: path
        required: true
        description: Alphanumeric string identifying the user group
        schema:
          type: string
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requestBody'
        required: true
    get:
      operationId: ListUserGroupRoles
      summary: List roles in a user group
      tags:
      - iam_user_groups
      parameters:
      - name: user_group_id
        in: path
        required: true
        description: Alphanumeric string identifying the user group
        schema:
          type: string
      - name: per_page
        in: query
        required: false
        description: The per page
        schema:
          type: integer
          format: int32
          minimum: 1
      - name: page
        in: query
        required: false
        description: The page
        schema:
          type: integer
          format: int32
          minimum: 1
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      operationId: RemoveUserGroupRoles
      summary: Remove roles from a user group
      tags:
      - iam_user_groups
      parameters:
      - name: user_group_id
        in: path
        required: true
        description: Alphanumeric string identifying the user group
        schema:
          type: string
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requestBody'
        required: true
  /user-groups/{user_group_id}/service-groups:
    post:
      operationId: AddUserGroupServiceGroups
      summary: Add service groups to a user group
      tags:
      - iam_user_groups
      parameters:
      - name: user_group_id
        in: path
        required: true
        description: Alphanumeric string identifying the user group
        schema:
          type: string
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requestBody'
        required: true
    get:
      operationId: ListUserGroupServiceGroups
      summary: List service groups in a user group
      tags:
      - iam_user_groups
      parameters:
      - name: user_group_id
        in: path
        required: true
        description: Alphanumeric string identifying the user group
        schema:
          type: string
      - name: per_page
        in: query
        required: false
        description: The per page
        schema:
          type: integer
          format: int32
          minimum: 1
      - name: page
        in: query
        required: false
        description: The page
        schema:
          type: integer
          format: int32
          minimum: 1
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      operationId: RemoveUserGroupServiceGroups
      summary: Remove service groups from a user group
      tags:
      - iam_user_groups
      parameters:
      - name: user_group_id
        in: path
        required: true
        description: Alphanumeric string identifying the user group
        schema:
          type: string
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requestBody'
        required: true
  /user/{user_id}:
    delete:
      operationId: DeleteUser
      summary: Delete a user
      tags:
      - user
      parameters:
      - name: user_id
        in: path
        required: true
        description: Alphanumeric string identifying the user
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse200'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      operationId: GetUser
      summary: Get a user
      tags:
      - user
      parameters:
      - name: user_id
        in: path
        required: true
        description: Alphanumeric string identifying the user
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      operationId: UpdateUser
      summary: Update a user
      tags:
      - user
      parameters:
      - name: user_id
        in: path
        required: true
        description: Alphanumeric string identifying the user
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /user/{user_login}/password/request_reset:
    post:
      operationId: RequestPasswordReset
      summary: Request a password reset
      tags:
      - user
      parameters:
      - name: user_login
        in: path
        required: true
        description: Alphanumeric string identifying the user login
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineResponse200'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  securitySchemes:
    apiKey:
      type: apiKey
      name: Fastly-Key
      in: header
      description: Fastly API key for authentication
  schemas:
    Error:
      type: object
      properties:
        errors:
          type: array
          items:
            type: object
            properties:
              status:
                type: string
                description: HTTP status code
              title:
                type: string
                description: Error title
              detail:
                type: string
                description: Error details
              code:
                type: string
                description: Error code
    NullableString:
      type: string
      nullable: true
      description: A string value that can be null
    NullableInt32:
      type: integer
      format: int32
      nullable: true
      description: An integer value that can be null
    NullableBool:
      type: boolean
      nullable: true
      description: A boolean value that can be null
    NullableTime:
      type: string
      format: date-time
      nullable: true
      description: A timestamp that can be null
    BotManagementResponseLinksLinks:
      type: object
      properties:
        self,omitempty:
          type: string
          description: Location of the service resource
        service,omitempty:
          type: string
    LoggingSumologicResponse:
      type: object
      properties:
        name,omitempty:
          type: string
          description: Where in the generated VCL the logging call should be placed. If not set, endpoints with `format_version` of 2 are placed in `vcl_log` and those with `format_version` of 1 are placed
            in `vcl_deliver`.
        placement,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: The name of an existing condition in the configured endpoint, or leave blank to always execute.
        response_condition,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: A Fastly [log format string](https://docs.fastly.com/en/guides/custom-log-formats).
        format,omitempty:
          type: string
          description: The version of the custom logging format used for the configured endpoint. The logging call gets placed by default in `vcl_log` if `format_version` is set to `2` and in `vcl_deliver`
            if `format_version` is set to `1`.
        format_version,omitempty:
          type: string
        message_type,omitempty:
          $ref: '#/components/schemas/LoggingMessageType'
          description: The URL to post logs to.
        url,omitempty:
          type: string
          description: Date and time in ISO 8601 format.
        created_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        deleted_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        updated_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
        service_id,omitempty:
          type: string
        version,omitempty:
          type: string
    DimensionOs:
      type: object
      properties:
        os,omitempty:
          type: string
    DdosProtectionResponseLinks:
      type: object
      properties:
        _links,omitempty:
          $ref: '#/components/schemas/DdosProtectionResponseLinksLinks'
    RelationshipTLSConfiguration:
      type: object
      properties:
        tls_configuration,omitempty:
          $ref: '#/components/schemas/RelationshipTLSConfigurationTLSConfiguration'
    IamRoleAllOf:
      type: object
      properties:
        id,omitempty:
          type: string
          description: The type of the object.
        object,omitempty:
          type: string
          description: Name of the role.
        name,omitempty:
          type: string
          description: Description of the role.
        description,omitempty:
          type: string
          description: This attribute is set to `true` if the role is managed by the customer. It is set to `false` if the role was created by Fastly.
        custom,omitempty:
          type: boolean
          description: Number of permissions assigned to the role.
        permissions_count,omitempty:
          type: integer
          format: int32
    RequestSettingsResponse:
      type: object
      properties:
        created_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        deleted_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        updated_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
        service_id,omitempty:
          type: string
        version,omitempty:
          type: string
          description: Allows you to terminate request handling and immediately perform an action.
        action,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: Sets the host header.
        default_host,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: Comma separated list of varnish request object fields that should be in the hash key.
        hash_keys,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: Name for the request settings.
        name,omitempty:
          type: string
          description: Condition which, if met, will select this configuration during a request. Optional.
        request_condition,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: Short for X-Forwarded-For.
        xff,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: Disable collapsed forwarding, so you don't wait for other objects to origin.
        bypass_busy_wait,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: Allows you to force a cache miss for the request. Replaces the item in the cache if the content is cacheable.
        force_miss,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: Forces the request use SSL (redirects a non-SSL to SSL).
        force_ssl,omitempty:
          type: string
          description: Injects Fastly-Geo-Country, Fastly-Geo-City, and Fastly-Geo-Region into the request headers.
        geo_headers,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: How old an object is allowed to be to serve stale-if-error or stale-while-revalidate.
        max_stale_age,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: Injects the X-Timer info into the request for viewing origin fetch durations.
        timer_support,omitempty:
          $ref: '#/components/schemas/NullableString'
    InlineObject:
      type: object
      properties:
        vcl:
          type: string
      required:
      - vcl
    LoggingScalyrResponse:
      type: object
      properties:
        name,omitempty:
          type: string
          description: Where in the generated VCL the logging call should be placed. If not set, endpoints with `format_version` of 2 are placed in `vcl_log` and those with `format_version` of 1 are placed
            in `vcl_deliver`.
        placement,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: The name of an existing condition in the configured endpoint, or leave blank to always execute.
        response_condition,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: A Fastly [log format string](https://docs.fastly.com/en/guides/custom-log-formats).
        format,omitempty:
          type: string
          description: The version of the custom logging format used for the configured endpoint. The logging call gets placed by default in `vcl_log` if `format_version` is set to `2` and in `vcl_deliver`
            if `format_version` is set to `1`.
        format_version,omitempty:
          type: string
          description: The region that log data will be sent to.
        region,omitempty:
          type: string
          description: The token to use for authentication.
        token,omitempty:
          type: string
          description: The name of the logfile within Scalyr.
        project_id,omitempty:
          type: string
          description: Date and time in ISO 8601 format.
        created_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        deleted_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        updated_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
        service_id,omitempty:
          type: string
        version,omitempty:
          type: string
    MutualAuthenticationsResponse:
      type: object
      properties:
        links,omitempty:
          $ref: '#/components/schemas/PaginationLinks'
        meta,omitempty:
          $ref: '#/components/schemas/PaginationMeta'
    DdosProtectionRule:
      type: object
      properties:
        created_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        updated_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Unique ID of the rule.
        id,omitempty:
          type: string
          description: A human-readable name for the rule.
        name,omitempty:
          type: string
        action,omitempty:
          $ref: '#/components/schemas/DdosProtectionAction'
          description: Alphanumeric string identifying the customer.
        customer_id,omitempty:
          type: string
          description: Alphanumeric string identifying the service.
        service_id,omitempty:
          type: string
          description: Source IP address attribute.
        source_ip,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: Country code attribute.
        country_code,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: Host attribute.
        host,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: ASN attribute.
        asn,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: Source IP prefix attribute.
        source_ip_prefix,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: Attribute category for additional, unlisted attributes used in a rule.
    FanoutResponseProduct:
      type: object
      properties:
        product,omitempty:
          $ref: '#/components/schemas/FanoutResponseProductProduct'
    Values:
      type: object
      properties:
        edge_requests,omitempty:
          type: integer
          format: int64
          description: Total header bytes delivered from Fastly to the end user.
        edge_resp_header_bytes,omitempty:
          type: integer
          format: int64
          description: Total body bytes delivered from Fastly to the end user.
        edge_resp_body_bytes,omitempty:
          type: integer
          format: int64
          description: Number of 1xx \"Informational\" category status codes delivered.
        status_1xx,omitempty:
          type: integer
          format: int64
          description: Number of 2xx \"Success\" status codes delivered.
        status_2xx,omitempty:
          type: integer
          format: int64
          description: Number of 3xx \"Redirection\" codes delivered.
        status_3xx,omitempty:
          type: integer
          format: int64
          description: Number of 4xx \"Client Error\" codes delivered.
        status_4xx,omitempty:
          type: integer
          format: int64
          description: Number of 5xx \"Server Error\" codes delivered.
        status_5xx,omitempty:
          type: integer
          format: int64
          description: Number of responses delivered with status code 200 (Success).
        status_200,omitempty:
          type: integer
          format: int64
          description: Number of responses delivered with status code 204 (No Content).
        status_204,omitempty:
          type: integer
          format: int64
          description: Number of responses delivered with status code 206 (Partial Content).
        status_206,omitempty:
          type: integer
          format: int64
          description: Number of responses delivered with status code 301 (Moved Permanently).
        status_301,omitempty:
          type: integer
          format: int64
          description: Number of responses delivered with status code 302 (Found).
        status_302,omitempty:
          type: integer
          format: int64
          description: Number of responses delivered with status code 304 (Not Modified).
        status_304,omitempty:
          type: integer
          format: int64
          description: Number of responses delivered with status code 400 (Bad Request).
        status_400,omitempty:
          type: integer
          format: int64
          description: Number of responses delivered with status code 401 (Unauthorized).
        status_401,omitempty:
          type: integer
          format: int64
          description: Number of responses delivered with status code 403 (Forbidden).
        status_403,omitempty:
          type: integer
          format: int64
          description: Number of responses delivered with status code 404 (Not Found).
        status_404,omitempty:
          type: integer
          format: int64
          description: Number of responses delivered with status code 416 (Range Not Satisfiable).
        status_416,omitempty:
          type: integer
          format: int64
          description: Number of responses delivered with status code 429 (Too Many Requests).
        status_429,omitempty:
          type: integer
          format: int64
          description: Number of responses delivered with status code 500 (Internal Server Error).
        status_500,omitempty:
          type: integer
          format: int64
          description: Number of responses delivered with status code 501 (Not Implemented).
        status_501,omitempty:
          type: integer
          format: int64
          description: Number of responses delivered with status code 502 (Bad Gateway).
        status_502,omitempty:
          type: integer
          format: int64
          description: Number of responses delivered with status code 503 (Service Unavailable).
        status_503,omitempty:
          type: integer
          format: int64
          description: Number of responses delivered with status code 504 (Gateway Timeout).
        status_504,omitempty:
          type: integer
          format: int64
          description: Number of responses delivered with status code 505 (HTTP Version Not Supported).
        status_505,omitempty:
          type: integer
          format: int64
          description: Number of responses delivered with status code 530.
        status_530,omitempty:
          type: integer
          format: int64
          description: Number of requests processed.
        requests,omitempty:
          type: integer
          format: int64
          description: Total header bytes delivered.
        resp_header_bytes,omitempty:
          type: integer
          format: int64
          description: Total body bytes delivered.
        resp_body_bytes,omitempty:
          type: integer
          format: int64
          description: Total header bytes sent to origin.
        bereq_header_bytes,omitempty:
          type: integer
          format: int64
          description: Total body bytes sent to origin.
        bereq_body_bytes,omitempty:
          type: integer
          format: int64
          description: Number of requests sent by end users to Fastly that resulted in a hit at the edge.
        edge_hit_requests,omitempty:
          type: integer
          format: int64
          description: Number of requests sent by end users to Fastly that resulted in a miss at the edge.
        edge_miss_requests,omitempty:
          type: integer
          format: int64
          description: Number of requests sent to origin.
        origin_fetches,omitempty:
          type: integer
          format: int64
          description: Total header bytes received from origin.
        origin_fetch_resp_header_bytes,omitempty:
          type: integer
          format: int64
          description: Total body bytes received from origin.
        origin_fetch_resp_body_bytes,omitempty:
          type: integer
          format: int64
          description: Total bytes delivered (`resp_header_bytes` + `resp_body_bytes` + `bereq_header_bytes` + `bereq_body_bytes`).
        bandwidth,omitempty:
          type: integer
          format: int64
          description: Ratio of cache hits to cache misses at the edge, between 0 and 1 (`edge_hit_requests` / (`edge_hit_requests` + `edge_miss_requests`)).
        edge_hit_ratio,omitempty:
          type: number
          format: float
          description: Origin Offload measures the ratio of bytes served to end users that were cached by Fastly, over the bytes served to end users, between 0 and 1. ((`edge_resp_body_bytes` + `edge_resp_header_bytes`)
            - (`origin_fetch_resp_body_bytes` + `origin_fetch_resp_header_bytes`)) / (`edge_resp_body_bytes` + `edge_resp_header_bytes`). Previously, Origin Offload used a different formula. [Learn more](https://www.fastly.com/documentation/reference/changes/2024/06/add-origin_offload-metric).
        origin_offload,omitempty:
          type: number
          format: float
          description: Number of responses received from origin with status code 200 (Success).
        origin_status_200,omitempty:
          type: integer
          format: int64
          description: Number of responses received from origin with status code 204 (No Content).
        origin_status_204,omitempty:
          type: integer
          format: int64
          description: Number of responses received from origin with status code 206 (Partial Content).
        origin_status_206,omitempty:
          type: integer
          format: int64
          description: Number of responses received from origin with status code 301 (Moved Permanently).
        origin_status_301,omitempty:
          type: integer
          format: int64
          description: Number of responses received from origin with status code 302 (Found).
        origin_status_302,omitempty:
          type: integer
          format: int64
          description: Number of responses received from origin with status code 304 (Not Modified).
        origin_status_304,omitempty:
          type: integer
          format: int64
          description: Number of responses received from origin with status code 400 (Bad Request).
        origin_status_400,omitempty:
          type: integer
          format: int64
          description: Number of responses received from origin with status code 401 (Unauthorized).
        origin_status_401,omitempty:
          type: integer
          format: int64
          description: Number of responses received from origin with status code 403 (Forbidden).
        origin_status_403,omitempty:
          type: integer
          format: int64
          description: Number of responses received from origin with status code 404 (Not Found).
        origin_status_404,omitempty:
          type: integer
          format: int64
          description: Number of responses received from origin with status code 416 (Range Not Satisfiable).
        origin_status_416,omitempty:
          type: integer
          format: int64
          description: Number of responses received from origin with status code 429 (Too Many Requests).
        origin_status_429,omitempty:
          type: integer
          format: int64
          description: Number of responses received from origin with status code 500 (Internal Server Error).
        origin_status_500,omitempty:
          type: integer
          format: int64
          description: Number of responses received from origin with status code 501 (Not Implemented).
        origin_status_501,omitempty:
          type: integer
          format: int64
          description: Number of responses received from origin with status code 502 (Bad Gateway).
        origin_status_502,omitempty:
          type: integer
          format: int64
          description: Number of responses received from origin with status code 503 (Service Unavailable).
        origin_status_503,omitempty:
          type: integer
          format: int64
          description: Number of responses received from origin with status code 504 (Gateway Timeout).
        origin_status_504,omitempty:
          type: integer
          format: int64
          description: Number of responses received from origin with status code 505 (HTTP Version Not Supported).
        origin_status_505,omitempty:
          type: integer
          format: int64
          description: Number of responses received from origin with status code 530.
        origin_status_530,omitempty:
          type: integer
          format: int64
          description: Number of \"Informational\" category status codes received from origin.
        origin_status_1xx,omitempty:
          type: integer
          format: int64
          description: Number of \"Success\" status codes received from origin.
        origin_status_2xx,omitempty:
          type: integer
          format: int64
          description: Number of \"Redirection\" codes received from origin.
        origin_status_3xx,omitempty:
          type: integer
          format: int64
          description: Number of \"Client Error\" codes received from origin.
        origin_status_4xx,omitempty:
          type: integer
          format: int64
          description: Number of \"Server Error\" codes received from origin.
        origin_status_5xx,omitempty:
          type: integer
          format: int64
    ObjectStorageResponseLinks:
      type: object
      properties:
        _links,omitempty:
          $ref: '#/components/schemas/ObjectStorageResponseLinksLinks'
    ServiceIDAndVersionString:
      type: object
      properties:
        service_id,omitempty:
          type: string
        version,omitempty:
          type: string
    NgwafResponseLinksGetAllServicesLinks:
      type: object
      properties:
        self,omitempty:
          type: string
    LoggingGcsCommon:
      type: object
      properties:
        user,omitempty:
          type: string
          description: Your Google Cloud Platform account secret key. The `private_key` field in your service account authentication JSON. Not required if `account_name` is specified.
        secret_key,omitempty:
          type: string
          description: The name of the Google Cloud Platform service account associated with the target log collection service. Not required if `user` and `secret_key` are provided.
        account_name,omitempty:
          type: string
    ServiceDetailAllOf:
      type: object
      properties:
        active_version,omitempty:
          $ref: '#/components/schemas/NullableServiceVersionDetailOrNull'
        version,omitempty:
          $ref: '#/components/schemas/ServiceVersionDetail'
    ServiceResponseAllOf:
      type: object
      properties:
        id,omitempty:
          type: string
          description: Unused at this time.
        publish_key,omitempty:
          type: string
          description: Whether the service is paused. Services are paused due to a lack of traffic for an extended period of time. Services are resumed either when a draft version is activated or a locked
            version is cloned and reactivated.
        paused,omitempty:
          type: boolean
          description: A list of [versions](https://www.fastly.com/documentation/reference/api/services/version/) associated with the service.
    TLSCertificateBlobResponse:
      type: object
      properties:
        cert_blob,omitempty:
          type: string
    MutualAuthenticationResponseData:
      type: object
      properties:
        type,omitempty:
          $ref: '#/components/schemas/TypeMutualAuthentication'
        attributes,omitempty:
          $ref: '#/components/schemas/MutualAuthenticationResponseAttributes'
        relationships,omitempty:
          $ref: '#/components/schemas/RelationshipsForMutualAuthentication'
        id,omitempty:
          type: string
    DimensionContentType:
      type: object
      properties:
        content_type,omitempty:
          type: string
    LogExplorerInsightsResponseProduct:
      type: object
      properties:
        product,omitempty:
          $ref: '#/components/schemas/LogExplorerInsightsResponseProductProduct'
    PoolResponsePost:
      type: object
      properties:
        tls_ca_cert,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: The client certificate used to make authenticated requests. Must be in PEM format.
        tls_client_cert,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: The client private key used to make authenticated requests. Must be in PEM format.
        tls_client_key,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: The hostname used to verify a server's certificate. It can either be the Common Name (CN) or a Subject Alternative Name (SAN).
        tls_cert_hostname,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: Whether to use TLS.
        use_tls,omitempty:
          type: string
          description: Date and time in ISO 8601 format.
        created_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        deleted_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        updated_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
        service_id,omitempty:
          type: string
        version,omitempty:
          type: string
          description: Name for the Pool.
        name,omitempty:
          type: string
          description: Selected POP to serve as a shield for the servers. Defaults to `null` meaning no origin shielding if not set. Refer to the [POPs API endpoint](https://www.fastly.com/documentation/reference/api/utils/pops/)
            to get a list of available POPs used for shielding.
        shield,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: Condition which, if met, will select this configuration during a request. Optional.
        request_condition,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: List of OpenSSL ciphers (see the [openssl.org manpages](https://www.openssl.org/docs/man1.1.1/man1/ciphers.html) for details). Optional.
        tls_ciphers,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: SNI hostname. Optional.
        tls_sni_hostname,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: Minimum allowed TLS version on connections to this server. Optional.
        min_tls_version,omitempty:
          $ref: '#/components/schemas/NullableInt32'
          description: Maximum allowed TLS version on connections to this server. Optional.
        max_tls_version,omitempty:
          $ref: '#/components/schemas/NullableInt32'
          description: Name of the healthcheck to use with this pool. Can be empty and could be reused across multiple backend and pools.
        healthcheck,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: A freeform descriptive note.
        comment,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: What type of load balance group to use.
        type,omitempty:
          type: string
          description: The hostname to [override the Host header](https://docs.fastly.com/en/guides/specifying-an-override-host). Defaults to `null` meaning no override of the Host header will occur. This
            setting can also be added to a Server definition. If the field is set on a Server definition it will override the Pool setting.
        override_host,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: Maximum duration in milliseconds that Fastly will wait while receiving no data on a download from a backend. If exceeded, the response received so far will be considered complete
            and the fetch will end. May be set at runtime using `bereq.between_bytes_timeout`.
        between_bytes_timeout,omitempty:
          type: string
          description: How long to wait for a timeout in milliseconds.
        connect_timeout,omitempty:
          type: string
          description: How long to wait for the first byte in milliseconds.
        first_byte_timeout,omitempty:
          type: string
          description: Maximum number of connections.
        max_conn_default,omitempty:
          type: string
          description: Be strict on checking TLS certs.
        tls_check_cert,omitempty:
          $ref: '#/components/schemas/NullableString'
        id,omitempty:
          type: string
          description: Percentage of capacity (`0-100`) that needs to be operationally available for a pool to be considered up.
        quorum,omitempty:
          type: integer
          format: int32
    ImageOptimizerResponseLinks:
      type: object
      properties:
        _links,omitempty:
          $ref: '#/components/schemas/ImageOptimizerResponseLinksLinks'
    RelationshipMemberTLSDomain:
      type: object
      properties:
        type,omitempty:
          $ref: '#/components/schemas/TypeTLSDomain'
          description: The domain name.
        id,omitempty:
          type: string
    TLSSubscriptionResponseAttributes:
      type: object
      properties:
        created_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        deleted_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        updated_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: The current state of your subscription.
        state,omitempty:
          type: string
          description: Subscription has an active order
        has_active_order,omitempty:
          type: boolean
    BotManagementResponseBodyGetAllServices:
      type: object
      properties:
        product,omitempty:
          $ref: '#/components/schemas/BotManagementResponseProductProduct'
        customer,omitempty:
          $ref: '#/components/schemas/BotManagementResponseCustomerCustomer'
          description: A list of services with Bot Management enabled.
        _links,omitempty:
          $ref: '#/components/schemas/BotManagementResponseLinksGetAllServicesLinks'
    HistoricalUsageMonthResponseData:
      type: object
      properties:
        customer_id,omitempty:
          type: string
          description: Organized by *service id*.
    SchemasVersionResponse:
      type: object
      properties:
        active,omitempty:
          type: boolean
          description: A freeform descriptive note.
        comment,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: Unused at this time.
        deployed,omitempty:
          type: boolean
          description: Whether this version is locked or not. Objects can not be added or edited on locked versions.
        locked,omitempty:
          type: boolean
          description: The number of this version.
        number,omitempty:
          type: integer
          format: int32
          description: Unused at this time.
        staging,omitempty:
          type: boolean
          description: Unused at this time.
        testing,omitempty:
          type: boolean
          description: Date and time in ISO 8601 format.
        created_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        deleted_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        updated_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
        service_id,omitempty:
          type: string
          description: A list of environments where the service has been deployed.
    Historical:
      type: object
      properties:
        status,omitempty:
          type: string
        meta,omitempty:
          $ref: '#/components/schemas/HistoricalMeta'
          description: If the query was not successful, this will provide a string that explains why.
        msg,omitempty:
          $ref: '#/components/schemas/NullableString'
    LoggingFtpAdditional:
      type: object
      properties:
        address,omitempty:
          type: string
          description: Hostname used.
        hostname,omitempty:
          type: string
          description: IPv4 address of the host.
        ipv4,omitempty:
          type: string
          description: The password for the server. For anonymous use an email address.
        password,omitempty:
          type: string
          description: The path to upload log files to. If the path ends in `/` then it is treated as a directory.
        path,omitempty:
          type: string
          description: A PGP public key that Fastly will use to encrypt your log files before writing them to disk.
        public_key,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: The username for the server. Can be anonymous.
        user,omitempty:
          type: string
    LoggingSyslogResponse:
      type: object
      properties:
        name,omitempty:
          type: string
          description: Where in the generated VCL the logging call should be placed. If not set, endpoints with `format_version` of 2 are placed in `vcl_log` and those with `format_version` of 1 are placed
            in `vcl_deliver`.
        placement,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: The name of an existing condition in the configured endpoint, or leave blank to always execute.
        response_condition,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: A Fastly [log format string](https://docs.fastly.com/en/guides/custom-log-formats).
        format,omitempty:
          type: string
          description: The version of the custom logging format used for the configured endpoint. The logging call gets placed by default in `vcl_log` if `format_version` is set to `2` and in `vcl_deliver`
            if `format_version` is set to `1`.
        format_version,omitempty:
          type: string
          description: A secure certificate to authenticate a server with. Must be in PEM format.
        tls_ca_cert,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: The client certificate used to make authenticated requests. Must be in PEM format.
        tls_client_cert,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: The client private key used to make authenticated requests. Must be in PEM format.
        tls_client_key,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: The hostname to verify the server's certificate. This should be one of the Subject Alternative Name (SAN) fields for the certificate. Common Names (CN) are not supported.
        tls_hostname,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: A hostname or IPv4 address.
        address,omitempty:
          type: string
          description: The port number.
        port,omitempty:
          type: integer
          format: int32
        message_type,omitempty:
          $ref: '#/components/schemas/LoggingMessageType'
          description: The hostname used for the syslog endpoint.
        hostname,omitempty:
          type: string
          description: The IPv4 address used for the syslog endpoint.
        ipv4,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: Whether to prepend each message with a specific token.
        token,omitempty:
          $ref: '#/components/schemas/NullableString'
        use_tls,omitempty:
          $ref: '#/components/schemas/LoggingUseTLSString'
          description: Date and time in ISO 8601 format.
        created_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        deleted_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        updated_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
        service_id,omitempty:
          type: string
        version,omitempty:
          type: string
    ServiceusagemetricsData:
      type: object
      properties:
        customer_id,omitempty:
          type: string
          description: Date and time (in ISO 8601 format) for initiation point of a billing cycle, signifying the start of charges for a service or subscription.
        start_time,omitempty:
          type: string
          format: date-time
          description: Date and time (in ISO 8601 format) for termination point of a billing cycle, signifying the end of charges for a service or subscription.
        end_time,omitempty:
          type: string
          format: date-time
          description: The usage type identifier for the usage. This is a single, billable metric for the product.
        usage_type,omitempty:
          type: string
          description: The unit for the usage as shown on an invoice. If there is no explicit unit, this field will be \"unit\" (e.g., a request with `product_id` of 'cdn_usage' and `usage_type` of 'North
            America Requests' has no unit, and will return \"unit\").
        unit,omitempty:
          type: string
        meta,omitempty:
          $ref: '#/components/schemas/Metadata'
    OriginInspectorRealtimeEntry:
      type: object
      properties:
        recorded,omitempty:
          type: integer
          format: int32
          description: Groups [measurements](#measurements-data-model) by backend name.
    LogExplorerInsightsResponseCustomer:
      type: object
      properties:
        customer,omitempty:
          $ref: '#/components/schemas/BotManagementResponseCustomerCustomer'
    DdosProtectionResponseLinksGetAllServicesLinks:
      type: object
      properties:
        self,omitempty:
          type: string
    WebsocketsResponseLinksLinks:
      type: object
      properties:
        self,omitempty:
          type: string
          description: Location of the service resource
        service,omitempty:
          type: string
    ApexRedirect:
      type: object
      properties:
        service_id,omitempty:
          type: string
        version,omitempty:
          type: integer
          format: int32
          description: Date and time in ISO 8601 format.
        created_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        deleted_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        updated_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: HTTP status code used to redirect the client.
        status_code,omitempty:
          type: integer
          format: int32
          description: Array of apex domains that should redirect to their WWW subdomain.
        feature_revision,omitempty:
          type: integer
          format: int32
    HistoricalDomainsData:
      type: object
      properties:
        dimensions,omitempty:
          $ref: '#/components/schemas/DomainInspectorEntryDimensions'
          description: 'An array of values representing the metric values at each point in time. Note that this dataset is sparse: only the keys with non-zero values will be included in the record.'
    TokenResponseAllOf:
      type: object
      properties:
        id,omitempty:
          type: string
        user_id,omitempty:
          type: string
          description: Time-stamp (UTC) of when the token was created.
        created_at,omitempty:
          type: string
          description: Time-stamp (UTC) of when the token was last used.
        last_used_at,omitempty:
          type: string
          description: Time-stamp (UTC) of when the token will expire (optional).
        expires_at,omitempty:
          type: string
          description: IP Address of the client that last used the token.
        ip,omitempty:
          type: string
          description: User-Agent header of the client that last used the token.
        user_agent,omitempty:
          type: string
    Listinvoices:
      type: object
      properties:
        meta,omitempty:
          $ref: '#/components/schemas/Metadata'
    BillingAddressRequest:
      type: object
      properties:
        skip_verification,omitempty:
          type: boolean
        data,omitempty:
          $ref: '#/components/schemas/BillingAddressRequestData'
    RequestSettingsResponseAllOf:
      type: object
      properties:
        bypass_busy_wait,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: Allows you to force a cache miss for the request. Replaces the item in the cache if the content is cacheable.
        force_miss,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: Forces the request use SSL (redirects a non-SSL to SSL).
        force_ssl,omitempty:
          type: string
          description: Injects Fastly-Geo-Country, Fastly-Geo-City, and Fastly-Geo-Region into the request headers.
        geo_headers,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: How old an object is allowed to be to serve stale-if-error or stale-while-revalidate.
        max_stale_age,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: Injects the X-Timer info into the request for viewing origin fetch durations.
        timer_support,omitempty:
          $ref: '#/components/schemas/NullableString'
    InvitationDataAttributes:
      type: object
      properties:
        email,omitempty:
          type: string
          description: Indicates the user has limited access to the customer's services.
        limit_services,omitempty:
          type: boolean
        role,omitempty:
          $ref: '#/components/schemas/RoleUser'
          description: Indicates whether or not the invitation is active.
        status_code,omitempty:
          type: integer
          format: int32
    WebsocketsResponseLinksGetAllServicesLinks:
      type: object
      properties:
        self,omitempty:
          type: string
    LoggingAddressAndPort:
      type: object
      properties:
        address,omitempty:
          type: string
          description: The port number.
        port,omitempty:
          type: integer
          format: int32
    TLSBulkCertificateResponseAttributes:
      type: object
      properties:
        created_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        deleted_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        updated_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Time-stamp (GMT) when the certificate will expire. Must be in the future to be used to terminate TLS traffic.
        not_after,omitempty:
          type: string
          format: date-time
          description: Time-stamp (GMT) when the certificate will become valid. Must be in the past to be used to terminate TLS traffic.
        not_before,omitempty:
          type: string
          format: date-time
          description: A recommendation from Fastly indicating the key associated with this certificate is in need of rotation.
        replace,omitempty:
          type: boolean
    NgwafRequestEnable:
      type: object
      properties:
        workspace_id:
          type: string
      required:
      - workspace_id
    EventsResponse:
      type: object
      properties:
        links,omitempty:
          $ref: '#/components/schemas/PaginationLinks'
        meta,omitempty:
          $ref: '#/components/schemas/PaginationMeta'
    ServiceInvitationResponse:
      type: object
      properties:
        data,omitempty:
          $ref: '#/components/schemas/ServiceInvitationResponseAllOfData'
    HealthcheckResponse:
      type: object
      properties:
        check_interval,omitempty:
          type: integer
          format: int32
          description: A freeform descriptive note.
        comment,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: The status code expected from the host.
        expected_response,omitempty:
          type: integer
          format: int32
          description: Array of custom headers that will be added to the health check probes.
        host,omitempty:
          type: string
          description: Whether to use version 1.0 or 1.1 HTTP.
        http_version,omitempty:
          type: string
          description: When loading a config, the initial number of probes to be seen as OK.
        initial,omitempty:
          type: integer
          format: int32
          description: Which HTTP method to use.
        method,omitempty:
          type: string
          description: The name of the health check.
        name,omitempty:
          type: string
          description: The path to check.
        path,omitempty:
          type: string
          description: How many health checks must succeed to be considered healthy.
        threshold,omitempty:
          type: integer
          format: int32
          description: Timeout in milliseconds.
        timeout,omitempty:
          type: integer
          format: int32
          description: The number of most recent health check queries to keep for this health check.
        window,omitempty:
          type: integer
          format: int32
        service_id,omitempty:
          type: string
        version,omitempty:
          type: integer
          format: int32
          description: Date and time in ISO 8601 format.
        created_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        deleted_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        updated_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
    KvStoreRequestCreate:
      type: object
      properties:
        name:
          type: string
      required:
      - name
    NgwafResponseCustomer:
      type: object
      properties:
        customer,omitempty:
          $ref: '#/components/schemas/BotManagementResponseCustomerCustomer'
    Header:
      type: object
      properties:
        action,omitempty:
          type: string
          description: Name of the cache condition controlling when this configuration applies.
        cache_condition,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: Header to set.
        dst,omitempty:
          type: string
          description: A handle to refer to this Header object.
        name,omitempty:
          type: string
          description: Regular expression to use. Only applies to `regex` and `regex_repeat` actions.
        regex,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: Condition which, if met, will select this configuration during a request. Optional.
        request_condition,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: Optional name of a response condition to apply.
        response_condition,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: Variable to be used as a source for the header content. Does not apply to `delete` action.
        src,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: Value to substitute in place of regular expression. Only applies to `regex` and `regex_repeat` actions.
        substitution,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: Accepts a string value.
        type,omitempty:
          type: string
          description: Don't add the header if it is added already. Only applies to 'set' action. Numerical value (\"0\" = false, \"1\" = true)
        ignore_if_set,omitempty:
          type: string
          description: Priority determines execution order. Lower numbers execute first.
        priority,omitempty:
          type: string
    ImageOptimizerResponseLinksGetAllServices:
      type: object
      properties:
        _links,omitempty:
          $ref: '#/components/schemas/ImageOptimizerResponseLinksGetAllServicesLinks'
    IamServiceGroupAllOf:
      type: object
      properties:
        id,omitempty:
          type: string
          description: The type of the object.
        object,omitempty:
          type: string
          description: Name of the service group.
        name,omitempty:
          type: string
          description: Description of the service group.
        description,omitempty:
          type: string
          description: Number of services in the service group.
        services_count,omitempty:
          type: integer
          format: int32
    Domain:
      type: object
      properties:
        comment,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: The name of the domain or domains associated with this service.
        name,omitempty:
          type: string
    BrotliCompressionResponseBodyEnable:
      type: object
      properties:
        product,omitempty:
          $ref: '#/components/schemas/BrotliCompressionResponseProductProduct'
        service,omitempty:
          $ref: '#/components/schemas/BotManagementResponseServiceService'
        _links,omitempty:
          $ref: '#/components/schemas/BrotliCompressionResponseLinksLinks'
    TLSSubscriptionResponse:
      type: object
      properties:
        data,omitempty:
          $ref: '#/components/schemas/TLSSubscriptionResponseData'
    TLSCsrData:
      type: object
      properties:
        type,omitempty:
          $ref: '#/components/schemas/TypeTLSCsr'
        attributes,omitempty:
          $ref: '#/components/schemas/TLSCsrDataAttributes'
        relationships,omitempty:
          $ref: '#/components/schemas/RelationshipTLSPrivateKey'
    PlatformDdosResponse:
      type: object
      properties:
        status,omitempty:
          type: string
        meta,omitempty:
          $ref: '#/components/schemas/HistoricalDdosMeta'
          description: If the query was not successful, this will provide a string that explains why.
        msg,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: A list of timeseries.
    TLSBulkCertificateDataAttributes:
      type: object
      properties:
        allow_untrusted_root,omitempty:
          type: boolean
          description: The PEM-formatted certificate blob. Required.
        cert_blob,omitempty:
          type: string
          description: The PEM-formatted chain of intermediate blobs. Required.
        intermediates_blob,omitempty:
          type: string
    BulkUpdateDictionaryItem:
      type: object
      properties:
        item_key,omitempty:
          type: string
          description: Item value, maximum 8000 characters.
        item_value,omitempty:
          type: string
        op,omitempty:
          type: string
    ImageOptimizerResponseProduct:
      type: object
      properties:
        product,omitempty:
          $ref: '#/components/schemas/ImageOptimizerResponseProductProduct'
    BrotliCompressionResponseProductProduct:
      type: object
      properties:
        id,omitempty:
          type: string
          description: Name of the object
        object,omitempty:
          type: string
    DimensionResponse:
      type: object
      properties:
        response,omitempty:
          type: string
    EomInvoiceResponse:
      type: object
      properties:
        customer_id,omitempty:
          type: string
          description: Numeric string identifying the invoice.
        invoice_id,omitempty:
          type: string
          description: Date and time invoice was posted on, in ISO 8601 format.
        invoice_posted_on,omitempty:
          type: string
          format: date-time
          description: Date and time (in ISO 8601 format) for initiation point of a billing cycle, signifying the start of charges for a service or subscription.
        billing_start_date,omitempty:
          type: string
          format: date-time
          description: Date and time (in ISO 8601 format) for termination point of a billing cycle, signifying the end of charges for a service or subscription.
        billing_end_date,omitempty:
          type: string
          format: date-time
          description: Alphanumeric string identifying the statement number.
        statement_number,omitempty:
          type: string
          description: Three-letter code representing a specific currency used for financial transactions.
        currency_code,omitempty:
          type: string
          description: Total billable amount for invoiced services charged within a single month.
        monthly_transaction_amount,omitempty:
          type: number
          format: float
    ImageOptimizerResponseLinksGetAllServicesLinks:
      type: object
      properties:
        self,omitempty:
          type: string
    TLSCertificateResponseAttributes:
      type: object
      properties:
        created_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        deleted_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        updated_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: The hostname for which a certificate was issued.
        issued_to,omitempty:
          type: string
          description: The certificate authority that issued the certificate.
        issuer,omitempty:
          type: string
          description: A value assigned by the issuer that is unique to a certificate.
        serial_number,omitempty:
          type: string
          description: The algorithm used to sign the certificate.
        signature_algorithm,omitempty:
          type: string
          description: Time-stamp (GMT) when the certificate will expire. Must be in the future to be used to terminate TLS traffic.
        not_after,omitempty:
          type: string
          format: date-time
          description: Time-stamp (GMT) when the certificate will become valid. Must be in the past to be used to terminate TLS traffic.
        not_before,omitempty:
          type: string
          format: date-time
          description: A recommendation from Fastly indicating the key associated with this certificate is in need of rotation.
        replace,omitempty:
          type: boolean
    TLSSubscriptionDataAttributes:
      type: object
      properties:
        certificate_authority,omitempty:
          type: string
    KvStoreDetails:
      type: object
      properties:
        id,omitempty:
          type: string
          description: Name of the store.
        name,omitempty:
          type: string
    GetServiceLevelUsageResponse:
      type: object
      properties:
        data,omitempty:
          $ref: '#/components/schemas/ServiceusagemetricsData'
    LoggingFormatVersionInteger:
      type: object
      properties:
        format_version,omitempty:
          type: integer
          format: int32
    ACLResponse:
      type: object
      properties:
        name,omitempty:
          type: string
          description: Date and time in ISO 8601 format.
        created_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        deleted_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        updated_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
        service_id,omitempty:
          type: string
          description: String representing the number identifying a version of the service.
        version,omitempty:
          type: string
        id,omitempty:
          type: string
    AutomationTokenCreateRequestAttributes:
      type: object
      properties:
        name,omitempty:
          type: string
        role,omitempty:
          type: string
          description: List of service ids to limit the token
        scope,omitempty:
          type: string
          description: A UTC timestamp of when the token will expire.
        expires_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Indicates whether TLS access is enabled for the token.
        tls_access,omitempty:
          type: boolean
    TLSCertificateDataAttributes:
      type: object
      properties:
        cert_blob,omitempty:
          type: string
          description: A customizable name for your certificate. Defaults to the certificate's Common Name or first Subject Alternative Names (SAN) entry. Optional.
        name,omitempty:
          type: string
    ServiceResponse:
      type: object
      properties:
        created_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        deleted_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        updated_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: A freeform descriptive note.
        comment,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: The name of the service.
        name,omitempty:
          type: string
          description: Alphanumeric string identifying the customer.
        customer_id,omitempty:
          type: string
          description: The type of this service.
        type,omitempty:
          type: string
        id,omitempty:
          type: string
          description: Unused at this time.
        publish_key,omitempty:
          type: string
          description: Whether the service is paused. Services are paused due to a lack of traffic for an extended period of time. Services are resumed either when a draft version is activated or a locked
            version is cloned and reactivated.
        paused,omitempty:
          type: boolean
          description: A list of [versions](https://www.fastly.com/documentation/reference/api/services/version/) associated with the service.
    IamPermission:
      type: object
      properties:
        id,omitempty:
          type: string
          description: The type of the object.
        object,omitempty:
          type: string
          description: Name of the permission.
        name,omitempty:
          type: string
          description: The description of the permission.
        description,omitempty:
          type: string
          description: The name of the resource the operation will be performed on.
        resource_name,omitempty:
          type: string
          description: The description of the resource.
        resource_description,omitempty:
          type: string
          description: Permissions are either \"service\" level or \"account\" level.
        scope,omitempty:
          type: string
    Environment:
      type: object
      properties:
        name,omitempty:
          type: string
          description: Alphanumeric string identifying the service.
        service_id,omitempty:
          type: string
        active_version,omitempty:
          type: integer
          format: int32
    AiAcceleratorResponseBodyEnable:
      type: object
      properties:
        product,omitempty:
          $ref: '#/components/schemas/AiAcceleratorResponseProductProduct'
        customer,omitempty:
          $ref: '#/components/schemas/AiAcceleratorResponseCustomerCustomer'
        _links,omitempty:
          $ref: '#/components/schemas/AiAcceleratorResponseLinksLinks'
    RelationshipTLSCertificate:
      type: object
      properties:
        tls_certificate,omitempty:
          $ref: '#/components/schemas/RelationshipTLSCertificateTLSCertificate'
    RelationshipsForStar:
      type: object
      properties:
        user,omitempty:
          $ref: '#/components/schemas/RelationshipUserUser'
        service,omitempty:
          $ref: '#/components/schemas/RelationshipMemberService'
    RealtimeEntry:
      type: object
      properties:
        recorded,omitempty:
          $ref: '#/components/schemas/RealtimeEntryRecorded'
        aggregated,omitempty:
          $ref: '#/components/schemas/RealtimeEntryAggregated'
          description: Groups [measurements](#measurements-data-model) by POP. See the [POPs API](https://www.fastly.com/documentation/reference/api/utils/pops/) for details of POP identifiers.
    HistoricalDomainsMeta:
      type: object
      properties:
        start,omitempty:
          type: string
          description: End time that was used to perform the query as an ISO-8601-formatted date and time.
        end,omitempty:
          type: string
          description: Downsample that was used to perform the query. One of `minute`, `hour`, or `day`.
        downsample,omitempty:
          type: string
          description: A comma-separated list of the metrics that were requested.
        metrics,omitempty:
          type: string
          description: The maximum number of results shown per page.
        limit,omitempty:
          type: number
          format: float
          description: A string that can be used to request the next page of results, if any.
        next_cursor,omitempty:
          type: string
          description: A comma-separated list of keys the results are sorted by.
        sort,omitempty:
          type: string
          description: A comma-separated list of dimensions being summed over in the query.
        group_by,omitempty:
          type: string
        filters,omitempty:
          $ref: '#/components/schemas/HistoricalDomainsMetaFilters'
    TLSSubscriptionResponseAttributesAllOf:
      type: object
      properties:
        state,omitempty:
          type: string
          description: Subscription has an active order
        has_active_order,omitempty:
          type: boolean
    LoggingAzureblobResponse:
      type: object
      properties:
        name,omitempty:
          type: string
          description: Where in the generated VCL the logging call should be placed. If not set, endpoints with `format_version` of 2 are placed in `vcl_log` and those with `format_version` of 1 are placed
            in `vcl_deliver`.
        placement,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: The name of an existing condition in the configured endpoint, or leave blank to always execute.
        response_condition,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: A Fastly [log format string](https://docs.fastly.com/en/guides/custom-log-formats).
        format,omitempty:
          type: string
          description: The version of the custom logging format used for the configured endpoint. The logging call gets placed by default in `vcl_log` if `format_version` is set to `2` and in `vcl_deliver`
            if `format_version` is set to `1`.
        format_version,omitempty:
          type: string
          description: How the message should be formatted.
        message_type,omitempty:
          type: string
          description: A timestamp format
        timestamp_format,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: The codec used for compressing your logs. Valid values are `zstd`, `snappy`, and `gzip`. Specifying both `compression_codec` and `gzip_level` in the same API request will result in
            an error.
        compression_codec,omitempty:
          type: string
          description: How frequently log files are finalized so they can be available for reading (in seconds).
        period,omitempty:
          type: string
          description: The level of gzip encoding when sending logs (default `0`, no compression). Specifying both `compression_codec` and `gzip_level` in the same API request will result in an error.
        gzip_level,omitempty:
          type: string
          description: Date and time in ISO 8601 format.
        created_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        deleted_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        updated_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
        service_id,omitempty:
          type: string
        version,omitempty:
          type: string
          description: The path to upload logs to.
        path,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: The unique Azure Blob Storage namespace in which your data objects are stored. Required.
        account_name,omitempty:
          type: string
          description: The name of the Azure Blob Storage container in which to store logs. Required.
        container,omitempty:
          type: string
          description: The Azure shared access signature providing write access to the blob service objects. Be sure to update your token before it expires or the logging functionality will not work. Required.
        sas_token,omitempty:
          type: string
          description: A PGP public key that Fastly will use to encrypt your log files before writing them to disk.
        public_key,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: The maximum number of bytes for each uploaded file. A value of 0 can be used to indicate there is no limit on the size of uploaded files, otherwise the minimum value is 1048576 bytes
            (1 MiB). Note that Microsoft Azure Storage has [block size limits](https://learn.microsoft.com/en-us/rest/api/storageservices/put-block?tabs=microsoft-entra-id#remarks).
        file_max_bytes,omitempty:
          type: integer
          format: int32
    ValidatorResult:
      type: object
      properties:
        data,omitempty:
          $ref: '#/components/schemas/ValidatorResultData'
    ServiceCreateAllOf:
      type: object
      properties:
        type,omitempty:
          type: string
    OriginInspectorHistoricalData:
      type: object
      properties:
        dimensions,omitempty:
          $ref: '#/components/schemas/OriginInspectorDimensions'
          description: 'An array of values representing the metric values at each point in time. Note that this dataset is sparse: only the keys with non-zero values will be included in the record.'
    TLSPrivateKeyDataAttributes:
      type: object
      properties:
        name,omitempty:
          type: string
          description: The contents of the private key. Must be a PEM-formatted key. Not returned in response body. Required.
        key,omitempty:
          type: string
    ServerResponse:
      type: object
      properties:
        weight,omitempty:
          type: integer
          format: int32
          description: Maximum number of connections. If the value is `0`, it inherits the value from pool's `max_conn_default`.
        max_conn,omitempty:
          type: integer
          format: int32
          description: Port number. Setting port `443` does not force TLS. Set `use_tls` in pool to force TLS.
        port,omitempty:
          type: integer
          format: int32
          description: A hostname, IPv4, or IPv6 address for the server. Required.
        address,omitempty:
          type: string
          description: A freeform descriptive note.
        comment,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: Allows servers to be enabled and disabled in a pool.
        disabled,omitempty:
          type: boolean
          description: The hostname to override the Host header. Defaults to `null` meaning no override of the Host header if not set. This setting can also be added to a Pool definition. However, the server
            setting will override the Pool setting.
        override_host,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: Date and time in ISO 8601 format.
        created_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        deleted_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        updated_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
        service_id,omitempty:
          type: string
        id,omitempty:
          type: string
        pool_id,omitempty:
          type: string
    RelationshipTLSSubscription:
      type: object
      properties:
        tls_subscription,omitempty:
          $ref: '#/components/schemas/RelationshipTLSSubscriptionTLSSubscription'
    TLSBulkCertificatesResponse:
      type: object
      properties:
        links,omitempty:
          $ref: '#/components/schemas/PaginationLinks'
        meta,omitempty:
          $ref: '#/components/schemas/PaginationMeta'
    ConfigStoreItemResponse:
      type: object
      properties:
        item_key,omitempty:
          type: string
          description: Item value, maximum 8000 characters.
        item_value,omitempty:
          type: string
          description: Date and time in ISO 8601 format.
        created_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        deleted_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        updated_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
        store_id,omitempty:
          type: string
    LoggingSplunkAdditional:
      type: object
      properties:
        url,omitempty:
          type: string
          description: A Splunk token for use in posting logs over HTTP to your collector.
        token,omitempty:
          type: string
        use_tls,omitempty:
          $ref: '#/components/schemas/LoggingUseTLSString'
    ListDashboardsResponse:
      type: object
      properties:
        meta,omitempty:
          type: object
    EventAttributes:
      type: object
      properties:
        admin,omitempty:
          type: boolean
          description: Date and time in ISO 8601 format.
        created_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
        customer_id,omitempty:
          type: string
          description: Description of the event.
        description,omitempty:
          type: string
          description: Type of event. Can be used with `filter[event_type]`
        event_type,omitempty:
          type: string
          description: IP addresses that the event was requested from.
        ip,omitempty:
          type: string
          description: Hash of key value pairs of additional information.
        service_id,omitempty:
          type: string
        user_id,omitempty:
          type: string
        token_id,omitempty:
          type: string
    TLSCommonResponseAllOf1:
      type: object
      properties:
        use_tls,omitempty:
          type: string
    RelationshipMemberMutualAuthentication:
      type: object
      properties:
        type,omitempty:
          $ref: '#/components/schemas/TypeMutualAuthentication'
        id,omitempty:
          type: string
    ServiceInvitationResponseAllOfData:
      type: object
      properties:
        id,omitempty:
          type: string
        attributes,omitempty:
          $ref: '#/components/schemas/Timestamps'
    AutomationTokenResponseAllOf:
      type: object
      properties:
        id,omitempty:
          $ref: '#/components/schemas/ReadOnlyID'
        customer_id,omitempty:
          $ref: '#/components/schemas/ReadOnlyCustomerID'
        role,omitempty:
          type: string
          description: The IP address of the client that last used the token.
        ip,omitempty:
          type: string
          description: The User-Agent header of the client that last used the token.
        user_agent,omitempty:
          type: string
          description: Indicates whether TLS access is enabled for the token.
        tls_access,omitempty:
          type: boolean
          description: A UTC timestamp of when the token was last used.
        last_used_at,omitempty:
          type: string
          format: date-time
          description: A UTC timestamp of when the token was created.
        created_at,omitempty:
          type: string
          description: (optional) A UTC timestamp of when the token will expire.
        expires_at,omitempty:
          type: string
    PopCoordinates:
      type: object
      properties:
        latitude:
          type: number
          format: float
        longitude:
          type: number
          format: float
      required:
      - latitude
      - longitude
    HistoricalDomains:
      type: object
      properties:
        status,omitempty:
          type: string
        meta,omitempty:
          $ref: '#/components/schemas/HistoricalDomainsMeta'
          description: If the query was not successful, this will provide a string that explains why.
        msg,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: A list of [entries](#entry-data-model), each representing one unique combination of dimensions, such as domain, region, or POP.
    SecretStoreResponse:
      type: object
      properties:
        id,omitempty:
          type: string
          description: A human-readable name for the store.
        name,omitempty:
          type: string
          description: Date and time in ISO 8601 format.
        created_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
    BotManagementResponseService:
      type: object
      properties:
        service,omitempty:
          $ref: '#/components/schemas/BotManagementResponseServiceService'
    PurgeResponse:
      type: object
      properties:
        status,omitempty:
          type: string
        id,omitempty:
          type: string
    SnippetResponse:
      type: object
      properties:
        name,omitempty:
          type: string
          description: The location in generated VCL where the snippet should be placed.
        type,omitempty:
          type: string
          description: The VCL code that specifies exactly what the snippet does.
        content,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: Priority determines execution order. Lower numbers execute first.
        priority,omitempty:
          type: string
          description: Sets the snippet version.
        dynamic,omitempty:
          type: string
          description: Date and time in ISO 8601 format.
        created_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        deleted_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        updated_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
        service_id,omitempty:
          type: string
          description: String representing the number identifying a version of the service.
        version,omitempty:
          type: string
        id,omitempty:
          type: string
    OriginInspectorResponseService:
      type: object
      properties:
        service,omitempty:
          $ref: '#/components/schemas/BotManagementResponseServiceService'
    LoggingLogentriesAdditional:
      type: object
      properties:
        port,omitempty:
          type: integer
          format: int32
          description: Use token based authentication.
        token,omitempty:
          type: string
        use_tls,omitempty:
          $ref: '#/components/schemas/LoggingUseTLSString'
          description: The region to which to stream logs.
        region,omitempty:
          type: string
    RelationshipTLSPrivateKeys:
      type: object
      properties:
        tls_private_keys,omitempty:
          $ref: '#/components/schemas/RelationshipTLSPrivateKeysTLSPrivateKeys'
    LoggingFormatVersionString:
      type: object
      properties:
        format_version,omitempty:
          type: string
    IamUserGroup:
      type: object
      properties:
        created_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        updated_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Alphanumeric string identifying the user group.
        id,omitempty:
          type: string
          description: Name of the user group.
        name,omitempty:
          type: string
          description: Description of the user group.
        description,omitempty:
          type: string
          description: Number of invitations added to the user group.
        invitations_count,omitempty:
          type: integer
          format: int32
          description: Number of users added to the user group.
        users_count,omitempty:
          type: integer
          format: int32
          description: Number of roles added to the user group.
        roles_count,omitempty:
          type: integer
          format: int32
    DimensionStatusCode:
      type: object
      properties:
        status-code,omitempty:
          type: string
    TLSActivationResponseDataAllOf:
      type: object
      properties:
        id,omitempty:
          type: string
        attributes,omitempty:
          $ref: '#/components/schemas/Timestamps'
    Dashboard:
      type: object
      properties:
        id,omitempty:
          type: string
          description: A human-readable name
        name,omitempty:
          type: string
          description: A short description of the dashboard
        description,omitempty:
          type: string
          description: A list of [dashboard items](#dashboard-item).
        created_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        updated_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
        created_by,omitempty:
          $ref: '#/components/schemas/DashboardPropertyCreatedBy'
        updated_by,omitempty:
          $ref: '#/components/schemas/DashboardPropertyUpdatedBy'
    LogExplorerInsightsResponseLinksLinks:
      type: object
      properties:
        self,omitempty:
          type: string
          description: Location of the service resource
        service,omitempty:
          type: string
    PoolResponseAllOf:
      type: object
      properties:
        quorum,omitempty:
          type: string
    LoggingGrafanacloudlogsAdditional:
      type: object
      properties:
        format,omitempty:
          type: string
          description: The Grafana Cloud Logs Dataset you want to log to.
        user,omitempty:
          type: string
          description: The URL of the Loki instance in your Grafana stack.
        url,omitempty:
          type: string
          description: The Grafana Access Policy token with `logs:write` access scoped to your Loki instance.
        token,omitempty:
          type: string
          description: The Stream Labels, a JSON string used to identify the stream.
        index,omitempty:
          type: string
    NgwafResponseService:
      type: object
      properties:
        service,omitempty:
          $ref: '#/components/schemas/BotManagementResponseServiceService'
    PublishItemFormats:
      type: object
      properties:
        http-response,omitempty:
          $ref: '#/components/schemas/HTTPResponseFormat'
        http-stream,omitempty:
          $ref: '#/components/schemas/HTTPStreamFormat'
        ws-message,omitempty:
          $ref: '#/components/schemas/WsMessageFormat'
    Settings:
      type: object
      properties:
        general.default_host,omitempty:
          type: string
          description: The default time-to-live (TTL) for the version.
        general.default_ttl,omitempty:
          type: integer
          format: int32
          description: Enables serving a stale object if there is an error.
        general.stale_if_error,omitempty:
          type: boolean
          description: The default time-to-live (TTL) for serving the stale object for the version.
        general.stale_if_error_ttl,omitempty:
          type: integer
          format: int32
    OriginInspectorHistoricalMeta:
      type: object
      properties:
        start,omitempty:
          type: string
          description: End time that was used to perform the query as an ISO-8601-formatted date and time.
        end,omitempty:
          type: string
          description: Downsample that was used to perform the query. One of `minute`, `hour` or `day`.
        downsample,omitempty:
          type: string
          description: A comma-separated list of the metrics that were requested.
        metrics,omitempty:
          type: string
          description: The maximum number of results shown per page.
        limit,omitempty:
          type: number
          format: float
          description: A string that can be used to request the next page of results, if any.
        next_cursor,omitempty:
          type: string
          description: A comma-separated list of keys the results are sorted by.
        sort,omitempty:
          type: string
          description: A comma-separated list of dimensions being summed over in the query.
        group_by,omitempty:
          type: string
        filters,omitempty:
          $ref: '#/components/schemas/OriginInspectorHistoricalMetaFilters'
    AutomationTokenCreateResponse:
      type: object
      properties:
        name,omitempty:
          type: string
          description: The role on the token.
        role,omitempty:
          type: string
          description: (Optional) The service IDs of the services the token will have access to. Separate service IDs with a space. If no services are specified, the token will have access to all services
            on the account.
        scope,omitempty:
          type: string
          description: A UTC timestamp of when the token expires.
        expires_at,omitempty:
          type: string
        id,omitempty:
          $ref: '#/components/schemas/ReadOnlyID'
        user_id,omitempty:
          $ref: '#/components/schemas/ReadOnlyUserID'
        customer_id,omitempty:
          $ref: '#/components/schemas/ReadOnlyCustomerID'
          description: A UTC timestamp of when the token was created.
        created_at,omitempty:
          type: string
          format: date-time
        access_token,omitempty:
          type: string
          description: Indicates whether TLS access is enabled for the token.
        tls_access,omitempty:
          type: boolean
          description: A UTC timestamp of when the token was last used.
        last_used_at,omitempty:
          type: string
          format: date-time
          description: The User-Agent header of the client that last used the token.
        user_agent,omitempty:
          type: string
    WsMessageFormat:
      type: object
      properties:
        content,omitempty:
          type: string
          description: The base64-encoded content of a WebSocket `BINARY` message.
        content-bin,omitempty:
          type: string
    Condition:
      type: object
      properties:
        comment,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: Name of the condition. Required.
        name,omitempty:
          type: string
          description: A numeric string. Priority determines execution order. Lower numbers execute first.
        priority,omitempty:
          type: string
          description: A conditional expression in VCL used to determine if the condition is met.
        statement,omitempty:
          type: string
        service_id,omitempty:
          type: string
          description: A numeric string that represents the service version.
        version,omitempty:
          type: string
          description: Type of the condition. Required.
        type,omitempty:
          type: string
    DomainInspector:
      type: object
      properties:
        Timestamp,omitempty:
          type: integer
          format: int32
          description: Offset of entry timestamps from the current time due to processing time.
        AggregateDelay,omitempty:
          type: integer
          format: int32
          description: A list of report [entries](#entry-data-model), each representing one second of time.
    Mtdlineitems:
      type: object
      properties:
        description,omitempty:
          type: string
          description: Billed amount for line item.
        amount,omitempty:
          type: number
          format: float
          description: Price per unit.
        rate,omitempty:
          type: number
          format: float
          description: Total number of units of usage.
        units,omitempty:
          type: number
          format: float
          description: The name of the product.
        product_name,omitempty:
          type: string
          description: The broader classification of the product (e.g., `Compute` or `Full-Site Delivery`).
        product_group,omitempty:
          type: string
          description: The broader classification of the product (e.g., `Network Services` or `Security`).
        product_line,omitempty:
          type: string
          description: The geographical area applicable for regionally based products.
        region,omitempty:
          type: string
          description: The unit of measure (e.g., `requests` or `bandwidth`).
        usage_type,omitempty:
          type: string
    VersionDetailSettings:
      type: object
      properties:
        general.default_host,omitempty:
          type: string
          description: The default time-to-live (TTL) for the version.
        general.default_ttl,omitempty:
          type: integer
          format: int32
          description: Enables serving a stale object if there is an error.
        general.stale_if_error,omitempty:
          type: boolean
          description: The default time-to-live (TTL) for serving the stale object for the version.
        general.stale_if_error_ttl,omitempty:
          type: integer
          format: int32
    RelationshipDefaultEcdsaTLSCertificateDefaultEcdsaCertificateData:
      type: object
      properties:
        type,omitempty:
          $ref: '#/components/schemas/TypeTLSCertificate'
          description: Alphanumeric string identifying the default ECDSA TLS certificate.
        id,omitempty:
          type: string
    TLSDomainsResponse:
      type: object
      properties:
        links,omitempty:
          $ref: '#/components/schemas/PaginationLinks'
        meta,omitempty:
          $ref: '#/components/schemas/PaginationMeta'
    PackageMetadata:
      type: object
      properties:
        name,omitempty:
          type: string
          description: Description of the Compute package.
        description,omitempty:
          type: string
          description: A list of package authors' email addresses.
        language,omitempty:
          type: string
          description: Size of the Compute package in bytes.
        size,omitempty:
          type: integer
          format: int32
          description: Hash of the Compute package.
        hashsum,omitempty:
          type: string
          description: Hash of the files within the Compute package.
        files_hash,omitempty:
          type: string
    ConfigStoreResponseAllOf:
      type: object
      properties:
        id,omitempty:
          type: string
    ServiceAuthorizationDataAttributes:
      type: object
      properties:
        permission,omitempty:
          $ref: '#/components/schemas/Permission'
    ResourceResponse:
      type: object
      properties:
        resource_id,omitempty:
          type: string
          description: The name of the resource link. Note this is separate from the resource store name and might not match the store name.
        name,omitempty:
          type: string
          description: Date and time in ISO 8601 format.
        created_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        deleted_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        updated_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: An alphanumeric string identifying the resource link.
        id,omitempty:
          type: string
          description: The path to the resource.
        href,omitempty:
          type: string
          description: Alphanumeric string identifying the service.
        service_id,omitempty:
          type: string
          description: Integer identifying a service version.
        version,omitempty:
          type: integer
          format: int32
        resource_type,omitempty:
          $ref: '#/components/schemas/TypeResource'
    Content:
      type: object
      properties:
        hash,omitempty:
          type: string
        response_time,omitempty:
          type: number
          format: float
        server,omitempty:
          type: string
        pop,omitempty:
          type: string
    AutomationToken:
      type: object
      properties:
        name,omitempty:
          type: string
          description: The role on the token.
        role,omitempty:
          type: string
          description: (Optional) The service IDs of the services the token will have access to. Separate service IDs with a space. If no services are specified, the token will have access to all services
            on the account.
        scope,omitempty:
          type: string
          description: A UTC timestamp of when the token expires.
        expires_at,omitempty:
          type: string
    TLSConfigurationResponseDataAllOf:
      type: object
      properties:
        id,omitempty:
          type: string
        attributes,omitempty:
          $ref: '#/components/schemas/TLSConfigurationResponseAttributes'
    DdosProtectionResponseService:
      type: object
      properties:
        service,omitempty:
          $ref: '#/components/schemas/BotManagementResponseServiceService'
    DomainInspectorResponseCustomer:
      type: object
      properties:
        customer,omitempty:
          $ref: '#/components/schemas/BotManagementResponseCustomerCustomer'
    LoggingLogglyAdditional:
      type: object
      properties:
        token,omitempty:
          type: string
    Star:
      type: object
      properties:
        data,omitempty:
          $ref: '#/components/schemas/StarData'
    HistoricalDdosMeta:
      type: object
      properties:
        start,omitempty:
          type: string
          description: End time that was used to perform the query as an ISO-8601-formatted date and time.
        end,omitempty:
          type: string
          description: Downsample that was used to perform the query. One of `hour` or `day`.
        downsample,omitempty:
          type: string
          description: A comma-separated list of the metrics that were requested.
        metric,omitempty:
          type: string
    DimensionURL:
      type: object
      properties:
        url,omitempty:
          type: string
    InvitationsResponse:
      type: object
      properties:
        links,omitempty:
          $ref: '#/components/schemas/PaginationLinks'
        meta,omitempty:
          $ref: '#/components/schemas/PaginationMeta'
    RelationshipMemberServiceInvitation:
      type: object
      properties:
        type,omitempty:
          $ref: '#/components/schemas/TypeServiceInvitation'
          description: Alphanumeric string identifying a service invitation.
        id,omitempty:
          type: string
    ResponseObjectResponse:
      type: object
      properties:
        cache_condition,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: The content to deliver for the response object, can be empty.
        content,omitempty:
          type: string
          description: The MIME type of the content, can be empty.
        content_type,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: Name for the request settings.
        name,omitempty:
          type: string
          description: The HTTP status code.
        status,omitempty:
          type: string
          description: The HTTP response.
        response,omitempty:
          type: string
          description: Condition which, if met, will select this configuration during a request. Optional.
        request_condition,omitempty:
          $ref: '#/components/schemas/NullableString'
        service_id,omitempty:
          type: string
        version,omitempty:
          type: string
          description: Date and time in ISO 8601 format.
        created_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        deleted_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        updated_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
    MutualAuthenticationData:
      type: object
      properties:
        type,omitempty:
          $ref: '#/components/schemas/TypeMutualAuthentication'
        attributes,omitempty:
          $ref: '#/components/schemas/MutualAuthenticationDataAttributes'
        relationships,omitempty:
          $ref: '#/components/schemas/RelationshipsForMutualAuthentication'
    ServiceInvitationData:
      type: object
      properties:
        type,omitempty:
          $ref: '#/components/schemas/TypeServiceInvitation'
        attributes,omitempty:
          $ref: '#/components/schemas/ServiceInvitationDataAttributes'
        relationships,omitempty:
          $ref: '#/components/schemas/ServiceInvitationDataRelationships'
    TLSPrivateKeyResponseAttributes:
      type: object
      properties:
        created_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        deleted_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        updated_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: A customizable name for your private key.
        name,omitempty:
          type: string
          description: The key length used to generate the private key.
        key_length,omitempty:
          type: integer
          format: int32
          description: The algorithm used to generate the private key. Must be `RSA`.
        key_type,omitempty:
          type: string
          description: A recommendation from Fastly to replace this private key and all associated certificates.
        replace,omitempty:
          type: boolean
          description: Useful for safely identifying the key.
        public_key_sha1,omitempty:
          type: string
    DomainInspectorResponseLinks:
      type: object
      properties:
        _links,omitempty:
          $ref: '#/components/schemas/DomainInspectorResponseLinksLinks'
    PlatformDdosDataItems:
      type: object
      properties:
        values,omitempty:
          $ref: '#/components/schemas/Values'
    Timestamps:
      type: object
      properties:
        created_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        deleted_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        updated_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
    Serviceusagemetric:
      type: object
      properties:
        customer_id,omitempty:
          type: string
          description: Service ID associated with the usage.
        service_id,omitempty:
          type: string
          description: Name of the service associated with the usage.
        service_name,omitempty:
          type: string
          description: The quantity of the usage for the billing period. Amount will be in the units provided in the parent object (e.g., a quantity of `1.3` with a unit of `gb` would have a usage amount
            of 1.3 gigabytes).
        usage_units,omitempty:
          type: number
          format: float
    RelationshipTLSDNSRecordsRequest:
      type: object
      properties:
        dns_records,omitempty:
          $ref: '#/components/schemas/RelationshipTLSDNSRecordsRequestDNSRecords'
    LoggingHerokuResponse:
      type: object
      properties:
        name,omitempty:
          type: string
          description: Where in the generated VCL the logging call should be placed. If not set, endpoints with `format_version` of 2 are placed in `vcl_log` and those with `format_version` of 1 are placed
            in `vcl_deliver`.
        placement,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: The name of an existing condition in the configured endpoint, or leave blank to always execute.
        response_condition,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: A Fastly [log format string](https://docs.fastly.com/en/guides/custom-log-formats).
        format,omitempty:
          type: string
          description: The version of the custom logging format used for the configured endpoint. The logging call gets placed by default in `vcl_log` if `format_version` is set to `2` and in `vcl_deliver`
            if `format_version` is set to `1`.
        format_version,omitempty:
          type: string
          description: The token to use for authentication ([https://devcenter.heroku.com/articles/add-on-partner-log-integration](https://devcenter.heroku.com/articles/add-on-partner-log-integration)).
        token,omitempty:
          type: string
          description: The URL to stream logs to.
        url,omitempty:
          type: string
          description: Date and time in ISO 8601 format.
        created_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        deleted_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        updated_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
        service_id,omitempty:
          type: string
        version,omitempty:
          type: string
    ConfigStoreResponse:
      type: object
      properties:
        created_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        deleted_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        updated_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: The name of the config store.
        name,omitempty:
          type: string
          description: An alphanumeric string identifying the config store.
        id,omitempty:
          type: string
    MutualAuthentication:
      type: object
      properties:
        data,omitempty:
          $ref: '#/components/schemas/MutualAuthenticationData'
    LoggingGenericCommonResponseAllOf1:
      type: object
      properties:
        period,omitempty:
          type: string
          description: The level of gzip encoding when sending logs (default `0`, no compression). Specifying both `compression_codec` and `gzip_level` in the same API request will result in an error.
        gzip_level,omitempty:
          type: string
    LoggingNewrelicAdditional:
      type: object
      properties:
        format,omitempty:
          type: string
          description: The Insert API key from the Account page of your New Relic account. Required.
        token,omitempty:
          type: string
          description: The region to which to stream logs.
        region,omitempty:
          type: string
    RelationshipTLSActivation:
      type: object
      properties:
        tls_activation,omitempty:
          $ref: '#/components/schemas/RelationshipTLSActivationTLSActivation'
    BotManagementResponseProductProduct:
      type: object
      properties:
        id,omitempty:
          type: string
          description: Name of the object
        object,omitempty:
          type: string
    TLSBulkCertificate:
      type: object
      properties:
        data,omitempty:
          $ref: '#/components/schemas/TLSBulkCertificateData'
    DirectorResponse:
      type: object
      properties:
        capacity,omitempty:
          type: integer
          format: int32
          description: A freeform descriptive note.
        comment,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: Name for the Director.
        name,omitempty:
          type: string
          description: The percentage of capacity that needs to be up for a director to be considered up. `0` to `100`.
        quorum,omitempty:
          type: integer
          format: int32
          description: Selected POP to serve as a shield for the backends. Defaults to `null` meaning no origin shielding if not set. Refer to the [POPs API endpoint](https://www.fastly.com/documentation/reference/api/utils/pops/)
            to get a list of available POPs used for shielding.
        shield,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: What type of load balance group to use.
        type,omitempty:
          type: integer
          format: int32
          description: How many backends to search if it fails.
        retries,omitempty:
          type: integer
          format: int32
        service_id,omitempty:
          type: string
        version,omitempty:
          type: integer
          format: int32
          description: Date and time in ISO 8601 format.
        created_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        deleted_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        updated_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
    WebsocketsResponseProduct:
      type: object
      properties:
        product,omitempty:
          $ref: '#/components/schemas/WebsocketsResponseProductProduct'
    TLSCertificate:
      type: object
      properties:
        data,omitempty:
          $ref: '#/components/schemas/TLSCertificateData'
    LoggingGooglePubsubAdditional:
      type: object
      properties:
        topic,omitempty:
          type: string
          description: A Fastly [log format string](https://docs.fastly.com/en/guides/custom-log-formats).
        format,omitempty:
          type: string
          description: Your Google Cloud Platform project ID. Required
        project_id,omitempty:
          type: string
    DictionaryResponse:
      type: object
      properties:
        name,omitempty:
          type: string
          description: Determines if items in the dictionary are readable or not.
        write_only,omitempty:
          type: boolean
          description: Date and time in ISO 8601 format.
        created_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        deleted_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        updated_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
        service_id,omitempty:
          type: string
        version,omitempty:
          type: integer
          format: int32
        id,omitempty:
          type: string
    ComputeACLCreateAclsRequest:
      type: object
      properties:
        name,omitempty:
          type: string
    SettingsResponse:
      type: object
      properties:
        general.default_host,omitempty:
          type: string
          description: The default time-to-live (TTL) for the version.
        general.default_ttl,omitempty:
          type: integer
          format: int32
          description: Enables serving a stale object if there is an error.
        general.stale_if_error,omitempty:
          type: boolean
          description: The default time-to-live (TTL) for serving the stale object for the version.
        general.stale_if_error_ttl,omitempty:
          type: integer
          format: int32
        service_id,omitempty:
          type: string
        version,omitempty:
          type: integer
          format: int32
    Server:
      type: object
      properties:
        weight,omitempty:
          type: integer
          format: int32
          description: Maximum number of connections. If the value is `0`, it inherits the value from pool's `max_conn_default`.
        max_conn,omitempty:
          type: integer
          format: int32
          description: Port number. Setting port `443` does not force TLS. Set `use_tls` in pool to force TLS.
        port,omitempty:
          type: integer
          format: int32
          description: A hostname, IPv4, or IPv6 address for the server. Required.
        address,omitempty:
          type: string
          description: A freeform descriptive note.
        comment,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: Allows servers to be enabled and disabled in a pool.
        disabled,omitempty:
          type: boolean
          description: The hostname to override the Host header. Defaults to `null` meaning no override of the Host header if not set. This setting can also be added to a Pool definition. However, the server
            setting will override the Pool setting.
        override_host,omitempty:
          $ref: '#/components/schemas/NullableString'
    User:
      type: object
      properties:
        login,omitempty:
          type: string
          description: The real life name of the user.
        name,omitempty:
          type: string
          description: Indicates that the user has limited access to the customer's services.
        limit_services,omitempty:
          type: boolean
          description: Indicates whether the is account is locked for editing or not.
        locked,omitempty:
          $ref: '#/components/schemas/NullableBool'
          description: Indicates if a new password is required at next login.
        require_new_password,omitempty:
          $ref: '#/components/schemas/NullableBool'
        role,omitempty:
          $ref: '#/components/schemas/RoleUser'
          description: Indicates if 2FA is enabled on the user.
        two_factor_auth_enabled,omitempty:
          $ref: '#/components/schemas/NullableBool'
          description: Indicates if 2FA is required by the user's customer account.
        two_factor_setup_required,omitempty:
          type: boolean
    RelationshipMemberService:
      type: object
      properties:
        type,omitempty:
          $ref: '#/components/schemas/TypeService'
        id,omitempty:
          type: string
    LoggingSftpResponseAllOf:
      type: object
      properties:
        address,omitempty:
          type: string
          description: The port number.
        port,omitempty:
          type: string
          description: How frequently log files are finalized so they can be available for reading (in seconds).
        period,omitempty:
          type: string
          description: The level of gzip encoding when sending logs (default `0`, no compression). Specifying both `compression_codec` and `gzip_level` in the same API request will result in an error.
        gzip_level,omitempty:
          type: integer
          format: int32
    RelationshipDefaultTLSCertificateDefaultCertificateData:
      type: object
      properties:
        type,omitempty:
          $ref: '#/components/schemas/TypeTLSCertificate'
          description: Alphanumeric string identifying the default TLS certificate.
        id,omitempty:
          type: string
    RateLimiterResponse:
      type: object
      properties:
        name,omitempty:
          type: string
          description: The name of a Dictionary containing URIs as keys. If not defined or `null`, all origin URIs will be rate limited.
        uri_dictionary_name,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: Array of HTTP methods to apply rate limiting to.
        rps_limit,omitempty:
          type: integer
          format: int32
          description: Number of seconds during which the RPS limit must be exceeded in order to trigger a violation.
        window_size,omitempty:
          type: integer
          format: int32
          description: Array of VCL variables used to generate a counter key to identify a client. Example variables include `req.http.Fastly-Client-IP`, `req.http.User-Agent`, or a custom header like `req.http.API-Key`.
        penalty_box_duration,omitempty:
          type: integer
          format: int32
          description: The action to take when a rate limiter violation is detected.
        action,omitempty:
          type: string
          description: Custom response to be sent when the rate limit is exceeded. Required if `action` is `response`.
        response_object_name,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: Name of the type of logging endpoint to be used when action is `log_only`. The logging endpoint type is used to determine the appropriate log format to use when emitting log entries.
        logger_type,omitempty:
          type: string
          description: Revision number of the rate limiting feature implementation. Defaults to the most recent revision.
        feature_revision,omitempty:
          type: integer
          format: int32
        service_id,omitempty:
          type: string
        version,omitempty:
          type: integer
          format: int32
          description: Date and time in ISO 8601 format.
        created_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        deleted_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        updated_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Alphanumeric string identifying the rate limiter.
        id,omitempty:
          type: string
    DdosProtectionEventAllOf:
      type: object
      properties:
        id,omitempty:
          type: string
          description: A human-readable name for the event.
        name,omitempty:
          type: string
          description: Alphanumeric string identifying the customer.
        customer_id,omitempty:
          type: string
          description: Alphanumeric string identifying the service.
        service_id,omitempty:
          type: string
          description: Date and time in ISO 8601 format.
        started_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        ended_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
    LoggingBigqueryAdditional:
      type: object
      properties:
        name,omitempty:
          type: string
          description: A Fastly [log format string](https://docs.fastly.com/en/guides/custom-log-formats). Must produce JSON that matches the schema of your BigQuery table.
        format,omitempty:
          type: string
          description: Your BigQuery dataset.
        dataset,omitempty:
          type: string
          description: Your BigQuery table.
        table,omitempty:
          type: string
          description: BigQuery table name suffix template. Optional.
        template_suffix,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: Your Google Cloud Platform project ID. Required
        project_id,omitempty:
          type: string
    TLSPrivateKey:
      type: object
      properties:
        data,omitempty:
          $ref: '#/components/schemas/TLSPrivateKeyData'
    LoggingS3Response:
      type: object
      properties:
        name,omitempty:
          type: string
          description: Where in the generated VCL the logging call should be placed. If not set, endpoints with `format_version` of 2 are placed in `vcl_log` and those with `format_version` of 1 are placed
            in `vcl_deliver`.
        placement,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: The name of an existing condition in the configured endpoint, or leave blank to always execute.
        response_condition,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: A Fastly [log format string](https://docs.fastly.com/en/guides/custom-log-formats).
        format,omitempty:
          type: string
          description: The version of the custom logging format used for the configured endpoint. The logging call gets placed by default in `vcl_log` if `format_version` is set to `2` and in `vcl_deliver`
            if `format_version` is set to `1`.
        format_version,omitempty:
          type: string
          description: How the message should be formatted.
        message_type,omitempty:
          type: string
          description: A timestamp format
        timestamp_format,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: The codec used for compressing your logs. Valid values are `zstd`, `snappy`, and `gzip`. Specifying both `compression_codec` and `gzip_level` in the same API request will result in
            an error.
        compression_codec,omitempty:
          type: string
          description: How frequently log files are finalized so they can be available for reading (in seconds).
        period,omitempty:
          type: string
          description: The level of gzip encoding when sending logs (default `0`, no compression). Specifying both `compression_codec` and `gzip_level` in the same API request will result in an error.
        gzip_level,omitempty:
          type: string
          description: Date and time in ISO 8601 format.
        created_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        deleted_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        updated_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
        service_id,omitempty:
          type: string
        version,omitempty:
          type: string
          description: The access key for your S3 account. Not required if `iam_role` is provided.
        access_key,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: The access control list (ACL) specific request header. See the AWS documentation for [Access Control List (ACL) Specific Request Headers](https://docs.aws.amazon.com/AmazonS3/latest/API/mpUploadInitiate.html#initiate-mpu-acl-specific-request-headers)
            for more information.
        acl,omitempty:
          type: string
          description: The bucket name for S3 account.
        bucket_name,omitempty:
          type: string
          description: The domain of the Amazon S3 endpoint.
        domain,omitempty:
          type: string
          description: The Amazon Resource Name (ARN) for the IAM role granting Fastly access to S3. Not required if `access_key` and `secret_key` are provided.
        iam_role,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: The path to upload logs to.
        path,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: A PGP public key that Fastly will use to encrypt your log files before writing them to disk.
        public_key,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: The S3 redundancy level.
        redundancy,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: The secret key for your S3 account. Not required if `iam_role` is provided.
        secret_key,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: Optional server-side KMS Key ID. Must be set if `server_side_encryption` is set to `aws:kms` or `AES256`.
        server_side_encryption_kms_key_id,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: Set this to `AES256` or `aws:kms` to enable S3 Server Side Encryption.
        server_side_encryption,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: The maximum number of bytes for each uploaded file. A value of 0 can be used to indicate there is no limit on the size of uploaded files, otherwise the minimum value is 1048576 bytes
            (1 MiB.)
        file_max_bytes,omitempty:
          type: integer
          format: int32
    DdosProtectionRuleAllOf:
      type: object
      properties:
        id,omitempty:
          type: string
          description: A human-readable name for the rule.
        name,omitempty:
          type: string
        action,omitempty:
          $ref: '#/components/schemas/DdosProtectionAction'
          description: Alphanumeric string identifying the customer.
        customer_id,omitempty:
          type: string
          description: Alphanumeric string identifying the service.
        service_id,omitempty:
          type: string
          description: Source IP address attribute.
        source_ip,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: Country code attribute.
        country_code,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: Host attribute.
        host,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: ASN attribute.
        asn,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: Source IP prefix attribute.
        source_ip_prefix,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: Attribute category for additional, unlisted attributes used in a rule.
    Gzip:
      type: object
      properties:
        cache_condition,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: Space-separated list of content types to compress. If you omit this field a default list will be used.
        content_types,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: Space-separated list of file extensions to compress. If you omit this field a default list will be used.
        extensions,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: Name of the gzip configuration.
        name,omitempty:
          type: string
    ServiceInvitationDataRelationships:
      type: object
      properties:
        service,omitempty:
          $ref: '#/components/schemas/RelationshipMemberService'
    LoggingGrafanacloudlogsResponse:
      type: object
      properties:
        name,omitempty:
          type: string
          description: Where in the generated VCL the logging call should be placed. If not set, endpoints with `format_version` of 2 are placed in `vcl_log` and those with `format_version` of 1 are placed
            in `vcl_deliver`.
        placement,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: The name of an existing condition in the configured endpoint, or leave blank to always execute.
        response_condition,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: A Fastly [log format string](https://docs.fastly.com/en/guides/custom-log-formats).
        format,omitempty:
          type: string
          description: The version of the custom logging format used for the configured endpoint. The logging call gets placed by default in `vcl_log` if `format_version` is set to `2` and in `vcl_deliver`
            if `format_version` is set to `1`.
        format_version,omitempty:
          type: string
          description: The Grafana Cloud Logs Dataset you want to log to.
        user,omitempty:
          type: string
          description: The URL of the Loki instance in your Grafana stack.
        url,omitempty:
          type: string
          description: The Grafana Access Policy token with `logs:write` access scoped to your Loki instance.
        token,omitempty:
          type: string
          description: The Stream Labels, a JSON string used to identify the stream.
        index,omitempty:
          type: string
          description: Date and time in ISO 8601 format.
        created_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        deleted_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        updated_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
        service_id,omitempty:
          type: string
        version,omitempty:
          type: string
    Director:
      type: object
      properties:
        capacity,omitempty:
          type: integer
          format: int32
          description: A freeform descriptive note.
        comment,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: Name for the Director.
        name,omitempty:
          type: string
          description: The percentage of capacity that needs to be up for a director to be considered up. `0` to `100`.
        quorum,omitempty:
          type: integer
          format: int32
          description: Selected POP to serve as a shield for the backends. Defaults to `null` meaning no origin shielding if not set. Refer to the [POPs API endpoint](https://www.fastly.com/documentation/reference/api/utils/pops/)
            to get a list of available POPs used for shielding.
        shield,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: What type of load balance group to use.
        type,omitempty:
          type: integer
          format: int32
          description: How many backends to search if it fails.
        retries,omitempty:
          type: integer
          format: int32
    ErrorResponseData:
      type: object
      properties:
        title,omitempty:
          type: string
        detail,omitempty:
          type: string
    SudoGenericTokenError:
      type: object
      properties:
        msg,omitempty:
          type: string
    NgwafResponseLinksLinks:
      type: object
      properties:
        self,omitempty:
          type: string
          description: Location of the service resource
        service,omitempty:
          type: string
    LoggingOpenstackAdditional:
      type: object
      properties:
        access_key,omitempty:
          type: string
          description: The name of your OpenStack container.
        bucket_name,omitempty:
          type: string
          description: The path to upload logs to.
        path,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: A PGP public key that Fastly will use to encrypt your log files before writing them to disk.
        public_key,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: Your OpenStack auth url.
        url,omitempty:
          type: string
          description: The username for your OpenStack account.
        user,omitempty:
          type: string
    OriginInspectorValues:
      type: object
      properties:
        responses,omitempty:
          type: integer
          format: int64
          description: Number of header bytes from origin.
        resp_header_bytes,omitempty:
          type: integer
          format: int64
          description: Number of body bytes from origin.
        resp_body_bytes,omitempty:
          type: integer
          format: int64
          description: Number of 1xx \"Informational\" status codes delivered from origin.
        status_1xx,omitempty:
          type: integer
          format: int64
          description: Number of 2xx \"Success\" status codes delivered from origin.
        status_2xx,omitempty:
          type: integer
          format: int64
          description: Number of 3xx \"Redirection\" codes delivered from origin.
        status_3xx,omitempty:
          type: integer
          format: int64
          description: Number of 4xx \"Client Error\" codes delivered from origin.
        status_4xx,omitempty:
          type: integer
          format: int64
          description: Number of 5xx \"Server Error\" codes delivered from origin.
        status_5xx,omitempty:
          type: integer
          format: int64
          description: Number of responses received with status code 200 (Success) from origin.
        status_200,omitempty:
          type: integer
          format: int64
          description: Number of responses received with status code 204 (No Content) from origin.
        status_204,omitempty:
          type: integer
          format: int64
          description: Number of responses received with status code 206 (Partial Content) from origin.
        status_206,omitempty:
          type: integer
          format: int64
          description: Number of responses received with status code 301 (Moved Permanently) from origin.
        status_301,omitempty:
          type: integer
          format: int64
          description: Number of responses received with status code 302 (Found) from origin.
        status_302,omitempty:
          type: integer
          format: int64
          description: Number of responses received with status code 304 (Not Modified) from origin.
        status_304,omitempty:
          type: integer
          format: int64
          description: Number of responses received with status code 400 (Bad Request) from origin.
        status_400,omitempty:
          type: integer
          format: int64
          description: Number of responses received with status code 401 (Unauthorized) from origin.
        status_401,omitempty:
          type: integer
          format: int64
          description: Number of responses received with status code 403 (Forbidden) from origin.
        status_403,omitempty:
          type: integer
          format: int64
          description: Number of responses received with status code 404 (Not Found) from origin.
        status_404,omitempty:
          type: integer
          format: int64
          description: Number of responses received with status code 416 (Range Not Satisfiable) from origin.
        status_416,omitempty:
          type: integer
          format: int64
          description: Number of responses received with status code 429 (Too Many Requests) from origin.
        status_429,omitempty:
          type: integer
          format: int64
          description: Number of responses received with status code 500 (Internal Server Error) from origin.
        status_500,omitempty:
          type: integer
          format: int64
          description: Number of responses received with status code 501 (Not Implemented) from origin.
        status_501,omitempty:
          type: integer
          format: int64
          description: Number of responses received with status code 502 (Bad Gateway) from origin.
        status_502,omitempty:
          type: integer
          format: int64
          description: Number of responses received with status code 503 (Service Unavailable) from origin.
        status_503,omitempty:
          type: integer
          format: int64
          description: Number of responses received with status code 504 (Gateway Timeout) from origin.
        status_504,omitempty:
          type: integer
          format: int64
          description: Number of responses received with status code 505 (HTTP Version Not Supported) from origin.
        status_505,omitempty:
          type: integer
          format: int64
          description: Number of responses received from origin with status code 530.
        status_530,omitempty:
          type: integer
          format: int64
          description: Number of responses from origin with latency between 0 and 1 millisecond.
        latency_0_to_1ms,omitempty:
          type: integer
          format: int64
          description: Number of responses from origin with latency between 1 and 5 milliseconds.
        latency_1_to_5ms,omitempty:
          type: integer
          format: int64
          description: Number of responses from origin with latency between 5 and 10 milliseconds.
        latency_5_to_10ms,omitempty:
          type: integer
          format: int64
          description: Number of responses from origin with latency between 10 and 50 milliseconds.
        latency_10_to_50ms,omitempty:
          type: integer
          format: int64
          description: Number of responses from origin with latency between 50 and 100 milliseconds.
        latency_50_to_100ms,omitempty:
          type: integer
          format: int64
          description: Number of responses from origin with latency between 100 and 250 milliseconds.
        latency_100_to_250ms,omitempty:
          type: integer
          format: int64
          description: Number of responses from origin with latency between 250 and 500 milliseconds.
        latency_250_to_500ms,omitempty:
          type: integer
          format: int64
          description: Number of responses from origin with latency between 500 and 1,000 milliseconds.
        latency_500_to_1000ms,omitempty:
          type: integer
          format: int64
          description: Number of responses from origin with latency between 1,000 and 5,000 milliseconds.
        latency_1000_to_5000ms,omitempty:
          type: integer
          format: int64
          description: Number of responses from origin with latency between 5,000 and 10,000 milliseconds.
        latency_5000_to_10000ms,omitempty:
          type: integer
          format: int64
          description: Number of responses from origin with latency between 10,000 and 60,000 milliseconds.
        latency_10000_to_60000ms,omitempty:
          type: integer
          format: int64
          description: Number of responses from origin with latency of 60,000 milliseconds and above.
        latency_60000ms,omitempty:
          type: integer
          format: int64
          description: Number of responses received for origin requests made by the Fastly WAF.
        waf_responses,omitempty:
          type: integer
          format: int64
          description: Number of header bytes received for origin requests made by the Fastly WAF.
        waf_resp_header_bytes,omitempty:
          type: integer
          format: int64
          description: Number of body bytes received for origin requests made by the Fastly WAF.
        waf_resp_body_bytes,omitempty:
          type: integer
          format: int64
          description: Number of 1xx \"Informational\" status codes received for origin requests made by the Fastly WAF.
        waf_status_1xx,omitempty:
          type: integer
          format: int64
          description: Number of 2xx \"Success\" status codes received for origin requests made by the Fastly WAF.
        waf_status_2xx,omitempty:
          type: integer
          format: int64
          description: Number of 3xx \"Redirection\" codes received for origin requests made by the Fastly WAF.
        waf_status_3xx,omitempty:
          type: integer
          format: int64
          description: Number of 4xx \"Client Error\" codes received for origin requests made by the Fastly WAF.
        waf_status_4xx,omitempty:
          type: integer
          format: int64
          description: Number of 5xx \"Server Error\" codes received for origin requests made by the Fastly WAF.
        waf_status_5xx,omitempty:
          type: integer
          format: int64
          description: Number of responses received with status code 200 (Success) received for origin requests made by the Fastly WAF.
        waf_status_200,omitempty:
          type: integer
          format: int64
          description: Number of responses received with status code 204 (No Content) received for origin requests made by the Fastly WAF.
        waf_status_204,omitempty:
          type: integer
          format: int64
          description: Number of responses received with status code 206 (Partial Content) received for origin requests made by the Fastly WAF.
        waf_status_206,omitempty:
          type: integer
          format: int64
          description: Number of responses received with status code 301 (Moved Permanently) received for origin requests made by the Fastly WAF.
        waf_status_301,omitempty:
          type: integer
          format: int64
          description: Number of responses received with status code 302 (Found) received for origin requests made by the Fastly WAF.
        waf_status_302,omitempty:
          type: integer
          format: int64
          description: Number of responses received with status code 304 (Not Modified) received for origin requests made by the Fastly WAF.
        waf_status_304,omitempty:
          type: integer
          format: int64
          description: Number of responses received with status code 400 (Bad Request) received for origin requests made by the Fastly WAF.
        waf_status_400,omitempty:
          type: integer
          format: int64
          description: Number of responses received with status code 401 (Unauthorized) received for origin requests made by the Fastly WAF.
        waf_status_401,omitempty:
          type: integer
          format: int64
          description: Number of responses received with status code 403 (Forbidden) received for origin requests made by the Fastly WAF.
        waf_status_403,omitempty:
          type: integer
          format: int64
          description: Number of responses received with status code 404 (Not Found) received for origin requests made by the Fastly WAF.
        waf_status_404,omitempty:
          type: integer
          format: int64
          description: Number of responses received with status code 416 (Range Not Satisfiable) received for origin requests made by the Fastly WAF.
        waf_status_416,omitempty:
          type: integer
          format: int64
          description: Number of responses received with status code 429 (Too Many Requests) received for origin requests made by the Fastly WAF.
        waf_status_429,omitempty:
          type: integer
          format: int64
          description: Number of responses received with status code 500 (Internal Server Error) received for origin requests made by the Fastly WAF.
        waf_status_500,omitempty:
          type: integer
          format: int64
          description: Number of responses received with status code 501 (Not Implemented) received for origin requests made by the Fastly WAF.
        waf_status_501,omitempty:
          type: integer
          format: int64
          description: Number of responses received with status code 502 (Bad Gateway) received for origin requests made by the Fastly WAF.
        waf_status_502,omitempty:
          type: integer
          format: int64
          description: Number of responses received with status code 503 (Service Unavailable) received for origin requests made by the Fastly WAF.
        waf_status_503,omitempty:
          type: integer
          format: int64
          description: Number of responses received with status code 504 (Gateway Timeout) received for origin requests made by the Fastly WAF.
        waf_status_504,omitempty:
          type: integer
          format: int64
          description: Number of responses received with status code 505 (HTTP Version Not Supported) received for origin requests made by the Fastly WAF.
        waf_status_505,omitempty:
          type: integer
          format: int64
          description: Number of responses received with status code 530 received for origin requests made by the Fastly WAF.
        waf_status_530,omitempty:
          type: integer
          format: int64
          description: Number of responses with latency between 0 and 1 millisecond received for origin requests made by the Fastly WAF.
        waf_latency_0_to_1ms,omitempty:
          type: integer
          format: int64
          description: Number of responses with latency between 1 and 5 milliseconds received for origin requests made by the Fastly WAF.
        waf_latency_1_to_5ms,omitempty:
          type: integer
          format: int64
          description: Number of responses with latency between 5 and 10 milliseconds received for origin requests made by the Fastly WAF.
        waf_latency_5_to_10ms,omitempty:
          type: integer
          format: int64
          description: Number of responses with latency between 10 and 50 milliseconds received for origin requests made by the Fastly WAF.
        waf_latency_10_to_50ms,omitempty:
          type: integer
          format: int64
          description: Number of responses with latency between 50 and 100 milliseconds received for origin requests made by the Fastly WAF.
        waf_latency_50_to_100ms,omitempty:
          type: integer
          format: int64
          description: Number of responses with latency between 100 and 250 milliseconds received for origin requests made by the Fastly WAF.
        waf_latency_100_to_250ms,omitempty:
          type: integer
          format: int64
          description: Number of responses with latency between 250 and 500 milliseconds received for origin requests made by the Fastly WAF.
        waf_latency_250_to_500ms,omitempty:
          type: integer
          format: int64
          description: Number of responses with latency between 500 and 1,000 milliseconds received for origin requests made by the Fastly WAF.
        waf_latency_500_to_1000ms,omitempty:
          type: integer
          format: int64
          description: Number of responses with latency between 1,000 and 5,000 milliseconds received for origin requests made by the Fastly WAF.
        waf_latency_1000_to_5000ms,omitempty:
          type: integer
          format: int64
          description: Number of responses with latency between 5,000 and 10,000 milliseconds received for origin requests made by the Fastly WAF.
        waf_latency_5000_to_10000ms,omitempty:
          type: integer
          format: int64
          description: Number of responses with latency between 10,000 and 60,000 milliseconds received for origin requests made by the Fastly WAF.
        waf_latency_10000_to_60000ms,omitempty:
          type: integer
          format: int64
          description: Number of responses with latency of 60,000 milliseconds and above received for origin requests made by the Fastly WAF.
        waf_latency_60000ms,omitempty:
          type: integer
          format: int64
          description: Number of responses for origin received by the Compute platform.
        compute_responses,omitempty:
          type: integer
          format: int64
          description: Number of header bytes for origin received by the Compute platform.
        compute_resp_header_bytes,omitempty:
          type: integer
          format: int64
          description: Number of body bytes for origin received by the Compute platform.
        compute_resp_body_bytes,omitempty:
          type: integer
          format: int64
          description: Number of 1xx \"Informational\" status codes for origin received by the Compute platform.
        compute_status_1xx,omitempty:
          type: integer
          format: int64
          description: Number of 2xx \"Success\" status codes for origin received by the Compute platform.
        compute_status_2xx,omitempty:
          type: integer
          format: int64
          description: Number of 3xx \"Redirection\" codes for origin received by the Compute platform.
        compute_status_3xx,omitempty:
          type: integer
          format: int64
          description: Number of 4xx \"Client Error\" codes for origin received by the Compute platform.
        compute_status_4xx,omitempty:
          type: integer
          format: int64
          description: Number of 5xx \"Server Error\" codes for origin received by the Compute platform.
        compute_status_5xx,omitempty:
          type: integer
          format: int64
          description: Number of responses received with status code 200 (Success) for origin received by the Compute platform.
        compute_status_200,omitempty:
          type: integer
          format: int64
          description: Number of responses received with status code 204 (No Content) for origin received by the Compute platform.
        compute_status_204,omitempty:
          type: integer
          format: int64
          description: Number of responses received with status code 206 (Partial Content) for origin received by the Compute platform.
        compute_status_206,omitempty:
          type: integer
          format: int64
          description: Number of responses received with status code 301 (Moved Permanently) for origin received by the Compute platform.
        compute_status_301,omitempty:
          type: integer
          format: int64
          description: Number of responses received with status code 302 (Found) for origin received by the Compute platform.
        compute_status_302,omitempty:
          type: integer
          format: int64
          description: Number of responses received with status code 304 (Not Modified) for origin received by the Compute platform.
        compute_status_304,omitempty:
          type: integer
          format: int64
          description: Number of responses received with status code 400 (Bad Request) for origin received by the Compute platform.
        compute_status_400,omitempty:
          type: integer
          format: int64
          description: Number of responses received with status code 401 (Unauthorized) for origin received by the Compute platform.
        compute_status_401,omitempty:
          type: integer
          format: int64
          description: Number of responses received with status code 403 (Forbidden) for origin received by the Compute platform.
        compute_status_403,omitempty:
          type: integer
          format: int64
          description: Number of responses received with status code 404 (Not Found) for origin received by the Compute platform.
        compute_status_404,omitempty:
          type: integer
          format: int64
          description: Number of responses received with status code 416 (Range Not Satisfiable) for origin received by the Compute platform.
        compute_status_416,omitempty:
          type: integer
          format: int64
          description: Number of responses received with status code 429 (Too Many Requests) for origin received by the Compute platform.
        compute_status_429,omitempty:
          type: integer
          format: int64
          description: Number of responses received with status code 500 (Internal Server Error) for origin received by the Compute platform.
        compute_status_500,omitempty:
          type: integer
          format: int64
          description: Number of responses received with status code 501 (Not Implemented) for origin received by the Compute platform.
        compute_status_501,omitempty:
          type: integer
          format: int64
          description: Number of responses received with status code 502 (Bad Gateway) for origin received by the Compute platform.
        compute_status_502,omitempty:
          type: integer
          format: int64
          description: Number of responses received with status code 503 (Service Unavailable) for origin received by the Compute platform.
        compute_status_503,omitempty:
          type: integer
          format: int64
          description: Number of responses received with status code 504 (Gateway Timeout) for origin received by the Compute platform.
        compute_status_504,omitempty:
          type: integer
          format: int64
          description: Number of responses received with status code 505 (HTTP Version Not Supported) for origin received by the Compute platform.
        compute_status_505,omitempty:
          type: integer
          format: int64
          description: Number of responses received with status code 530 for origin received by the Compute platform.
        compute_status_530,omitempty:
          type: integer
          format: int64
          description: Number of responses with latency between 0 and 1 millisecond for origin received by the Compute platform.
        compute_latency_0_to_1ms,omitempty:
          type: integer
          format: int64
          description: Number of responses with latency between 1 and 5 milliseconds for origin received by the Compute platform.
        compute_latency_1_to_5ms,omitempty:
          type: integer
          format: int64
          description: Number of responses with latency between 5 and 10 milliseconds for origin received by the Compute platform.
        compute_latency_5_to_10ms,omitempty:
          type: integer
          format: int64
          description: Number of responses with latency between 10 and 50 milliseconds for origin received by the Compute platform.
        compute_latency_10_to_50ms,omitempty:
          type: integer
          format: int64
          description: Number of responses with latency between 50 and 100 milliseconds for origin received by the Compute platform.
        compute_latency_50_to_100ms,omitempty:
          type: integer
          format: int64
          description: Number of responses with latency between 100 and 250 milliseconds for origin received by the Compute platform.
        compute_latency_100_to_250ms,omitempty:
          type: integer
          format: int64
          description: Number of responses with latency between 250 and 500 milliseconds for origin received by the Compute platform.
        compute_latency_250_to_500ms,omitempty:
          type: integer
          format: int64
          description: Number of responses with latency between 500 and 1,000 milliseconds for origin received by the Compute platform.
        compute_latency_500_to_1000ms,omitempty:
          type: integer
          format: int64
          description: Number of responses with latency between 1,000 and 5,000 milliseconds for origin received by the Compute platform.
        compute_latency_1000_to_5000ms,omitempty:
          type: integer
          format: int64
          description: Number of responses with latency between 5,000 and 10,000 milliseconds for origin received by the Compute platform.
        compute_latency_5000_to_10000ms,omitempty:
          type: integer
          format: int64
          description: Number of responses with latency between 10,000 and 60,000 milliseconds for origin received by the Compute platform.
        compute_latency_10000_to_60000ms,omitempty:
          type: integer
          format: int64
          description: Number of responses with latency of 60,000 milliseconds and above for origin received by the Compute platform.
        compute_latency_60000ms,omitempty:
          type: integer
          format: int64
          description: Number of responses received for origin requests made by all sources.
        all_responses,omitempty:
          type: integer
          format: int64
          description: Number of header bytes received for origin requests made by all sources.
        all_resp_header_bytes,omitempty:
          type: integer
          format: int64
          description: Number of body bytes received for origin requests made by all sources.
        all_resp_body_bytes,omitempty:
          type: integer
          format: int64
          description: Number of 1xx \"Informational\" category status codes delivered received for origin requests made by all sources.
        all_status_1xx,omitempty:
          type: integer
          format: int64
          description: Number of 2xx \"Success\" status codes received for origin requests made by all sources.
        all_status_2xx,omitempty:
          type: integer
          format: int64
          description: Number of 3xx \"Redirection\" codes received for origin requests made by all sources.
        all_status_3xx,omitempty:
          type: integer
          format: int64
          description: Number of 4xx \"Client Error\" codes received for origin requests made by all sources.
        all_status_4xx,omitempty:
          type: integer
          format: int64
          description: Number of 5xx \"Server Error\" codes received for origin requests made by all sources.
        all_status_5xx,omitempty:
          type: integer
          format: int64
          description: Number of responses received with status code 200 (Success) received for origin requests made by all sources.
        all_status_200,omitempty:
          type: integer
          format: int64
          description: Number of responses received with status code 204 (No Content) received for origin requests made by all sources.
        all_status_204,omitempty:
          type: integer
          format: int64
          description: Number of responses received with status code 206 (Partial Content) received for origin requests made by all sources.
        all_status_206,omitempty:
          type: integer
          format: int64
          description: Number of responses received with status code 301 (Moved Permanently) received for origin requests made by all sources.
        all_status_301,omitempty:
          type: integer
          format: int64
          description: Number of responses received with status code 302 (Found) received for origin requests made by all sources.
        all_status_302,omitempty:
          type: integer
          format: int64
          description: Number of responses received with status code 304 (Not Modified) received for origin requests made by all sources.
        all_status_304,omitempty:
          type: integer
          format: int64
          description: Number of responses received with status code 400 (Bad Request) received for origin requests made by all sources.
        all_status_400,omitempty:
          type: integer
          format: int64
          description: Number of responses received with status code 401 (Unauthorized) received for origin requests made by all sources.
        all_status_401,omitempty:
          type: integer
          format: int64
          description: Number of responses received with status code 403 (Forbidden) received for origin requests made by all sources.
        all_status_403,omitempty:
          type: integer
          format: int64
          description: Number of responses received with status code 404 (Not Found) received for origin requests made by all sources.
        all_status_404,omitempty:
          type: integer
          format: int64
          description: Number of responses received with status code 416 (Range Not Satisfiable) received for origin requests made by all sources.
        all_status_416,omitempty:
          type: integer
          format: int64
          description: Number of responses received with status code 429 (Too Many Requests) received for origin requests made by all sources.
        all_status_429,omitempty:
          type: integer
          format: int64
          description: Number of responses received with status code 500 (Internal Server Error) received for origin requests made by all sources.
        all_status_500,omitempty:
          type: integer
          format: int64
          description: Number of responses received with status code 501 (Not Implemented) received for origin requests made by all sources.
        all_status_501,omitempty:
          type: integer
          format: int64
          description: Number of responses received with status code 502 (Bad Gateway) received for origin requests made by all sources.
        all_status_502,omitempty:
          type: integer
          format: int64
          description: Number of responses received with status code 503 (Service Unavailable) received for origin requests made by all sources.
        all_status_503,omitempty:
          type: integer
          format: int64
          description: Number of responses received with status code 504 (Gateway Timeout) received for origin requests made by all sources.
        all_status_504,omitempty:
          type: integer
          format: int64
          description: Number of responses received with status code 505 (HTTP Version Not Supported) received for origin requests made by all sources.
        all_status_505,omitempty:
          type: integer
          format: int64
          description: Number of responses received with status code 530 received for origin requests made by all sources.
        all_status_530,omitempty:
          type: integer
          format: int64
          description: Number of responses with latency between 0 and 1 millisecond received for origin requests made by all sources.
        all_latency_0_to_1ms,omitempty:
          type: integer
          format: int64
          description: Number of responses with latency between 1 and 5 milliseconds received for origin requests made by all sources.
        all_latency_1_to_5ms,omitempty:
          type: integer
          format: int64
          description: Number of responses with latency between 5 and 10 milliseconds received for origin requests made by all sources.
        all_latency_5_to_10ms,omitempty:
          type: integer
          format: int64
          description: Number of responses with latency between 10 and 50 milliseconds received for origin requests made by all sources.
        all_latency_10_to_50ms,omitempty:
          type: integer
          format: int64
          description: Number of responses with latency between 50 and 100 milliseconds received for origin requests made by all sources.
        all_latency_50_to_100ms,omitempty:
          type: integer
          format: int64
          description: Number of responses with latency between 100 and 250 milliseconds received for origin requests made by all sources.
        all_latency_100_to_250ms,omitempty:
          type: integer
          format: int64
          description: Number of responses with latency between 250 and 500 milliseconds received for origin requests made by all sources.
        all_latency_250_to_500ms,omitempty:
          type: integer
          format: int64
          description: Number of responses with latency between 500 and 1,000 milliseconds received for origin requests made by all sources.
        all_latency_500_to_1000ms,omitempty:
          type: integer
          format: int64
          description: Number of responses with latency between 1,000 and 5,000 milliseconds received for origin requests made by all sources.
        all_latency_1000_to_5000ms,omitempty:
          type: integer
          format: int64
          description: Number of responses with latency between 5,000 and 10,000 milliseconds received for origin requests made by all sources.
        all_latency_5000_to_10000ms,omitempty:
          type: integer
          format: int64
          description: Number of responses with latency between 10,000 and 60,000 milliseconds received for origin requests made by all sources.
        all_latency_10000_to_60000ms,omitempty:
          type: integer
          format: int64
          description: Number of responses with latency of 60,000 milliseconds and above received for origin requests made by all sources.
        all_latency_60000ms,omitempty:
          type: integer
          format: int64
    RelationshipDefaultTLSCertificate:
      type: object
      properties:
        default_certificate,omitempty:
          $ref: '#/components/schemas/RelationshipDefaultTLSCertificateDefaultCertificate'
    ServiceCreate:
      type: object
      properties:
        comment,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: The name of the service.
        name,omitempty:
          type: string
          description: Alphanumeric string identifying the customer.
        customer_id,omitempty:
          type: string
          description: The type of this service.
        type,omitempty:
          type: string
    AutomationTokenErrorResponse:
      type: object
      properties:
        detail,omitempty:
          type: string
        status,omitempty:
          type: integer
          format: int32
        title,omitempty:
          type: string
    BrotliCompressionResponseProduct:
      type: object
      properties:
        product,omitempty:
          $ref: '#/components/schemas/BrotliCompressionResponseProductProduct'
    FanoutResponseLinksGetAllServices:
      type: object
      properties:
        _links,omitempty:
          $ref: '#/components/schemas/FanoutResponseLinksGetAllServicesLinks'
    LoggingSplunkResponse:
      type: object
      properties:
        name,omitempty:
          type: string
          description: Where in the generated VCL the logging call should be placed. If not set, endpoints with `format_version` of 2 are placed in `vcl_log` and those with `format_version` of 1 are placed
            in `vcl_deliver`.
        placement,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: The name of an existing condition in the configured endpoint, or leave blank to always execute.
        response_condition,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: A Fastly [log format string](https://docs.fastly.com/en/guides/custom-log-formats).
        format,omitempty:
          type: string
          description: The version of the custom logging format used for the configured endpoint. The logging call gets placed by default in `vcl_log` if `format_version` is set to `2` and in `vcl_deliver`
            if `format_version` is set to `1`.
        format_version,omitempty:
          type: string
          description: A secure certificate to authenticate a server with. Must be in PEM format.
        tls_ca_cert,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: The client certificate used to make authenticated requests. Must be in PEM format.
        tls_client_cert,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: The client private key used to make authenticated requests. Must be in PEM format.
        tls_client_key,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: The hostname to verify the server's certificate. This should be one of the Subject Alternative Name (SAN) fields for the certificate. Common Names (CN) are not supported.
        tls_hostname,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: The maximum number of logs sent in one request. Defaults `0` for unbounded.
        request_max_entries,omitempty:
          type: integer
          format: int32
          description: The maximum number of bytes sent in one request. Defaults `0` for unbounded.
        request_max_bytes,omitempty:
          type: integer
          format: int32
          description: The URL to post logs to.
        url,omitempty:
          type: string
          description: A Splunk token for use in posting logs over HTTP to your collector.
        token,omitempty:
          type: string
        use_tls,omitempty:
          $ref: '#/components/schemas/LoggingUseTLSString'
          description: Date and time in ISO 8601 format.
        created_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        deleted_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        updated_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
        service_id,omitempty:
          type: string
        version,omitempty:
          type: string
    LoggingGenericCommon:
      type: object
      properties:
        message_type,omitempty:
          type: string
          description: A timestamp format
        timestamp_format,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: The codec used for compressing your logs. Valid values are `zstd`, `snappy`, and `gzip`. Specifying both `compression_codec` and `gzip_level` in the same API request will result in
            an error.
        compression_codec,omitempty:
          type: string
    AiAcceleratorResponseCustomerCustomer:
      type: object
      properties:
        id,omitempty:
          type: string
          description: Name of the object
        object,omitempty:
          type: string
    TLSCommonResponse:
      type: object
      properties:
        tls_ca_cert,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: The client certificate used to make authenticated requests. Must be in PEM format.
        tls_client_cert,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: The client private key used to make authenticated requests. Must be in PEM format.
        tls_client_key,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: The hostname used to verify a server's certificate. It can either be the Common Name (CN) or a Subject Alternative Name (SAN).
        tls_cert_hostname,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: Whether to use TLS.
        use_tls,omitempty:
          type: string
    ObjectStorageResponseProductProduct:
      type: object
      properties:
        id,omitempty:
          type: string
          description: Name of the object
        object,omitempty:
          type: string
    InlineResponse2005:
      type: object
      properties:
        meta,omitempty:
          $ref: '#/components/schemas/PaginationCursorMeta'
    CreateResponseObjectRequest:
      type: object
      properties:
        name,omitempty:
          type: string
          description: The status code the response will have. Defaults to 200.
        status,omitempty:
          type: string
          description: The status text the response will have. Defaults to 'OK'.
        response,omitempty:
          type: string
          description: The content the response will deliver.
        content,omitempty:
          type: string
          description: The MIME type of your response content.
        content_type,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: Condition which, if met, will select this configuration during a request. Optional.
        request_condition,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: Name of the cache condition controlling when this configuration applies.
        cache_condition,omitempty:
          $ref: '#/components/schemas/NullableString'
    MutualAuthenticationResponseDataAllOf:
      type: object
      properties:
        id,omitempty:
          type: string
        attributes,omitempty:
          $ref: '#/components/schemas/MutualAuthenticationResponseAttributes'
    DomainResponse:
      type: object
      properties:
        comment,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: The name of the domain or domains associated with this service.
        name,omitempty:
          type: string
        service_id,omitempty:
          type: string
        version,omitempty:
          type: integer
          format: int32
          description: Date and time in ISO 8601 format.
        created_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        deleted_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        updated_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
    ApexRedirectAllOf:
      type: object
      properties:
        status_code,omitempty:
          type: integer
          format: int32
          description: Array of apex domains that should redirect to their WWW subdomain.
        feature_revision,omitempty:
          type: integer
          format: int32
    VersionDetail:
      type: object
      properties:
        settings,omitempty:
          $ref: '#/components/schemas/VersionDetailSettings'
          description: List of VCL snippets for this service.
    RateLimiterResponseAllOf:
      type: object
      properties:
        id,omitempty:
          type: string
    UpdateBillingAddressRequestData:
      type: object
      properties:
        type,omitempty:
          $ref: '#/components/schemas/TypeBillingAddress'
          description: Alphanumeric string identifying the billing address.
        id,omitempty:
          type: string
        attributes,omitempty:
          $ref: '#/components/schemas/BillingAddressAttributes'
    PaginationMeta:
      type: object
      properties:
        current_page,omitempty:
          type: integer
          format: int32
          description: Number of records per page.
        per_page,omitempty:
          type: integer
          format: int32
          description: Total records in result set.
        record_count,omitempty:
          type: integer
          format: int32
          description: Total pages in result set.
        total_pages,omitempty:
          type: integer
          format: int32
    RelationshipMemberTLSSubscription:
      type: object
      properties:
        type,omitempty:
          $ref: '#/components/schemas/TypeTLSSubscription'
        id,omitempty:
          type: string
    BotManagementResponseBodyEnable:
      type: object
      properties:
        product,omitempty:
          $ref: '#/components/schemas/BotManagementResponseProductProduct'
        service,omitempty:
          $ref: '#/components/schemas/BotManagementResponseServiceService'
        _links,omitempty:
          $ref: '#/components/schemas/BotManagementResponseLinksLinks'
    ValidatorResultDataAttributes:
      type: object
      properties:
        msg,omitempty:
          $ref: '#/components/schemas/NullableString'
        status,omitempty:
          type: string
    PublishItem:
      type: object
      properties:
        channel:
          type: string
          description: The ID of the message.
        id,omitempty:
          type: string
          description: The ID of the previous message published on the same channel.
        prev-id,omitempty:
          type: string
        formats:
          $ref: '#/components/schemas/PublishItemFormats'
    HistoricalOriginsResponse:
      type: object
      properties:
        status,omitempty:
          type: string
        meta,omitempty:
          $ref: '#/components/schemas/OriginInspectorHistoricalMeta'
          description: If the query was not successful, this will provide a string that explains why.
        msg,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: A list of timeseries. Each individual timeseries represents a unique combination of dimensions, such as origin host, region or POP.
    LoggingLogshuttleResponse:
      type: object
      properties:
        name,omitempty:
          type: string
          description: Where in the generated VCL the logging call should be placed. If not set, endpoints with `format_version` of 2 are placed in `vcl_log` and those with `format_version` of 1 are placed
            in `vcl_deliver`.
        placement,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: The name of an existing condition in the configured endpoint, or leave blank to always execute.
        response_condition,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: A Fastly [log format string](https://docs.fastly.com/en/guides/custom-log-formats).
        format,omitempty:
          type: string
          description: The version of the custom logging format used for the configured endpoint. The logging call gets placed by default in `vcl_log` if `format_version` is set to `2` and in `vcl_deliver`
            if `format_version` is set to `1`.
        format_version,omitempty:
          type: string
          description: The data authentication token associated with this endpoint.
        token,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: The URL to stream logs to.
        url,omitempty:
          type: string
          description: Date and time in ISO 8601 format.
        created_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        deleted_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        updated_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
        service_id,omitempty:
          type: string
        version,omitempty:
          type: string
    LoggingCommon:
      type: object
      properties:
        name,omitempty:
          type: string
          description: Where in the generated VCL the logging call should be placed. If not set, endpoints with `format_version` of 2 are placed in `vcl_log` and those with `format_version` of 1 are placed
            in `vcl_deliver`.
        placement,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: The name of an existing condition in the configured endpoint, or leave blank to always execute.
        response_condition,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: A Fastly [log format string](https://docs.fastly.com/en/guides/custom-log-formats).
        format,omitempty:
          type: string
    StarData:
      type: object
      properties:
        type,omitempty:
          $ref: '#/components/schemas/TypeStar'
        relationships,omitempty:
          $ref: '#/components/schemas/RelationshipsForStar'
    HistoricalUsageData:
      type: object
      properties:
        bandwidth,omitempty:
          type: number
          format: float
        requests,omitempty:
          type: number
          format: float
        compute_requests,omitempty:
          type: number
          format: float
    TLSPrivateKeyResponse:
      type: object
      properties:
        data,omitempty:
          $ref: '#/components/schemas/TLSPrivateKeyResponseData'
    AccessKey:
      type: object
      properties:
        description:
          type: string
          description: The permissions granted to an access key.
        permission:
          type: string
    Mtdinvoice:
      type: object
      properties:
        customer_id,omitempty:
          type: string
          description: An alphanumeric string identifying the invoice.
        invoice_id,omitempty:
          type: string
          description: The date and time (in ISO 8601 format) for the initiation point of a billing cycle, signifying the start of charges for a service or subscription.
        billing_start_date,omitempty:
          type: string
          format: date-time
          description: The date and time (in ISO 8601 format) for the termination point of a billing cycle, signifying the end of charges for a service or subscription.
        billing_end_date,omitempty:
          type: string
          format: date-time
          description: The total billable amount for invoiced services charged within a single month.
        monthly_transaction_amount,omitempty:
          type: string
    ServiceAuthorizationsResponse:
      type: object
      properties:
        links,omitempty:
          $ref: '#/components/schemas/PaginationLinks'
        meta,omitempty:
          $ref: '#/components/schemas/PaginationMeta'
    LogExplorerInsightsResponseBodyGetAllServices:
      type: object
      properties:
        product,omitempty:
          $ref: '#/components/schemas/LogExplorerInsightsResponseProductProduct'
        customer,omitempty:
          $ref: '#/components/schemas/BotManagementResponseCustomerCustomer'
          description: A ist of services with Log Explorer & Insights enabled.
        _links,omitempty:
          $ref: '#/components/schemas/LogExplorerInsightsResponseLinksGetAllServicesLinks'
    DdosProtectionError:
      type: object
      properties:
        title,omitempty:
          type: string
        status,omitempty:
          type: integer
          format: int32
        detail,omitempty:
          type: string
    LoggingElasticsearchResponse:
      type: object
      properties:
        name,omitempty:
          type: string
          description: Where in the generated VCL the logging call should be placed. If not set, endpoints with `format_version` of 2 are placed in `vcl_log` and those with `format_version` of 1 are placed
            in `vcl_deliver`.
        placement,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: The name of an existing condition in the configured endpoint, or leave blank to always execute.
        response_condition,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: A Fastly [log format string](https://docs.fastly.com/en/guides/custom-log-formats). Must produce valid JSON that Elasticsearch can ingest.
        format,omitempty:
          type: string
          description: The version of the custom logging format used for the configured endpoint. The logging call gets placed by default in `vcl_log` if `format_version` is set to `2` and in `vcl_deliver`
            if `format_version` is set to `1`.
        format_version,omitempty:
          type: string
          description: A secure certificate to authenticate a server with. Must be in PEM format.
        tls_ca_cert,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: The client certificate used to make authenticated requests. Must be in PEM format.
        tls_client_cert,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: The client private key used to make authenticated requests. Must be in PEM format.
        tls_client_key,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: The hostname to verify the server's certificate. This should be one of the Subject Alternative Name (SAN) fields for the certificate. Common Names (CN) are not supported.
        tls_hostname,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: The maximum number of logs sent in one request. Defaults `0` for unbounded.
        request_max_entries,omitempty:
          type: integer
          format: int32
          description: The maximum number of bytes sent in one request. Defaults `0` for unbounded.
        request_max_bytes,omitempty:
          type: integer
          format: int32
          description: The name of the Elasticsearch index to send documents (logs) to. The index must follow the Elasticsearch [index format rules](https://www.elastic.co/guide/en/elasticsearch/reference/current/indices-create-index.html).
            We support [strftime](https://www.man7.org/linux/man-pages/man3/strftime.3.html) interpolated variables inside braces prefixed with a pound symbol. For example, `#{%F
    BulkUpdateACLEntry:
      type: object
      properties:
        negated,omitempty:
          type: integer
          format: int32
          description: A freeform descriptive note.
        comment,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: An IP address.
        ip,omitempty:
          type: string
          description: Number of bits for the subnet mask applied to the IP address. For IPv4 addresses, a value of 32 represents the smallest subnet mask (1 address), 24 represents a class C subnet mask
            (256 addresses), 16 represents a class B subnet mask (65k addresses), and 8 is class A subnet mask (16m addresses). If not provided, no mask is applied.
        subnet,omitempty:
          $ref: '#/components/schemas/NullableInt32'
        op,omitempty:
          type: string
        id,omitempty:
          type: string
    Contact:
      type: object
      properties:
        user_id,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: The type of contact.
        contact_type,omitempty:
          type: string
          description: The name of this contact, when user_id is not provided.
        name,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: The email of this contact, when a user_id is not provided.
        email,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: The phone number for this contact. Required for primary, technical, and security contact types.
        phone,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: The alphanumeric string representing the customer for this customer contact.
        customer_id,omitempty:
          $ref: '#/components/schemas/NullableString'
    TLSActivationResponse:
      type: object
      properties:
        data,omitempty:
          $ref: '#/components/schemas/TLSActivationResponseData'
    ImageOptimizerResponseCustomer:
      type: object
      properties:
        customer,omitempty:
          $ref: '#/components/schemas/BotManagementResponseCustomerCustomer'
    RelationshipTLSSubscriptions:
      type: object
      properties:
        tls_subscriptions,omitempty:
          $ref: '#/components/schemas/RelationshipTLSSubscriptionTLSSubscription'
    ClientKey:
      type: object
      properties:
        client_key,omitempty:
          type: string
          description: A Base64-encoded signature of the client key. The signature is generated using the signing key and must be verified before using the client key.
        signature,omitempty:
          type: string
          description: Date and time in ISO 8601 format.
        expires_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
    DdosProtectionResponseLinksLinks:
      type: object
      properties:
        self,omitempty:
          type: string
          description: Location of the service resource
        service,omitempty:
          type: string
    DashboardItemPropertyVisualizationPropertyConfig:
      type: object
      properties:
        plot_type:
          type: string
          description: (Optional) The units to use to format the data.
        format,omitempty:
          type: string
          description: (Optional) The aggregation function to apply to the dataset.
        calculation_method,omitempty:
          type: string
    StarResponse:
      type: object
      properties:
        data,omitempty:
          type: object
    AiAcceleratorResponseCustomer:
      type: object
      properties:
        customer,omitempty:
          $ref: '#/components/schemas/AiAcceleratorResponseCustomerCustomer'
    SchemasUserResponse:
      type: object
      properties:
        login,omitempty:
          type: string
          description: The real life name of the user.
        name,omitempty:
          type: string
          description: Indicates that the user has limited access to the customer's services.
        limit_services,omitempty:
          type: boolean
          description: Indicates whether the is account is locked for editing or not.
        locked,omitempty:
          $ref: '#/components/schemas/NullableBool'
          description: Indicates if a new password is required at next login.
        require_new_password,omitempty:
          $ref: '#/components/schemas/NullableBool'
        role,omitempty:
          $ref: '#/components/schemas/RoleUser'
          description: Indicates if 2FA is enabled on the user.
        two_factor_auth_enabled,omitempty:
          $ref: '#/components/schemas/NullableBool'
          description: Indicates if 2FA is required by the user's customer account.
        two_factor_setup_required,omitempty:
          type: boolean
          description: Date and time in ISO 8601 format.
        created_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        deleted_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        updated_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
        id,omitempty:
          type: string
          description: The alphanumeric string identifying a email login.
        email_hash,omitempty:
          type: string
        customer_id,omitempty:
          type: string
    Invoice:
      type: object
      properties:
        customer_id,omitempty:
          type: string
          description: Numeric string identifying the invoice.
        invoice_id,omitempty:
          type: string
          description: Date and time invoice was posted on, in ISO 8601 format.
        invoice_posted_on,omitempty:
          type: string
          format: date-time
          description: Date and time (in ISO 8601 format) for initiation point of a billing cycle, signifying the start of charges for a service or subscription.
        billing_start_date,omitempty:
          type: string
          format: date-time
          description: Date and time (in ISO 8601 format) for termination point of a billing cycle, signifying the end of charges for a service or subscription.
        billing_end_date,omitempty:
          type: string
          format: date-time
          description: Alphanumeric string identifying the statement number.
        statement_number,omitempty:
          type: string
          description: Three-letter code representing a specific currency used for financial transactions.
        currency_code,omitempty:
          type: string
          description: Total billable amount for invoiced services charged within a single month.
        monthly_transaction_amount,omitempty:
          type: number
          format: float
    CacheSettingResponse:
      type: object
      properties:
        action,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: Name of the cache condition controlling when this configuration applies.
        cache_condition,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: Name for the cache settings object.
        name,omitempty:
          type: string
          description: Maximum time in seconds to continue to use a stale version of the object if future requests to your backend server fail (also known as 'stale if error').
        stale_ttl,omitempty:
          type: string
          description: Maximum time to consider the object fresh in the cache (the cache 'time to live').
        ttl,omitempty:
          type: string
        service_id,omitempty:
          type: string
        version,omitempty:
          type: string
          description: Date and time in ISO 8601 format.
        created_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        deleted_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        updated_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
    DomainInspectorResponseLinksGetAllServices:
      type: object
      properties:
        _links,omitempty:
          $ref: '#/components/schemas/DomainInspectorResponseLinksGetAllServicesLinks'
    Customer:
      type: object
      properties:
        billing_contact_id,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: Customer's current network revenue type.
        billing_network_type,omitempty:
          type: string
          description: Used for adding purchased orders to customer's account.
        billing_ref,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: Whether this customer can view or edit wordpress.
        can_configure_wordpress,omitempty:
          $ref: '#/components/schemas/NullableBool'
          description: Whether this customer can reset passwords.
        can_reset_passwords,omitempty:
          type: boolean
          description: Whether this customer can upload VCL.
        can_upload_vcl,omitempty:
          type: boolean
          description: Specifies whether 2FA is forced or not forced on the customer account. Logs out non-2FA users once 2FA is force enabled.
        force_2fa,omitempty:
          type: boolean
          description: Specifies whether SSO is forced or not forced on the customer account.
        force_sso,omitempty:
          type: boolean
          description: Specifies whether the account has access or does not have access to the account panel.
        has_account_panel,omitempty:
          type: boolean
          description: Specifies whether the account has access or does not have access to the improved events.
        has_improved_events,omitempty:
          type: boolean
          description: Whether this customer can view or edit the SSL config.
        has_improved_ssl_config,omitempty:
          type: boolean
          description: Specifies whether the account has enabled or not enabled openstack logging.
        has_openstack_logging,omitempty:
          type: boolean
          description: Specifies whether the account can edit PCI for a service.
        has_pci,omitempty:
          type: boolean
          description: Specifies whether PCI passwords are required for the account.
        has_pci_passwords,omitempty:
          type: boolean
          description: The range of IP addresses authorized to access the customer account.
        ip_whitelist,omitempty:
          type: string
          description: The alphanumeric string identifying the account's legal contact.
        legal_contact_id,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: The name of the customer, generally the company name.
        name,omitempty:
          type: string
          description: The alphanumeric string identifying the account owner.
        owner_id,omitempty:
          type: string
          description: The phone number associated with the account.
        phone_number,omitempty:
          type: string
          description: The postal address associated with the account.
        postal_address,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: The pricing plan this customer is under.
        pricing_plan,omitempty:
          type: string
          description: The alphanumeric string identifying the pricing plan.
        pricing_plan_id,omitempty:
          type: string
          description: The alphanumeric string identifying the account's security contact.
        security_contact_id,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: The alphanumeric string identifying the account's technical contact.
        technical_contact_id,omitempty:
          $ref: '#/components/schemas/NullableString'
    TLSCertificateResponseAttributesAllOf:
      type: object
      properties:
        issued_to,omitempty:
          type: string
          description: The certificate authority that issued the certificate.
        issuer,omitempty:
          type: string
          description: A value assigned by the issuer that is unique to a certificate.
        serial_number,omitempty:
          type: string
          description: The algorithm used to sign the certificate.
        signature_algorithm,omitempty:
          type: string
          description: Time-stamp (GMT) when the certificate will expire. Must be in the future to be used to terminate TLS traffic.
        not_after,omitempty:
          type: string
          format: date-time
          description: Time-stamp (GMT) when the certificate will become valid. Must be in the past to be used to terminate TLS traffic.
        not_before,omitempty:
          type: string
          format: date-time
          description: A recommendation from Fastly indicating the key associated with this certificate is in need of rotation.
        replace,omitempty:
          type: boolean
    IamUserGroupAllOf:
      type: object
      properties:
        id,omitempty:
          type: string
          description: Name of the user group.
        name,omitempty:
          type: string
          description: Description of the user group.
        description,omitempty:
          type: string
          description: Number of invitations added to the user group.
        invitations_count,omitempty:
          type: integer
          format: int32
          description: Number of users added to the user group.
        users_count,omitempty:
          type: integer
          format: int32
          description: Number of roles added to the user group.
        roles_count,omitempty:
          type: integer
          format: int32
    ConditionResponse:
      type: object
      properties:
        comment,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: Name of the condition. Required.
        name,omitempty:
          type: string
          description: A numeric string. Priority determines execution order. Lower numbers execute first.
        priority,omitempty:
          type: string
          description: A conditional expression in VCL used to determine if the condition is met.
        statement,omitempty:
          type: string
        service_id,omitempty:
          type: string
          description: A numeric string that represents the service version.
        version,omitempty:
          type: string
          description: Type of the condition. Required.
        type,omitempty:
          type: string
          description: Date and time in ISO 8601 format.
        created_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        deleted_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        updated_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
    DdosProtectionNotFound:
      type: object
      properties:
        title,omitempty:
          type: string
        status,omitempty:
          type: integer
          format: int32
    DdosProtectionNotAuthenticated:
      type: object
      properties:
        title,omitempty:
          type: string
        status,omitempty:
          type: integer
          format: int32
    NgwafResponseBodyGetAllServices:
      type: object
      properties:
        product,omitempty:
          $ref: '#/components/schemas/NgwafResponseProductProduct'
        customer,omitempty:
          $ref: '#/components/schemas/BotManagementResponseCustomerCustomer'
          description: A list of services with the Next-Gen WAF enabled.
        _links,omitempty:
          $ref: '#/components/schemas/NgwafResponseLinksGetAllServicesLinks'
    HistoricalDomainsMetaFilters:
      type: object
      properties:
        region,omitempty:
          type: string
        datacenter,omitempty:
          type: string
        domain,omitempty:
          type: string
    DictionaryInfoResponse:
      type: object
      properties:
        last_updated,omitempty:
          type: string
          description: The number of items currently in the dictionary.
        item_count,omitempty:
          type: integer
          format: int32
          description: A hash of all the dictionary content.
        digest,omitempty:
          type: string
    RelationshipTLSDNSRecordsResponseDNSRecordsData:
      type: object
      properties:
        type,omitempty:
          $ref: '#/components/schemas/TypeTLSDNSRecord'
        id,omitempty:
          type: string
    RelationshipMutualAuthentication:
      type: object
      properties:
        mutual_authentication,omitempty:
          $ref: '#/components/schemas/RelationshipMutualAuthenticationMutualAuthentication'
    LoggingDigitaloceanResponse:
      type: object
      properties:
        name,omitempty:
          type: string
          description: Where in the generated VCL the logging call should be placed. If not set, endpoints with `format_version` of 2 are placed in `vcl_log` and those with `format_version` of 1 are placed
            in `vcl_deliver`.
        placement,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: The name of an existing condition in the configured endpoint, or leave blank to always execute.
        response_condition,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: A Fastly [log format string](https://docs.fastly.com/en/guides/custom-log-formats).
        format,omitempty:
          type: string
          description: The version of the custom logging format used for the configured endpoint. The logging call gets placed by default in `vcl_log` if `format_version` is set to `2` and in `vcl_deliver`
            if `format_version` is set to `1`.
        format_version,omitempty:
          type: string
          description: How the message should be formatted.
        message_type,omitempty:
          type: string
          description: A timestamp format
        timestamp_format,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: The codec used for compressing your logs. Valid values are `zstd`, `snappy`, and `gzip`. Specifying both `compression_codec` and `gzip_level` in the same API request will result in
            an error.
        compression_codec,omitempty:
          type: string
          description: How frequently log files are finalized so they can be available for reading (in seconds).
        period,omitempty:
          type: string
          description: The level of gzip encoding when sending logs (default `0`, no compression). Specifying both `compression_codec` and `gzip_level` in the same API request will result in an error.
        gzip_level,omitempty:
          type: string
          description: Date and time in ISO 8601 format.
        created_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        deleted_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        updated_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
        service_id,omitempty:
          type: string
        version,omitempty:
          type: string
          description: The name of the DigitalOcean Space.
        bucket_name,omitempty:
          type: string
          description: Your DigitalOcean Spaces account access key.
        access_key,omitempty:
          type: string
          description: Your DigitalOcean Spaces account secret key.
        secret_key,omitempty:
          type: string
          description: The domain of the DigitalOcean Spaces endpoint.
        domain,omitempty:
          type: string
          description: The path to upload logs to.
        path,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: A PGP public key that Fastly will use to encrypt your log files before writing them to disk.
        public_key,omitempty:
          $ref: '#/components/schemas/NullableString'
    LogExplorerInsightsResponseLinksGetAllServices:
      type: object
      properties:
        _links,omitempty:
          $ref: '#/components/schemas/LogExplorerInsightsResponseLinksGetAllServicesLinks'
    BrotliCompressionResponseBodyGetAllServices:
      type: object
      properties:
        product,omitempty:
          $ref: '#/components/schemas/BrotliCompressionResponseProductProduct'
        customer,omitempty:
          $ref: '#/components/schemas/BotManagementResponseCustomerCustomer'
          description: A list of services with Brotli Compression enabled.
        _links,omitempty:
          $ref: '#/components/schemas/BrotliCompressionResponseLinksGetAllServicesLinks'
    DdosProtectionEvent:
      type: object
      properties:
        created_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        updated_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Unique ID of the event.
        id,omitempty:
          type: string
          description: A human-readable name for the event.
        name,omitempty:
          type: string
          description: Alphanumeric string identifying the customer.
        customer_id,omitempty:
          type: string
          description: Alphanumeric string identifying the service.
        service_id,omitempty:
          type: string
          description: Date and time in ISO 8601 format.
        started_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        ended_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
    StarResponseAllOf:
      type: object
      properties:
        data,omitempty:
          type: object
    RelationshipTLSBulkCertificates:
      type: object
      properties:
        tls_bulk_certificates,omitempty:
          $ref: '#/components/schemas/RelationshipTLSBulkCertificateTLSBulkCertificate'
    SigningKey:
      type: object
      properties:
        signing_key,omitempty:
          type: string
    WebsocketsResponseBodyGetAllServices:
      type: object
      properties:
        product,omitempty:
          $ref: '#/components/schemas/WebsocketsResponseProductProduct'
        customer,omitempty:
          $ref: '#/components/schemas/BotManagementResponseCustomerCustomer'
          description: A list of services with Websockets enabled.
        _links,omitempty:
          $ref: '#/components/schemas/WebsocketsResponseLinksGetAllServicesLinks'
    GenericTokenError:
      type: object
      properties:
        msg,omitempty:
          type: string
    RelationshipTLSPrivateKey:
      type: object
      properties:
        tls_private_key,omitempty:
          $ref: '#/components/schemas/RelationshipTLSPrivateKeyTLSPrivateKey'
    TLSActivationData:
      type: object
      properties:
        type,omitempty:
          $ref: '#/components/schemas/TypeTLSActivation'
        relationships,omitempty:
          $ref: '#/components/schemas/RelationshipsForTLSActivation'
    DdosProtectionResponseConfiguration:
      type: object
      properties:
        configuration,omitempty:
          $ref: '#/components/schemas/DdosProtectionResponseConfigurationConfiguration'
    OriginInspectorEntry:
      type: object
      properties:
        dimensions,omitempty:
          $ref: '#/components/schemas/OriginInspectorDimensions'
          description: 'An array of values representing the metric values at each point in time. Note that this dataset is sparse: only the keys with non-zero values will be included in the record.'
    BulkUpdateACLEntryAllOf:
      type: object
      properties:
        op,omitempty:
          type: string
        id,omitempty:
          type: string
    ObjectStorageResponseLinksLinks:
      type: object
      properties:
        self,omitempty:
          type: string
    TLSBulkCertificateResponseData:
      type: object
      properties:
        type,omitempty:
          $ref: '#/components/schemas/TypeTLSBulkCertificate'
        attributes,omitempty:
          $ref: '#/components/schemas/TLSBulkCertificateResponseAttributes'
        relationships,omitempty:
          $ref: '#/components/schemas/RelationshipsForTLSBulkCertificate'
        id,omitempty:
          type: string
    InlineObject1:
      type: object
      properties:
        vcl:
          type: string
      required:
      - vcl
    ServiceAuthorizationDataRelationships:
      type: object
      properties:
        service,omitempty:
          $ref: '#/components/schemas/RelationshipMemberService'
        user,omitempty:
          $ref: '#/components/schemas/ServiceAuthorizationDataRelationshipsUser'
    GetLogInsightsResponse:
      type: object
      properties:
        meta,omitempty:
          $ref: '#/components/schemas/LogInsightsMeta'
    CreateDashboardRequest:
      type: object
      properties:
        name:
          type: string
          description: A short description of the dashboard
        description,omitempty:
          type: string
          description: A list of [dashboard items](#dashboard-item).
    SchemasVersion:
      type: object
      properties:
        active,omitempty:
          type: boolean
          description: A freeform descriptive note.
        comment,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: Unused at this time.
        deployed,omitempty:
          type: boolean
          description: Whether this version is locked or not. Objects can not be added or edited on locked versions.
        locked,omitempty:
          type: boolean
          description: The number of this version.
        number,omitempty:
          type: integer
          format: int32
          description: Unused at this time.
        staging,omitempty:
          type: boolean
          description: Unused at this time.
        testing,omitempty:
          type: boolean
    FanoutResponseBodyGetAllServices:
      type: object
      properties:
        product,omitempty:
          $ref: '#/components/schemas/FanoutResponseProductProduct'
        customer,omitempty:
          $ref: '#/components/schemas/BotManagementResponseCustomerCustomer'
          description: A list of services with Fanout enabled.
        _links,omitempty:
          $ref: '#/components/schemas/FanoutResponseLinksGetAllServicesLinks'
    IncludedWithTLSConfigurationItem:
      type: object
      properties:
        id,omitempty:
          type: string
        type,omitempty:
          $ref: '#/components/schemas/TypeTLSDNSRecord'
        attributes,omitempty:
          $ref: '#/components/schemas/TLSDNSRecord'
    ServiceAuthorization:
      type: object
      properties:
        data,omitempty:
          $ref: '#/components/schemas/ServiceAuthorizationData'
    UpdateDashboardRequest:
      type: object
      properties:
        name,omitempty:
          type: string
          description: A short description of the dashboard
        description,omitempty:
          type: string
          description: A list of [dashboard items](#dashboard-item).
    TLSConfigurationResponseAttributes:
      type: object
      properties:
        created_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        deleted_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        updated_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Signifies whether or not Fastly will use this configuration as a default when creating a new [TLS Activation](https://www.fastly.com/documentation/reference/api/tls/custom-certs/activations/).
        default,omitempty:
          type: boolean
          description: HTTP protocols available on your configuration.
        bulk,omitempty:
          type: boolean
    LogInsights:
      type: object
      properties:
        dimensions,omitempty:
          $ref: '#/components/schemas/LogInsightsDimensions'
        dimension_attributes,omitempty:
          $ref: '#/components/schemas/LogInsightsDimensionAttributes'
        values,omitempty:
          $ref: '#/components/schemas/LogInsightsValues'
    PoolAdditional:
      type: object
      properties:
        name,omitempty:
          type: string
          description: Selected POP to serve as a shield for the servers. Defaults to `null` meaning no origin shielding if not set. Refer to the [POPs API endpoint](https://www.fastly.com/documentation/reference/api/utils/pops/)
            to get a list of available POPs used for shielding.
        shield,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: Condition which, if met, will select this configuration during a request. Optional.
        request_condition,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: List of OpenSSL ciphers (see the [openssl.org manpages](https://www.openssl.org/docs/man1.1.1/man1/ciphers.html) for details). Optional.
        tls_ciphers,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: SNI hostname. Optional.
        tls_sni_hostname,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: Minimum allowed TLS version on connections to this server. Optional.
        min_tls_version,omitempty:
          $ref: '#/components/schemas/NullableInt32'
          description: Maximum allowed TLS version on connections to this server. Optional.
        max_tls_version,omitempty:
          $ref: '#/components/schemas/NullableInt32'
          description: Name of the healthcheck to use with this pool. Can be empty and could be reused across multiple backend and pools.
        healthcheck,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: A freeform descriptive note.
        comment,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: What type of load balance group to use.
        type,omitempty:
          type: string
          description: The hostname to [override the Host header](https://docs.fastly.com/en/guides/specifying-an-override-host). Defaults to `null` meaning no override of the Host header will occur. This
            setting can also be added to a Server definition. If the field is set on a Server definition it will override the Pool setting.
        override_host,omitempty:
          $ref: '#/components/schemas/NullableString'
    RelationshipTLSActivations:
      type: object
      properties:
        tls_activations,omitempty:
          $ref: '#/components/schemas/RelationshipTLSActivationTLSActivation'
    ValuesStatusCodes:
      type: object
      properties:
        url,omitempty:
          type: string
          description: The URL accounts for this percentage of the status code in this dimension.
        rate_per_status,omitempty:
          type: number
          format: float
          description: The rate at which the status code in this dimension occurs for this URL.
        rate_per_url,omitempty:
          type: number
          format: float
    DomainInspectorEntry:
      type: object
      properties:
        dimensions,omitempty:
          $ref: '#/components/schemas/DomainInspectorEntryDimensions'
          description: 'An array of values representing the metric values at each point in time. Note that this dataset is sparse: only the keys with non-zero values will be included in the record.'
    SnippetResponseAllOf:
      type: object
      properties:
        service_id,omitempty:
          type: string
          description: String representing the number identifying a version of the service.
        version,omitempty:
          type: string
        id,omitempty:
          type: string
    FanoutResponseLinks:
      type: object
      properties:
        _links,omitempty:
          $ref: '#/components/schemas/FanoutResponseLinksLinks'
    DimensionBrowser:
      type: object
      properties:
        browser,omitempty:
          type: string
    MtdInvoiceResponse:
      type: object
      properties:
        customer_id,omitempty:
          type: string
          description: An alphanumeric string identifying the invoice.
        invoice_id,omitempty:
          type: string
          description: The date and time (in ISO 8601 format) for the initiation point of a billing cycle, signifying the start of charges for a service or subscription.
        billing_start_date,omitempty:
          type: string
          format: date-time
          description: The date and time (in ISO 8601 format) for the termination point of a billing cycle, signifying the end of charges for a service or subscription.
        billing_end_date,omitempty:
          type: string
          format: date-time
          description: The total billable amount for invoiced services charged within a single month.
        monthly_transaction_amount,omitempty:
          type: string
    ValidatorResultDataAttributesMessages:
      type: object
      properties:
        type:
          type: string
        warning:
          type: boolean
        message:
          type: string
      required:
      - type
      - warning
      - message
    LoggingLogentriesResponse:
      type: object
      properties:
        name,omitempty:
          type: string
          description: Where in the generated VCL the logging call should be placed. If not set, endpoints with `format_version` of 2 are placed in `vcl_log` and those with `format_version` of 1 are placed
            in `vcl_deliver`.
        placement,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: The name of an existing condition in the configured endpoint, or leave blank to always execute.
        response_condition,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: A Fastly [log format string](https://docs.fastly.com/en/guides/custom-log-formats).
        format,omitempty:
          type: string
          description: The version of the custom logging format used for the configured endpoint. The logging call gets placed by default in `vcl_log` if `format_version` is set to `2` and in `vcl_deliver`
            if `format_version` is set to `1`.
        format_version,omitempty:
          type: string
          description: The port number.
        port,omitempty:
          type: integer
          format: int32
          description: Use token based authentication.
        token,omitempty:
          type: string
        use_tls,omitempty:
          $ref: '#/components/schemas/LoggingUseTLSString'
          description: The region to which to stream logs.
        region,omitempty:
          type: string
          description: Date and time in ISO 8601 format.
        created_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        deleted_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        updated_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
        service_id,omitempty:
          type: string
        version,omitempty:
          type: string
    DdosProtectionResponseConfigurationConfiguration:
      type: object
      properties:
        mode,omitempty:
          type: string
    ServiceAuthorizationDataRelationshipsUserData:
      type: object
      properties:
        type,omitempty:
          $ref: '#/components/schemas/TypeUser'
        id,omitempty:
          type: string
    TLSSubscriptionResponseData:
      type: object
      properties:
        id,omitempty:
          type: string
        attributes,omitempty:
          $ref: '#/components/schemas/TLSSubscriptionResponseAttributes'
    DictionaryResponseAllOf:
      type: object
      properties:
        id,omitempty:
          type: string
    DirectorBackend:
      type: object
      properties:
        created_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        deleted_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        updated_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
        service_id,omitempty:
          type: string
        version,omitempty:
          type: integer
          format: int32
          description: The name of the backend.
        backend_name,omitempty:
          type: string
          description: Name for the Director.
        director,omitempty:
          type: string
    TLSConfigurationData:
      type: object
      properties:
        type,omitempty:
          $ref: '#/components/schemas/TypeTLSConfiguration'
        attributes,omitempty:
          $ref: '#/components/schemas/TLSConfigurationDataAttributes'
        relationships,omitempty:
          $ref: '#/components/schemas/RelationshipsForTLSConfiguration'
    DomainInspectorResponseService:
      type: object
      properties:
        service,omitempty:
          $ref: '#/components/schemas/BotManagementResponseServiceService'
    LoggingHTTPSAdditional:
      type: object
      properties:
        url,omitempty:
          type: string
          description: The maximum number of logs sent in one request. Defaults `0` (10k).
        request_max_entries,omitempty:
          type: integer
          format: int32
          description: The maximum number of bytes sent in one request. Defaults `0` (100MB).
        request_max_bytes,omitempty:
          type: integer
          format: int32
          description: Content type of the header sent with the request.
        content_type,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: Name of the custom header sent with the request.
        header_name,omitempty:
          $ref: '#/components/schemas/NullableString'
        message_type,omitempty:
          $ref: '#/components/schemas/LoggingMessageType'
          description: Value of the custom header sent with the request.
        header_value,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: HTTP method used for request.
        method,omitempty:
          type: string
          description: Enforces valid JSON formatting for log entries.
        json_format,omitempty:
          type: string
          description: A Fastly [log format string](https://docs.fastly.com/en/guides/custom-log-formats).
        format,omitempty:
          type: string
    FanoutResponseProductProduct:
      type: object
      properties:
        id,omitempty:
          type: string
          description: Name of the object
        object,omitempty:
          type: string
    BrotliCompressionResponseLinksGetAllServices:
      type: object
      properties:
        _links,omitempty:
          $ref: '#/components/schemas/BrotliCompressionResponseLinksGetAllServicesLinks'
    DimensionCountry:
      type: object
      properties:
        country,omitempty:
          type: string
    PaginationCursorMeta:
      type: object
      properties:
        next_cursor,omitempty:
          type: string
          description: Maximum number of results returned.
        limit,omitempty:
          type: integer
          format: int32
    BulkUpdateConfigStoreItemAllOf:
      type: object
      properties:
        op,omitempty:
          type: string
    LoggingTLSCommon:
      type: object
      properties:
        tls_ca_cert,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: The client certificate used to make authenticated requests. Must be in PEM format.
        tls_client_cert,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: The client private key used to make authenticated requests. Must be in PEM format.
        tls_client_key,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: The hostname to verify the server's certificate. This should be one of the Subject Alternative Name (SAN) fields for the certificate. Common Names (CN) are not supported.
        tls_hostname,omitempty:
          $ref: '#/components/schemas/NullableString'
    PoolResponse:
      type: object
      properties:
        tls_ca_cert,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: The client certificate used to make authenticated requests. Must be in PEM format.
        tls_client_cert,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: The client private key used to make authenticated requests. Must be in PEM format.
        tls_client_key,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: The hostname used to verify a server's certificate. It can either be the Common Name (CN) or a Subject Alternative Name (SAN).
        tls_cert_hostname,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: Whether to use TLS.
        use_tls,omitempty:
          type: string
          description: Date and time in ISO 8601 format.
        created_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        deleted_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        updated_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
        service_id,omitempty:
          type: string
        version,omitempty:
          type: string
          description: Name for the Pool.
        name,omitempty:
          type: string
          description: Selected POP to serve as a shield for the servers. Defaults to `null` meaning no origin shielding if not set. Refer to the [POPs API endpoint](https://www.fastly.com/documentation/reference/api/utils/pops/)
            to get a list of available POPs used for shielding.
        shield,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: Condition which, if met, will select this configuration during a request. Optional.
        request_condition,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: List of OpenSSL ciphers (see the [openssl.org manpages](https://www.openssl.org/docs/man1.1.1/man1/ciphers.html) for details). Optional.
        tls_ciphers,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: SNI hostname. Optional.
        tls_sni_hostname,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: Minimum allowed TLS version on connections to this server. Optional.
        min_tls_version,omitempty:
          $ref: '#/components/schemas/NullableInt32'
          description: Maximum allowed TLS version on connections to this server. Optional.
        max_tls_version,omitempty:
          $ref: '#/components/schemas/NullableInt32'
          description: Name of the healthcheck to use with this pool. Can be empty and could be reused across multiple backend and pools.
        healthcheck,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: A freeform descriptive note.
        comment,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: What type of load balance group to use.
        type,omitempty:
          type: string
          description: The hostname to [override the Host header](https://docs.fastly.com/en/guides/specifying-an-override-host). Defaults to `null` meaning no override of the Host header will occur. This
            setting can also be added to a Server definition. If the field is set on a Server definition it will override the Pool setting.
        override_host,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: Maximum duration in milliseconds that Fastly will wait while receiving no data on a download from a backend. If exceeded, the response received so far will be considered complete
            and the fetch will end. May be set at runtime using `bereq.between_bytes_timeout`.
        between_bytes_timeout,omitempty:
          type: string
          description: How long to wait for a timeout in milliseconds.
        connect_timeout,omitempty:
          type: string
          description: How long to wait for the first byte in milliseconds.
        first_byte_timeout,omitempty:
          type: string
          description: Maximum number of connections.
        max_conn_default,omitempty:
          type: string
          description: Be strict on checking TLS certs.
        tls_check_cert,omitempty:
          $ref: '#/components/schemas/NullableString'
        id,omitempty:
          type: string
          description: Percentage of capacity (`0-100`) that needs to be operationally available for a pool to be considered up.
        quorum,omitempty:
          type: string
    InvitationResponseAllOf:
      type: object
      properties:
        data,omitempty:
          $ref: '#/components/schemas/InvitationResponseData'
    LogExplorerInsightsResponseBodyEnable:
      type: object
      properties:
        product,omitempty:
          $ref: '#/components/schemas/LogExplorerInsightsResponseProductProduct'
        service,omitempty:
          $ref: '#/components/schemas/BotManagementResponseServiceService'
        _links,omitempty:
          $ref: '#/components/schemas/LogExplorerInsightsResponseLinksLinks'
    BillingAddressResponse:
      type: object
      properties:
        data,omitempty:
          $ref: '#/components/schemas/BillingAddressResponseData'
    PackageResponse:
      type: object
      properties:
        metadata,omitempty:
          $ref: '#/components/schemas/PackageMetadata'
        service_id,omitempty:
          type: string
        version,omitempty:
          type: integer
          format: int32
          description: Date and time in ISO 8601 format.
        created_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        deleted_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        updated_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Alphanumeric string identifying the package.
        id,omitempty:
          type: string
    BillingAddressRequestData:
      type: object
      properties:
        type,omitempty:
          $ref: '#/components/schemas/TypeBillingAddress'
        attributes,omitempty:
          $ref: '#/components/schemas/BillingAddressAttributes'
    ValuesRequests:
      type: object
      properties:
        request_percentage,omitempty:
          type: number
          format: float
    OriginInspectorResponseLinksGetAllServicesLinks:
      type: object
      properties:
        self,omitempty:
          type: string
    SchemasContactResponse:
      type: object
      properties:
        user_id,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: The type of contact.
        contact_type,omitempty:
          type: string
          description: The name of this contact, when user_id is not provided.
        name,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: The email of this contact, when a user_id is not provided.
        email,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: The phone number for this contact. Required for primary, technical, and security contact types.
        phone,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: The alphanumeric string representing the customer for this customer contact.
        customer_id,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: Date and time in ISO 8601 format.
        created_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        deleted_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        updated_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
        id,omitempty:
          type: string
    ValuesDdos:
      type: object
      properties:
        ddos_action_limit_streams_connections,omitempty:
          type: integer
          format: int32
          description: For HTTP/2, the number of requests made on a connection for which the limit-streams action was taken. The limit-streams action caps the allowed number of concurrent streams in a connection.
        ddos_action_limit_streams_requests,omitempty:
          type: integer
          format: int32
          description: The number of times the tarpit-accept action was taken. The tarpit-accept action adds a delay when accepting future connections.
        ddos_action_tarpit_accept,omitempty:
          type: integer
          format: int32
          description: The number of times the tarpit action was taken. The tarpit action delays writing the response to the client.
        ddos_action_tarpit,omitempty:
          type: integer
          format: int32
          description: The number of times the close action was taken. The close action aborts the connection as soon as possible. The close action takes effect either right after accept, right after the
            client hello, or right after the response was sent.
        ddos_action_close,omitempty:
          type: integer
          format: int32
          description: The number of times the blackhole action was taken. The blackhole action quietly closes a TCP connection without sending a reset. The blackhole action quietly closes a TCP connection
            without notifying its peer (all TCP state is dropped).
        ddos_action_blackhole,omitempty:
          type: integer
          format: int32
    NgwafResponseProductProduct:
      type: object
      properties:
        id,omitempty:
          type: string
          description: Name of the object
        object,omitempty:
          type: string
    ValuesBrowser:
      type: object
      properties:
        browser_version,omitempty:
          type: string
          description: The percentage of requests by this version of the browser specified in the dimension.
        rate,omitempty:
          type: number
          format: float
    InlineResponse2004:
      type: object
      properties:
        expires_at,omitempty:
          type: string
    HistoricalRegionsResponse:
      type: object
      properties:
        status,omitempty:
          type: string
        meta,omitempty:
          $ref: '#/components/schemas/HistoricalMeta'
          description: If the query was not successful, this will provide a string that explains why.
        msg,omitempty:
          $ref: '#/components/schemas/NullableString'
    TLSDNSRecord:
      type: object
      properties:
        region,omitempty:
          type: string
          description: The type of the DNS record. `A` specifies an IPv4 address to be used for an A record to be used for apex domains (e.g., `example.com`). `AAAA` specifies an IPv6 address for use in
            an A record for apex domains. `CNAME` specifies the hostname to be used for a CNAME record for subdomains or wildcard domains (e.g., `www.example.com` or `*.example.com`).
        record_type,omitempty:
          type: string
    RelationshipTLSCertificates:
      type: object
      properties:
        tls_certificates,omitempty:
          $ref: '#/components/schemas/RelationshipTLSCertificatesTLSCertificates'
    LoggingBigqueryResponse:
      type: object
      properties:
        name,omitempty:
          type: string
          description: Where in the generated VCL the logging call should be placed. If not set, endpoints with `format_version` of 2 are placed in `vcl_log` and those with `format_version` of 1 are placed
            in `vcl_deliver`.
        placement,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: The name of an existing condition in the configured endpoint, or leave blank to always execute.
        response_condition,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: A Fastly [log format string](https://docs.fastly.com/en/guides/custom-log-formats). Must produce JSON that matches the schema of your BigQuery table.
        format,omitempty:
          type: string
          description: The version of the custom logging format used for the configured endpoint. The logging call gets placed by default in `vcl_log` if `format_version` is set to `2` and in `vcl_deliver`
            if `format_version` is set to `1`.
        format_version,omitempty:
          type: string
          description: Your Google Cloud Platform service account email address. The `client_email` field in your service account authentication JSON. Not required if `account_name` is specified.
        user,omitempty:
          type: string
          description: Your Google Cloud Platform account secret key. The `private_key` field in your service account authentication JSON. Not required if `account_name` is specified.
        secret_key,omitempty:
          type: string
          description: The name of the Google Cloud Platform service account associated with the target log collection service. Not required if `user` and `secret_key` are provided.
        account_name,omitempty:
          type: string
          description: Your BigQuery dataset.
        dataset,omitempty:
          type: string
          description: Your BigQuery table.
        table,omitempty:
          type: string
          description: BigQuery table name suffix template. Optional.
        template_suffix,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: Your Google Cloud Platform project ID. Required
        project_id,omitempty:
          type: string
          description: Date and time in ISO 8601 format.
        created_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        deleted_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        updated_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
        service_id,omitempty:
          type: string
        version,omitempty:
          type: string
    DdosProtectionErrorErrors:
      type: object
      properties:
        field,omitempty:
          type: string
        error,omitempty:
          type: string
    TLSPrivateKeyResponseAttributesAllOf:
      type: object
      properties:
        name,omitempty:
          type: string
          description: The key length used to generate the private key.
        key_length,omitempty:
          type: integer
          format: int32
          description: The algorithm used to generate the private key. Must be `RSA`.
        key_type,omitempty:
          type: string
          description: A recommendation from Fastly to replace this private key and all associated certificates.
        replace,omitempty:
          type: boolean
          description: Useful for safely identifying the key.
        public_key_sha1,omitempty:
          type: string
    TLSActivation:
      type: object
      properties:
        data,omitempty:
          $ref: '#/components/schemas/TLSActivationData'
    BotManagementResponseLinks:
      type: object
      properties:
        _links,omitempty:
          $ref: '#/components/schemas/BotManagementResponseLinksLinks'
    RelationshipServices:
      type: object
      properties:
        services,omitempty:
          $ref: '#/components/schemas/RelationshipServicesServices'
    Vcl:
      type: object
      properties:
        content,omitempty:
          type: string
          description: Set to `true` when this is the main VCL, otherwise `false`.
        main,omitempty:
          type: boolean
          description: The name of this VCL.
        name,omitempty:
          type: string
    TLSSubscriptionsResponse:
      type: object
      properties:
        links,omitempty:
          $ref: '#/components/schemas/PaginationLinks'
        meta,omitempty:
          $ref: '#/components/schemas/PaginationMeta'
    RelationshipMemberTLSBulkCertificate:
      type: object
      properties:
        type,omitempty:
          $ref: '#/components/schemas/TypeTLSBulkCertificate'
        id,omitempty:
          type: string
    RelationshipTLSConfigurationForTLSSubscription:
      type: object
      properties:
        tls_configuration,omitempty:
          $ref: '#/components/schemas/RelationshipTLSConfigurationTLSConfiguration'
    NgwafResponseProduct:
      type: object
      properties:
        product,omitempty:
          $ref: '#/components/schemas/NgwafResponseProductProduct'
    ComputeACLUpdateEntry:
      type: object
      properties:
        op,omitempty:
          type: string
          description: An IP prefix defined in Classless Inter-Domain Routing (CIDR) format, i.e. a valid IP address (v4 or v6) followed by a forward slash (/) and a prefix length (0-32 or 0-128, depending
            on address family).
        prefix,omitempty:
          type: string
          description: The action taken on the IP address, one of \"BLOCK\" or \"ALLOW\". If using the \"delete\" operation, no action should be specified.
        action,omitempty:
          type: string
    ACLResponseAllOf:
      type: object
      properties:
        service_id,omitempty:
          type: string
          description: String representing the number identifying a version of the service.
        version,omitempty:
          type: string
        id,omitempty:
          type: string
    DomainInspectorResponseProductProduct:
      type: object
      properties:
        id,omitempty:
          type: string
          description: Name of the object
        object,omitempty:
          type: string
    InvitationResponseDataAllOf:
      type: object
      properties:
        id,omitempty:
          type: string
        attributes,omitempty:
          $ref: '#/components/schemas/Timestamps'
        relationships,omitempty:
          $ref: '#/components/schemas/RelationshipsForInvitation'
    DimensionAttributesRate:
      type: object
      properties:
        rate,omitempty:
          type: number
          format: float
    Backend:
      type: object
      properties:
        address,omitempty:
          type: string
          description: Whether or not this backend should be automatically load balanced. If true, all backends with this setting that don't have a `request_condition` will be selected based on their `weight`.
        auto_loadbalance,omitempty:
          type: boolean
          description: Maximum duration in milliseconds that Fastly will wait while receiving no data on a download from a backend. If exceeded, the response received so far will be considered complete
            and the fetch will end. May be set at runtime using `bereq.between_bytes_timeout`.
        between_bytes_timeout,omitempty:
          type: integer
          format: int32
          description: Unused.
        client_cert,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: A freeform descriptive note.
        comment,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: Maximum duration in milliseconds to wait for a connection to this backend to be established. If exceeded, the connection is aborted and a synthetic `503` response will be presented
            instead. May be set at runtime using `bereq.connect_timeout`.
        connect_timeout,omitempty:
          type: integer
          format: int32
          description: Maximum duration in milliseconds to wait for the server response to begin after a TCP connection is established and the request has been sent. If exceeded, the connection is aborted
            and a synthetic `503` response will be presented instead. May be set at runtime using `bereq.first_byte_timeout`.
        first_byte_timeout,omitempty:
          type: integer
          format: int32
          description: The name of the healthcheck to use with this backend.
        healthcheck,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: The hostname of the backend. May be used as an alternative to `address` to set the backend location.
        hostname,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: IPv4 address of the backend. May be used as an alternative to `address` to set the backend location.
        ipv4,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: IPv6 address of the backend. May be used as an alternative to `address` to set the backend location.
        ipv6,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: How long in seconds to keep a persistent connection to the backend between requests. By default, Varnish keeps connections open as long as it can.
        keepalive_time,omitempty:
          $ref: '#/components/schemas/NullableInt32'
          description: Maximum number of concurrent connections this backend will accept.
        max_conn,omitempty:
          type: integer
          format: int32
          description: Maximum allowed TLS version on SSL connections to this backend. If your backend server is not able to negotiate a connection meeting this constraint, a synthetic `503` error response
            will be generated.
        max_tls_version,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: Minimum allowed TLS version on SSL connections to this backend. If your backend server is not able to negotiate a connection meeting this constraint, a synthetic `503` error response
            will be generated.
        min_tls_version,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: The name of the backend.
        name,omitempty:
          type: string
          description: If set, will replace the client-supplied HTTP `Host` header on connections to this backend. Applied after VCL has been processed, so this setting will take precedence over changing
            `bereq.http.Host` in VCL.
        override_host,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: Port on which the backend server is listening for connections from Fastly. Setting `port` to 80 or 443 will also set `use_ssl` automatically (to false and true respectively), unless
            explicitly overridden by setting `use_ssl` in the same request.
        port,omitempty:
          type: integer
          format: int32
          description: Prefer IPv6 connections for DNS hostname lookups.
        prefer_ipv6,omitempty:
          type: boolean
          description: Name of a Condition, which if satisfied, will select this backend during a request. If set, will override any `auto_loadbalance` setting. By default, the first backend added to a
            service is selected for all requests.
        request_condition,omitempty:
          type: string
          description: Value that when shared across backends will enable those backends to share the same health check.
        share_key,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: Identifier of the POP to use as a [shield](https://docs.fastly.com/en/guides/shielding).
        shield,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: CA certificate attached to origin.
        ssl_ca_cert,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: Overrides `ssl_hostname`, but only for cert verification. Does not affect SNI at all.
        ssl_cert_hostname,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: Be strict on checking SSL certs.
        ssl_check_cert,omitempty:
          $ref: '#/components/schemas/NullableBool'
          description: List of [OpenSSL ciphers](https://www.openssl.org/docs/man1.1.1/man1/ciphers.html) to support for connections to this origin. If your backend server is not able to negotiate a connection
            meeting this constraint, a synthetic `503` error response will be generated.
        ssl_ciphers,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: Client certificate attached to origin.
        ssl_client_cert,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: Client key attached to origin.
        ssl_client_key,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: Use `ssl_cert_hostname` and `ssl_sni_hostname` to configure certificate validation.
        ssl_hostname,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: Overrides `ssl_hostname`, but only for SNI in the handshake. Does not affect cert validation at all.
        ssl_sni_hostname,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: Whether to enable TCP keepalives for backend connections. Varnish defaults to using keepalives if this is unspecified.
        tcp_keepalive_enable,omitempty:
          $ref: '#/components/schemas/NullableBool'
          description: Interval in seconds between subsequent keepalive probes.
        tcp_keepalive_interval,omitempty:
          $ref: '#/components/schemas/NullableInt32'
          description: Number of unacknowledged probes to send before considering the connection dead.
        tcp_keepalive_probes,omitempty:
          $ref: '#/components/schemas/NullableInt32'
          description: Interval in seconds between the last data packet sent and the first keepalive probe.
        tcp_keepalive_time,omitempty:
          $ref: '#/components/schemas/NullableInt32'
          description: Whether or not to require TLS for connections to this backend.
        use_ssl,omitempty:
          type: boolean
          description: Weight used to load balance this backend against others. May be any positive integer. If `auto_loadbalance` is true, the chance of this backend being selected is equal to its own
            weight over the sum of all weights for backends that have `auto_loadbalance` set to true.
        weight,omitempty:
          type: integer
          format: int32
    LoggingGcsResponse:
      type: object
      properties:
        name,omitempty:
          type: string
          description: Where in the generated VCL the logging call should be placed. If not set, endpoints with `format_version` of 2 are placed in `vcl_log` and those with `format_version` of 1 are placed
            in `vcl_deliver`.
        placement,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: The name of an existing condition in the configured endpoint, or leave blank to always execute.
        response_condition,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: A Fastly [log format string](https://docs.fastly.com/en/guides/custom-log-formats).
        format,omitempty:
          type: string
          description: The version of the custom logging format used for the configured endpoint. The logging call gets placed by default in `vcl_log` if `format_version` is set to `2` and in `vcl_deliver`
            if `format_version` is set to `1`.
        format_version,omitempty:
          type: string
          description: How the message should be formatted.
        message_type,omitempty:
          type: string
          description: A timestamp format
        timestamp_format,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: The codec used for compressing your logs. Valid values are `zstd`, `snappy`, and `gzip`. Specifying both `compression_codec` and `gzip_level` in the same API request will result in
            an error.
        compression_codec,omitempty:
          type: string
          description: How frequently log files are finalized so they can be available for reading (in seconds).
        period,omitempty:
          type: string
          description: The level of gzip encoding when sending logs (default `0`, no compression). Specifying both `compression_codec` and `gzip_level` in the same API request will result in an error.
        gzip_level,omitempty:
          type: string
          description: Your Google Cloud Platform service account email address. The `client_email` field in your service account authentication JSON. Not required if `account_name` is specified.
        user,omitempty:
          type: string
          description: Your Google Cloud Platform account secret key. The `private_key` field in your service account authentication JSON. Not required if `account_name` is specified.
        secret_key,omitempty:
          type: string
          description: The name of the Google Cloud Platform service account associated with the target log collection service. Not required if `user` and `secret_key` are provided.
        account_name,omitempty:
          type: string
          description: Date and time in ISO 8601 format.
        created_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        deleted_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        updated_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
        service_id,omitempty:
          type: string
        version,omitempty:
          type: string
          description: The name of the GCS bucket.
        bucket_name,omitempty:
          type: string
        path,omitempty:
          type: string
          description: A PGP public key that Fastly will use to encrypt your log files before writing them to disk.
        public_key,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: Your Google Cloud Platform project ID. Required
        project_id,omitempty:
          type: string
    ACLEntry:
      type: object
      properties:
        negated,omitempty:
          type: integer
          format: int32
          description: A freeform descriptive note.
        comment,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: An IP address.
        ip,omitempty:
          type: string
          description: Number of bits for the subnet mask applied to the IP address. For IPv4 addresses, a value of 32 represents the smallest subnet mask (1 address), 24 represents a class C subnet mask
            (256 addresses), 16 represents a class B subnet mask (65k addresses), and 8 is class A subnet mask (16m addresses). If not provided, no mask is applied.
        subnet,omitempty:
          $ref: '#/components/schemas/NullableInt32'
    MutualAuthenticationResponseAttributes:
      type: object
      properties:
        created_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        deleted_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        updated_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Determines whether Mutual TLS will fail closed (enforced) or fail open.
        enforced,omitempty:
          type: boolean
    OriginInspectorResponseProduct:
      type: object
      properties:
        product,omitempty:
          $ref: '#/components/schemas/OriginInspectorResponseProductProduct'
    IamRole:
      type: object
      properties:
        created_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        updated_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Alphanumeric string identifying the role.
        id,omitempty:
          type: string
          description: The type of the object.
        object,omitempty:
          type: string
          description: Name of the role.
        name,omitempty:
          type: string
          description: Description of the role.
        description,omitempty:
          type: string
          description: This attribute is set to `true` if the role is managed by the customer. It is set to `false` if the role was created by Fastly.
        custom,omitempty:
          type: boolean
          description: Number of permissions assigned to the role.
        permissions_count,omitempty:
          type: integer
          format: int32
    Token:
      type: object
      properties:
        name,omitempty:
          type: string
          description: Space-delimited list of authorization scope.
        scope,omitempty:
          type: string
    LoggingSftpAdditional:
      type: object
      properties:
        password,omitempty:
          type: string
          description: The path to upload logs to.
        path,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: A PGP public key that Fastly will use to encrypt your log files before writing them to disk.
        public_key,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: The SSH private key for the server. If both `password` and `secret_key` are passed, `secret_key` will be used in preference.
        secret_key,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: A list of host keys for all hosts we can connect to over SFTP.
        ssh_known_hosts,omitempty:
          type: string
          description: The username for the server.
        user,omitempty:
          type: string
    SudoRequest:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
        expiry_time,omitempty:
          type: string
    RelationshipTLSBulkCertificate:
      type: object
      properties:
        tls_bulk_certificate,omitempty:
          $ref: '#/components/schemas/RelationshipTLSBulkCertificateTLSBulkCertificate'
    HTTP3AllOf:
      type: object
      properties:
        feature_revision,omitempty:
          type: integer
          format: int32
    IamServiceGroup:
      type: object
      properties:
        created_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        updated_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Alphanumeric string identifying the service group.
        id,omitempty:
          type: string
          description: The type of the object.
        object,omitempty:
          type: string
          description: Name of the service group.
        name,omitempty:
          type: string
          description: Description of the service group.
        description,omitempty:
          type: string
          description: Number of services in the service group.
        services_count,omitempty:
          type: integer
          format: int32
    InvitationData:
      type: object
      properties:
        type,omitempty:
          $ref: '#/components/schemas/TypeInvitation'
        attributes,omitempty:
          $ref: '#/components/schemas/InvitationDataAttributes'
        relationships,omitempty:
          $ref: '#/components/schemas/RelationshipServiceInvitationsCreate'
    ServerResponseAllOf:
      type: object
      properties:
        service_id,omitempty:
          type: string
        id,omitempty:
          type: string
        pool_id,omitempty:
          type: string
    UserResponse:
      type: object
      properties:
        login,omitempty:
          type: string
          description: The real life name of the user.
        name,omitempty:
          type: string
          description: Indicates that the user has limited access to the customer's services.
        limit_services,omitempty:
          type: boolean
          description: Indicates whether the is account is locked for editing or not.
        locked,omitempty:
          $ref: '#/components/schemas/NullableBool'
          description: Indicates if a new password is required at next login.
        require_new_password,omitempty:
          $ref: '#/components/schemas/NullableBool'
        role,omitempty:
          $ref: '#/components/schemas/RoleUser'
          description: Indicates if 2FA is enabled on the user.
        two_factor_auth_enabled,omitempty:
          $ref: '#/components/schemas/NullableBool'
          description: Indicates if 2FA is required by the user's customer account.
        two_factor_setup_required,omitempty:
          type: boolean
          description: Date and time in ISO 8601 format.
        created_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        deleted_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        updated_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
        id,omitempty:
          type: string
          description: The alphanumeric string identifying a email login.
        email_hash,omitempty:
          type: string
        customer_id,omitempty:
          type: string
    ACLEntryResponse:
      type: object
      properties:
        negated,omitempty:
          type: integer
          format: int32
          description: A freeform descriptive note.
        comment,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: An IP address.
        ip,omitempty:
          type: string
          description: Number of bits for the subnet mask applied to the IP address. For IPv4 addresses, a value of 32 represents the smallest subnet mask (1 address), 24 represents a class C subnet mask
            (256 addresses), 16 represents a class B subnet mask (65k addresses), and 8 is class A subnet mask (16m addresses). If not provided, no mask is applied.
        subnet,omitempty:
          $ref: '#/components/schemas/NullableInt32'
          description: Date and time in ISO 8601 format.
        created_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        deleted_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        updated_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
        acl_id,omitempty:
          type: string
        id,omitempty:
          type: string
        service_id,omitempty:
          type: string
    InlineResponse2003:
      type: object
      properties:
        meta,omitempty:
          $ref: '#/components/schemas/PaginationCursorMeta'
    Version:
      type: object
      properties:
        active,omitempty:
          type: boolean
          description: A freeform descriptive note.
        comment,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: Unused at this time.
        deployed,omitempty:
          type: boolean
          description: Whether this version is locked or not. Objects can not be added or edited on locked versions.
        locked,omitempty:
          type: boolean
          description: The number of this version.
        number,omitempty:
          type: integer
          format: int32
          description: Unused at this time.
        staging,omitempty:
          type: boolean
          description: Unused at this time.
        testing,omitempty:
          type: boolean
    Values503Responses:
      type: object
      properties:
        url,omitempty:
          type: string
          description: The rate at which the reason in this dimension occurs among responses to this URL with a 503 status code.
        rate_per_url,omitempty:
          type: number
          format: float
          description: The rate at which 503 status codes are returned for this URL.
        503_rate_per_url,omitempty:
          type: number
          format: float
    DiffResponse:
      type: object
      properties:
        from,omitempty:
          type: integer
          format: int32
          description: The version number being diffed to.
        to,omitempty:
          type: integer
          format: int32
          description: The format the diff is being returned in (`text`, `html` or `html_simple`).
        format,omitempty:
          type: string
          description: The differences between two specified service versions. Returns the full config if the version configurations are identical.
        diff,omitempty:
          type: string
    BotManagementResponseProduct:
      type: object
      properties:
        product,omitempty:
          $ref: '#/components/schemas/BotManagementResponseProductProduct'
    GzipResponse:
      type: object
      properties:
        cache_condition,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: Space-separated list of content types to compress. If you omit this field a default list will be used.
        content_types,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: Space-separated list of file extensions to compress. If you omit this field a default list will be used.
        extensions,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: Name of the gzip configuration.
        name,omitempty:
          type: string
        service_id,omitempty:
          type: string
        version,omitempty:
          type: string
          description: Date and time in ISO 8601 format.
        created_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        deleted_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        updated_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
    ObjectStorageResponseBodyEnable:
      type: object
      properties:
        product,omitempty:
          $ref: '#/components/schemas/ObjectStorageResponseProductProduct'
        customer,omitempty:
          $ref: '#/components/schemas/AiAcceleratorResponseCustomerCustomer'
        _links,omitempty:
          $ref: '#/components/schemas/ObjectStorageResponseLinksLinks'
    RateLimiter:
      type: object
      properties:
        name,omitempty:
          type: string
          description: The name of a Dictionary containing URIs as keys. If not defined or `null`, all origin URIs will be rate limited.
        uri_dictionary_name,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: Array of HTTP methods to apply rate limiting to.
        rps_limit,omitempty:
          type: integer
          format: int32
          description: Number of seconds during which the RPS limit must be exceeded in order to trigger a violation.
        window_size,omitempty:
          type: integer
          format: int32
          description: Array of VCL variables used to generate a counter key to identify a client. Example variables include `req.http.Fastly-Client-IP`, `req.http.User-Agent`, or a custom header like `req.http.API-Key`.
        penalty_box_duration,omitempty:
          type: integer
          format: int32
          description: The action to take when a rate limiter violation is detected.
        action,omitempty:
          type: string
          description: Custom response to be sent when the rate limit is exceeded. Required if `action` is `response`.
        response_object_name,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: Name of the type of logging endpoint to be used when action is `log_only`. The logging endpoint type is used to determine the appropriate log format to use when emitting log entries.
        logger_type,omitempty:
          type: string
          description: Revision number of the rate limiting feature implementation. Defaults to the most recent revision.
        feature_revision,omitempty:
          type: integer
          format: int32
    LoggingDigitaloceanAdditional:
      type: object
      properties:
        bucket_name,omitempty:
          type: string
          description: Your DigitalOcean Spaces account access key.
        access_key,omitempty:
          type: string
          description: Your DigitalOcean Spaces account secret key.
        secret_key,omitempty:
          type: string
          description: The domain of the DigitalOcean Spaces endpoint.
        domain,omitempty:
          type: string
          description: The path to upload logs to.
        path,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: A PGP public key that Fastly will use to encrypt your log files before writing them to disk.
        public_key,omitempty:
          $ref: '#/components/schemas/NullableString'
    ModelError:
      type: object
      properties:
        type,omitempty:
          type: string
        title,omitempty:
          type: string
        code,omitempty:
          type: string
        status,omitempty:
          type: string
    NgwafResponseLinksGetAllServices:
      type: object
      properties:
        _links,omitempty:
          $ref: '#/components/schemas/NgwafResponseLinksGetAllServicesLinks'
    TLSActivationsResponse:
      type: object
      properties:
        links,omitempty:
          $ref: '#/components/schemas/PaginationLinks'
        meta,omitempty:
          $ref: '#/components/schemas/PaginationMeta'
    TimestampsNoDelete:
      type: object
      properties:
        created_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        updated_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
    KvStoreUpsertBatch:
      type: object
      properties:
        key:
          type: string
          description: Indicates that the item should be deleted after the specified number of seconds have elapsed. Deletion is not immediate but will occur within 24 hours of the requested expiration.
        time_to_live_sec,omitempty:
          type: integer
          format: int32
          description: An arbitrary data field which can contain up to 2000 bytes of data.
        metadata,omitempty:
          type: string
          description: If set to true, the new value for the item will not be immediately visible to other users of the KV store; they will receive the existing (stale) value while the platform updates
            cached copies. Setting this to true ensures that other users of the KV store will receive responses to 'get' operations for this item quickly, although they will be slightly out of date.
        background_fetch,omitempty:
          type: boolean
          description: Value for the item (in Base64 encoding).
        value:
          type: string
    DimensionDevice:
      type: object
      properties:
        device,omitempty:
          type: string
    ValuesBandwidth:
      type: object
      properties:
        average_bandwidth_bytes,omitempty:
          type: number
          format: float
          description: The total bandwidth percentage for all responses to requests to the URL in the current dimension.
        bandwidth_percentage,omitempty:
          type: number
          format: float
    DashboardItemPropertyVisualization:
      type: object
      properties:
        type:
          type: string
        config:
          $ref: '#/components/schemas/DashboardItemPropertyVisualizationPropertyConfig'
      required:
      - type
      - config
    DomainInspectorMeasurements:
      type: object
      properties:
        edge_requests,omitempty:
          type: integer
          format: int64
          description: Total header bytes delivered from Fastly to the end user.
        edge_resp_header_bytes,omitempty:
          type: integer
          format: int64
          description: Total body bytes delivered from Fastly to the end user.
        edge_resp_body_bytes,omitempty:
          type: integer
          format: int64
          description: Number of 1xx \"Informational\" category status codes delivered.
        status_1xx,omitempty:
          type: integer
          format: int64
          description: Number of 2xx \"Success\" status codes delivered.
        status_2xx,omitempty:
          type: integer
          format: int64
          description: Number of 3xx \"Redirection\" codes delivered.
        status_3xx,omitempty:
          type: integer
          format: int64
          description: Number of 4xx \"Client Error\" codes delivered.
        status_4xx,omitempty:
          type: integer
          format: int64
          description: Number of 5xx \"Server Error\" codes delivered.
        status_5xx,omitempty:
          type: integer
          format: int64
          description: Number of responses delivered with status code 200 (Success).
        status_200,omitempty:
          type: integer
          format: int64
          description: Number of responses delivered with status code 204 (No Content).
        status_204,omitempty:
          type: integer
          format: int64
          description: Number of responses delivered with status code 206 (Partial Content).
        status_206,omitempty:
          type: integer
          format: int64
          description: Number of responses delivered with status code 301 (Moved Permanently).
        status_301,omitempty:
          type: integer
          format: int64
          description: Number of responses delivered with status code 302 (Found).
        status_302,omitempty:
          type: integer
          format: int64
          description: Number of responses delivered with status code 304 (Not Modified).
        status_304,omitempty:
          type: integer
          format: int64
          description: Number of responses delivered with status code 400 (Bad Request).
        status_400,omitempty:
          type: integer
          format: int64
          description: Number of responses delivered with status code 401 (Unauthorized).
        status_401,omitempty:
          type: integer
          format: int64
          description: Number of responses delivered with status code 403 (Forbidden).
        status_403,omitempty:
          type: integer
          format: int64
          description: Number of responses delivered with status code 404 (Not Found).
        status_404,omitempty:
          type: integer
          format: int64
          description: Number of responses delivered with status code 416 (Range Not Satisfiable).
        status_416,omitempty:
          type: integer
          format: int64
          description: Number of responses delivered with status code 429 (Too Many Requests).
        status_429,omitempty:
          type: integer
          format: int64
          description: Number of responses delivered with status code 500 (Internal Server Error).
        status_500,omitempty:
          type: integer
          format: int64
          description: Number of responses delivered with status code 501 (Not Implemented).
        status_501,omitempty:
          type: integer
          format: int64
          description: Number of responses delivered with status code 502 (Bad Gateway).
        status_502,omitempty:
          type: integer
          format: int64
          description: Number of responses delivered with status code 503 (Service Unavailable).
        status_503,omitempty:
          type: integer
          format: int64
          description: Number of responses delivered with status code 504 (Gateway Timeout).
        status_504,omitempty:
          type: integer
          format: int64
          description: Number of responses delivered with status code 505 (HTTP Version Not Supported).
        status_505,omitempty:
          type: integer
          format: int64
          description: Number of responses delivered with status code 530.
        status_530,omitempty:
          type: integer
          format: int64
          description: Number of requests processed.
        requests,omitempty:
          type: integer
          format: int64
          description: Total header bytes delivered.
        resp_header_bytes,omitempty:
          type: integer
          format: int64
          description: Total body bytes delivered.
        resp_body_bytes,omitempty:
          type: integer
          format: int64
          description: Total header bytes sent to origin.
        bereq_header_bytes,omitempty:
          type: integer
          format: int64
          description: Total body bytes sent to origin.
        bereq_body_bytes,omitempty:
          type: integer
          format: int64
          description: Number of requests sent by end users to Fastly that resulted in a hit at the edge.
        edge_hit_requests,omitempty:
          type: integer
          format: int64
          description: Number of requests sent by end users to Fastly that resulted in a miss at the edge.
        edge_miss_requests,omitempty:
          type: integer
          format: int64
          description: Number of requests sent to origin.
        origin_fetches,omitempty:
          type: integer
          format: int64
          description: Total header bytes received from origin.
        origin_fetch_resp_header_bytes,omitempty:
          type: integer
          format: int64
          description: Total body bytes received from origin.
        origin_fetch_resp_body_bytes,omitempty:
          type: integer
          format: int64
          description: Total bytes delivered (`resp_header_bytes` + `resp_body_bytes` + `bereq_header_bytes` + `bereq_body_bytes`).
        bandwidth,omitempty:
          type: integer
          format: int64
          description: Ratio of cache hits to cache misses at the edge, between 0 and 1 (`edge_hit_requests` / (`edge_hit_requests` + `edge_miss_requests`)).
        edge_hit_ratio,omitempty:
          type: number
          format: float
          description: Origin Offload measures the ratio of bytes served to end users that were cached by Fastly, over the bytes served to end users, between 0 and 1. ((`edge_resp_body_bytes` + `edge_resp_header_bytes`)
            - (`origin_fetch_resp_body_bytes` + `origin_fetch_resp_header_bytes`)) / (`edge_resp_body_bytes` + `edge_resp_header_bytes`). Previously, Origin Offload used a different formula. [Learn more](https://www.fastly.com/documentation/reference/changes/2024/06/add-origin_offload-metric).
        origin_offload,omitempty:
          type: number
          format: float
          description: Number of responses received from origin with status code 200 (Success).
        origin_status_200,omitempty:
          type: integer
          format: int64
          description: Number of responses received from origin with status code 204 (No Content).
        origin_status_204,omitempty:
          type: integer
          format: int64
          description: Number of responses received from origin with status code 206 (Partial Content).
        origin_status_206,omitempty:
          type: integer
          format: int64
          description: Number of responses received from origin with status code 301 (Moved Permanently).
        origin_status_301,omitempty:
          type: integer
          format: int64
          description: Number of responses received from origin with status code 302 (Found).
        origin_status_302,omitempty:
          type: integer
          format: int64
          description: Number of responses received from origin with status code 304 (Not Modified).
        origin_status_304,omitempty:
          type: integer
          format: int64
          description: Number of responses received from origin with status code 400 (Bad Request).
        origin_status_400,omitempty:
          type: integer
          format: int64
          description: Number of responses received from origin with status code 401 (Unauthorized).
        origin_status_401,omitempty:
          type: integer
          format: int64
          description: Number of responses received from origin with status code 403 (Forbidden).
        origin_status_403,omitempty:
          type: integer
          format: int64
          description: Number of responses received from origin with status code 404 (Not Found).
        origin_status_404,omitempty:
          type: integer
          format: int64
          description: Number of responses received from origin with status code 416 (Range Not Satisfiable).
        origin_status_416,omitempty:
          type: integer
          format: int64
          description: Number of responses received from origin with status code 429 (Too Many Requests).
        origin_status_429,omitempty:
          type: integer
          format: int64
          description: Number of responses received from origin with status code 500 (Internal Server Error).
        origin_status_500,omitempty:
          type: integer
          format: int64
          description: Number of responses received from origin with status code 501 (Not Implemented).
        origin_status_501,omitempty:
          type: integer
          format: int64
          description: Number of responses received from origin with status code 502 (Bad Gateway).
        origin_status_502,omitempty:
          type: integer
          format: int64
          description: Number of responses received from origin with status code 503 (Service Unavailable).
        origin_status_503,omitempty:
          type: integer
          format: int64
          description: Number of responses received from origin with status code 504 (Gateway Timeout).
        origin_status_504,omitempty:
          type: integer
          format: int64
          description: Number of responses received from origin with status code 505 (HTTP Version Not Supported).
        origin_status_505,omitempty:
          type: integer
          format: int64
          description: Number of responses received from origin with status code 530.
        origin_status_530,omitempty:
          type: integer
          format: int64
          description: Number of \"Informational\" category status codes received from origin.
        origin_status_1xx,omitempty:
          type: integer
          format: int64
          description: Number of \"Success\" status codes received from origin.
        origin_status_2xx,omitempty:
          type: integer
          format: int64
          description: Number of \"Redirection\" codes received from origin.
        origin_status_3xx,omitempty:
          type: integer
          format: int64
          description: Number of \"Client Error\" codes received from origin.
        origin_status_4xx,omitempty:
          type: integer
          format: int64
          description: Number of \"Server Error\" codes received from origin.
        origin_status_5xx,omitempty:
          type: integer
          format: int64
    LoggingKafkaResponse:
      type: object
      properties:
        name,omitempty:
          type: string
          description: Where in the generated VCL the logging call should be placed. If not set, endpoints with `format_version` of 2 are placed in `vcl_log` and those with `format_version` of 1 are placed
            in `vcl_deliver`.
        placement,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: The name of an existing condition in the configured endpoint, or leave blank to always execute.
        response_condition,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: A Fastly [log format string](https://docs.fastly.com/en/guides/custom-log-formats).
        format,omitempty:
          type: string
          description: The version of the custom logging format used for the configured endpoint. The logging call gets placed by default in `vcl_log` if `format_version` is set to `2` and in `vcl_deliver`
            if `format_version` is set to `1`.
        format_version,omitempty:
          type: string
          description: A secure certificate to authenticate a server with. Must be in PEM format.
        tls_ca_cert,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: The client certificate used to make authenticated requests. Must be in PEM format.
        tls_client_cert,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: The client private key used to make authenticated requests. Must be in PEM format.
        tls_client_key,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: The hostname to verify the server's certificate. This should be one of the Subject Alternative Name (SAN) fields for the certificate. Common Names (CN) are not supported.
        tls_hostname,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: Date and time in ISO 8601 format.
        created_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        deleted_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        updated_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
        service_id,omitempty:
          type: string
        version,omitempty:
          type: string
          description: The Kafka topic to send logs to. Required.
        topic,omitempty:
          type: string
          description: A comma-separated list of IP addresses or hostnames of Kafka brokers. Required.
        brokers,omitempty:
          type: string
          description: The codec used for compression of your logs.
        compression_codec,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: The number of acknowledgements a leader must receive before a write is considered successful.
        required_acks,omitempty:
          type: integer
          format: int32
          description: The maximum number of bytes sent in one request. Defaults `0` (no limit).
        request_max_bytes,omitempty:
          type: integer
          format: int32
          description: Enables parsing of key=value tuples from the beginning of a logline, turning them into [record headers](https://cwiki.apache.org/confluence/display/KAFKA/KIP-82+-+Add+Record+Headers).
        parse_log_keyvals,omitempty:
          type: boolean
          description: SASL authentication method.
        auth_method,omitempty:
          type: string
          description: SASL user.
        user,omitempty:
          type: string
          description: SASL password.
        password,omitempty:
          type: string
        use_tls,omitempty:
          $ref: '#/components/schemas/LoggingUseTLSString'
    ComputeACLLookup:
      type: object
      properties:
        prefix,omitempty:
          type: string
          description: One of \"ALLOW\" or \"BLOCK\".
        action,omitempty:
          type: string
    TLSBulkCertificateResponseAttributesAllOf:
      type: object
      properties:
        not_after,omitempty:
          type: string
          format: date-time
          description: Time-stamp (GMT) when the certificate will become valid. Must be in the past to be used to terminate TLS traffic.
        not_before,omitempty:
          type: string
          format: date-time
          description: A recommendation from Fastly indicating the key associated with this certificate is in need of rotation.
        replace,omitempty:
          type: boolean
    BillingAddressResponseData:
      type: object
      properties:
        id,omitempty:
          type: string
        attributes,omitempty:
          $ref: '#/components/schemas/BillingAddressAttributes'
        type,omitempty:
          $ref: '#/components/schemas/TypeBillingAddress'
        relationships,omitempty:
          $ref: '#/components/schemas/RelationshipCustomer'
    ConfigStore:
      type: object
      properties:
        name,omitempty:
          type: string
    ServiceAuthorizationResponseData:
      type: object
      properties:
        type,omitempty:
          $ref: '#/components/schemas/TypeServiceAuthorization'
        attributes,omitempty:
          $ref: '#/components/schemas/Timestamps'
        relationships,omitempty:
          $ref: '#/components/schemas/ServiceAuthorizationDataRelationships'
        id,omitempty:
          type: string
    RelationshipServiceInvitationsCreate:
      type: object
      properties:
        service_invitations,omitempty:
          $ref: '#/components/schemas/RelationshipServiceInvitationsCreateServiceInvitations'
    WebsocketsResponseService:
      type: object
      properties:
        service,omitempty:
          $ref: '#/components/schemas/BotManagementResponseServiceService'
    BotManagementResponseCustomer:
      type: object
      properties:
        customer,omitempty:
          $ref: '#/components/schemas/BotManagementResponseCustomerCustomer'
    DdosProtectionResponseProductProduct:
      type: object
      properties:
        id,omitempty:
          type: string
          description: Name of the object
        object,omitempty:
          type: string
    SudoResponse:
      type: object
      properties:
        expiry_time,omitempty:
          type: string
          format: date-time
    BillingAddressAttributes:
      type: object
      properties:
        address_1,omitempty:
          type: string
          description: The second address line.
        address_2,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: The city name.
        city,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: ISO 3166-1 two-letter country code.
        country,omitempty:
          type: string
          description: Other locality.
        locality,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: Postal code (ZIP code for US addresses).
        postal_code,omitempty:
          type: string
          description: The state or province name.
        state,omitempty:
          $ref: '#/components/schemas/NullableString'
        customer_id,omitempty:
          type: string
    ResponseObject:
      type: object
      properties:
        cache_condition,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: The content to deliver for the response object, can be empty.
        content,omitempty:
          type: string
          description: The MIME type of the content, can be empty.
        content_type,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: Name for the request settings.
        name,omitempty:
          type: string
          description: The HTTP status code.
        status,omitempty:
          type: string
          description: The HTTP response.
        response,omitempty:
          type: string
          description: Condition which, if met, will select this configuration during a request. Optional.
        request_condition,omitempty:
          $ref: '#/components/schemas/NullableString'
    RealtimeEntryAggregated:
      type: object
      properties:
        requests,omitempty:
          type: integer
          format: int64
          description: Number of log lines sent (alias for `log`).
        logging,omitempty:
          type: integer
          format: int64
          description: Number of log lines sent.
        log,omitempty:
          type: integer
          format: int64
          description: Total header bytes delivered (edge_resp_header_bytes + shield_resp_header_bytes).
        resp_header_bytes,omitempty:
          type: integer
          format: int64
          description: Total header bytes delivered (alias for resp_header_bytes).
        header_size,omitempty:
          type: integer
          format: int64
          description: Total body bytes delivered (edge_resp_body_bytes + shield_resp_body_bytes).
        resp_body_bytes,omitempty:
          type: integer
          format: int64
          description: Total body bytes delivered (alias for resp_body_bytes).
        body_size,omitempty:
          type: integer
          format: int64
          description: Number of cache hits.
        hits,omitempty:
          type: integer
          format: int64
          description: Number of cache misses.
        miss,omitempty:
          type: integer
          format: int64
          description: Number of requests that passed through the CDN without being cached.
        pass,omitempty:
          type: integer
          format: int64
          description: Number of requests that returned a synthetic response (i.e., response objects created with the `synthetic` VCL statement).
        synth,omitempty:
          type: integer
          format: int64
          description: Number of cache errors.
        errors,omitempty:
          type: integer
          format: int64
          description: Total amount of time spent processing cache hits (in seconds).
        hits_time,omitempty:
          type: number
          format: float
          description: Total amount of time spent processing cache misses (in seconds).
        miss_time,omitempty:
          type: number
          format: float
          description: A histogram. The value in each bucket is the number of requests to the origin whose responses arrived during the time period represented by the bucket. The key of each bucket represents
            the upper bound (in response time) of that bucket. The buckets vary in width and cover the time periods 0-10ms (in 1ms increments), 10-250ms (in 10ms increments), 250-1,000ms (in 50ms increments),
            1,000-3,000ms (in 100ms increments), 3,000-10,000ms (in 500 ms increments), 10,000-20,000ms (in 1,000ms increments), 20,000-60,000ms (in 5,000ms increments), and 60,000ms through infinity (in
            a single bucket).
        compute_requests,omitempty:
          type: integer
          format: int64
          description: The amount of active CPU time used to process your requests (in milliseconds).
        compute_execution_time_ms,omitempty:
          type: number
          format: float
          description: The amount of RAM used for your service by Fastly (in bytes).
        compute_ram_used,omitempty:
          type: integer
          format: int64
          description: The total, actual amount of time used to process your requests, including active CPU time (in milliseconds).
        compute_request_time_ms,omitempty:
          type: number
          format: float
          description: The total amount of request processing time you will be billed for, measured in 50 millisecond increments.
        compute_request_time_billed_ms,omitempty:
          type: number
          format: float
          description: Number of requests from edge to the shield POP.
        shield,omitempty:
          type: integer
          format: int64
          description: Number of requests that were received over IPv6.
        ipv6,omitempty:
          type: integer
          format: int64
          description: Number of responses that came from the Fastly Image Optimizer service. If the service receives 10 requests for an image, this stat will be 10 regardless of how many times the image
            was transformed.
        imgopto,omitempty:
          type: integer
          format: int64
          description: Number of responses that came from the Fastly Image Optimizer service via a shield.
        imgopto_shield,omitempty:
          type: integer
          format: int64
          description: Number of transforms performed by the Fastly Image Optimizer service.
        imgopto_transforms,omitempty:
          type: integer
          format: int64
          description: Number of responses that came from the Fastly On-the-Fly Packaging service for video-on-demand.
        otfp,omitempty:
          type: integer
          format: int64
          description: Number of responses that came from the Fastly On-the-Fly Packaging service for video-on-demand via a shield.
        otfp_shield,omitempty:
          type: integer
          format: int64
          description: Number of responses that were manifest files from the Fastly On-the-Fly Packaging service for video-on-demand.
        otfp_manifests,omitempty:
          type: integer
          format: int64
          description: Number of responses with the video segment or video manifest MIME type (i.e., application/x-mpegurl, application/vnd.apple.mpegurl, application/f4m, application/dash+xml, application/vnd.ms-sstr+xml,
            ideo/mp2t, audio/aac, video/f4f, video/x-flv, video/mp4, audio/mp4).
        video,omitempty:
          type: integer
          format: int64
          description: Number of responses with the PCI flag turned on.
        pci,omitempty:
          type: integer
          format: int64
          description: Number of requests received over HTTP/2.
        http2,omitempty:
          type: integer
          format: int64
          description: Number of requests received over HTTP/3.
        http3,omitempty:
          type: integer
          format: int64
          description: Number of restarts performed.
        restarts,omitempty:
          type: integer
          format: int64
          description: Total header bytes received.
        req_header_bytes,omitempty:
          type: integer
          format: int64
          description: Total body bytes received.
        req_body_bytes,omitempty:
          type: integer
          format: int64
          description: Total header bytes sent to origin.
        bereq_header_bytes,omitempty:
          type: integer
          format: int64
          description: Total body bytes sent to origin.
        bereq_body_bytes,omitempty:
          type: integer
          format: int64
          description: Number of requests that triggered a WAF rule and were blocked.
        waf_blocked,omitempty:
          type: integer
          format: int64
          description: Number of requests that triggered a WAF rule and were logged.
        waf_logged,omitempty:
          type: integer
          format: int64
          description: Number of requests that triggered a WAF rule and were passed.
        waf_passed,omitempty:
          type: integer
          format: int64
          description: Total header bytes received from requests that triggered a WAF rule.
        attack_req_header_bytes,omitempty:
          type: integer
          format: int64
          description: Total body bytes received from requests that triggered a WAF rule.
        attack_req_body_bytes,omitempty:
          type: integer
          format: int64
          description: Total bytes delivered for requests that triggered a WAF rule and returned a synthetic response.
        attack_resp_synth_bytes,omitempty:
          type: integer
          format: int64
          description: Total header bytes received from requests that triggered a WAF rule that was logged.
        attack_logged_req_header_bytes,omitempty:
          type: integer
          format: int64
          description: Total body bytes received from requests that triggered a WAF rule that was logged.
        attack_logged_req_body_bytes,omitempty:
          type: integer
          format: int64
          description: Total header bytes received from requests that triggered a WAF rule that was blocked.
        attack_blocked_req_header_bytes,omitempty:
          type: integer
          format: int64
          description: Total body bytes received from requests that triggered a WAF rule that was blocked.
        attack_blocked_req_body_bytes,omitempty:
          type: integer
          format: int64
          description: Total header bytes received from requests that triggered a WAF rule that was passed.
        attack_passed_req_header_bytes,omitempty:
          type: integer
          format: int64
          description: Total body bytes received from requests that triggered a WAF rule that was passed.
        attack_passed_req_body_bytes,omitempty:
          type: integer
          format: int64
          description: Total header bytes delivered via a shield.
        shield_resp_header_bytes,omitempty:
          type: integer
          format: int64
          description: Total body bytes delivered via a shield.
        shield_resp_body_bytes,omitempty:
          type: integer
          format: int64
          description: Total header bytes delivered from the Fastly On-the-Fly Packaging service for video-on-demand.
        otfp_resp_header_bytes,omitempty:
          type: integer
          format: int64
          description: Total body bytes delivered from the Fastly On-the-Fly Packaging service for video-on-demand.
        otfp_resp_body_bytes,omitempty:
          type: integer
          format: int64
          description: Total header bytes delivered via a shield for the Fastly On-the-Fly Packaging service for video-on-demand.
        otfp_shield_resp_header_bytes,omitempty:
          type: integer
          format: int64
          description: Total body bytes delivered via a shield for the Fastly On-the-Fly Packaging service for video-on-demand.
        otfp_shield_resp_body_bytes,omitempty:
          type: integer
          format: int64
          description: Total amount of time spent delivering a response via a shield from the Fastly On-the-Fly Packaging service for video-on-demand (in seconds).
        otfp_shield_time,omitempty:
          type: number
          format: float
          description: Total amount of time spent delivering a response from the Fastly On-the-Fly Packaging service for video-on-demand (in seconds).
        otfp_deliver_time,omitempty:
          type: number
          format: float
          description: Total header bytes delivered from the Fastly Image Optimizer service, including shield traffic.
        imgopto_resp_header_bytes,omitempty:
          type: integer
          format: int64
          description: Total body bytes delivered from the Fastly Image Optimizer service, including shield traffic.
        imgopto_resp_body_bytes,omitempty:
          type: integer
          format: int64
          description: Total header bytes delivered via a shield from the Fastly Image Optimizer service.
        imgopto_shield_resp_header_bytes,omitempty:
          type: integer
          format: int64
          description: Total body bytes delivered via a shield from the Fastly Image Optimizer service.
        imgopto_shield_resp_body_bytes,omitempty:
          type: integer
          format: int64
          description: Number of \"Informational\" category status codes delivered.
        status_1xx,omitempty:
          type: integer
          format: int64
          description: Number of \"Success\" status codes delivered.
        status_2xx,omitempty:
          type: integer
          format: int64
          description: Number of \"Redirection\" codes delivered.
        status_3xx,omitempty:
          type: integer
          format: int64
          description: Number of \"Client Error\" codes delivered.
        status_4xx,omitempty:
          type: integer
          format: int64
          description: Number of \"Server Error\" codes delivered.
        status_5xx,omitempty:
          type: integer
          format: int64
          description: Number of responses sent with status code 200 (Success).
        status_200,omitempty:
          type: integer
          format: int64
          description: Number of responses sent with status code 204 (No Content).
        status_204,omitempty:
          type: integer
          format: int64
          description: Number of responses sent with status code 206 (Partial Content).
        status_206,omitempty:
          type: integer
          format: int64
          description: Number of responses sent with status code 301 (Moved Permanently).
        status_301,omitempty:
          type: integer
          format: int64
          description: Number of responses sent with status code 302 (Found).
        status_302,omitempty:
          type: integer
          format: int64
          description: Number of responses sent with status code 304 (Not Modified).
        status_304,omitempty:
          type: integer
          format: int64
          description: Number of responses sent with status code 400 (Bad Request).
        status_400,omitempty:
          type: integer
          format: int64
          description: Number of responses sent with status code 401 (Unauthorized).
        status_401,omitempty:
          type: integer
          format: int64
          description: Number of responses sent with status code 403 (Forbidden).
        status_403,omitempty:
          type: integer
          format: int64
          description: Number of responses sent with status code 404 (Not Found).
        status_404,omitempty:
          type: integer
          format: int64
          description: Number of responses sent with status code 406 (Not Acceptable).
        status_406,omitempty:
          type: integer
          format: int64
          description: Number of responses sent with status code 416 (Range Not Satisfiable).
        status_416,omitempty:
          type: integer
          format: int64
          description: Number of responses sent with status code 429 (Too Many Requests).
        status_429,omitempty:
          type: integer
          format: int64
          description: Number of responses sent with status code 500 (Internal Server Error).
        status_500,omitempty:
          type: integer
          format: int64
          description: Number of responses sent with status code 501 (Not Implemented).
        status_501,omitempty:
          type: integer
          format: int64
          description: Number of responses sent with status code 502 (Bad Gateway).
        status_502,omitempty:
          type: integer
          format: int64
          description: Number of responses sent with status code 503 (Service Unavailable).
        status_503,omitempty:
          type: integer
          format: int64
          description: Number of responses sent with status code 504 (Gateway Timeout).
        status_504,omitempty:
          type: integer
          format: int64
          description: Number of responses sent with status code 505 (HTTP Version Not Supported).
        status_505,omitempty:
          type: integer
          format: int64
          description: Number of responses sent with status code 530.
        status_530,omitempty:
          type: integer
          format: int64
          description: Number of requests that were designated uncachable.
        uncacheable,omitempty:
          type: integer
          format: int64
          description: Total amount of time spent processing cache passes (in seconds).
        pass_time,omitempty:
          type: number
          format: float
          description: Number of requests that were received over TLS.
        tls,omitempty:
          type: integer
          format: int64
          description: Number of requests received over TLS 1.0.
        tls_v10,omitempty:
          type: integer
          format: int64
          description: Number of requests received over TLS 1.1.
        tls_v11,omitempty:
          type: integer
          format: int64
          description: Number of requests received over TLS 1.2.
        tls_v12,omitempty:
          type: integer
          format: int64
          description: Number of requests received over TLS 1.3.
        tls_v13,omitempty:
          type: integer
          format: int64
          description: Number of objects served that were under 1KB in size.
        object_size_1k,omitempty:
          type: integer
          format: int64
          description: Number of objects served that were between 1KB and 10KB in size.
        object_size_10k,omitempty:
          type: integer
          format: int64
          description: Number of objects served that were between 10KB and 100KB in size.
        object_size_100k,omitempty:
          type: integer
          format: int64
          description: Number of objects served that were between 100KB and 1MB in size.
        object_size_1m,omitempty:
          type: integer
          format: int64
          description: Number of objects served that were between 1MB and 10MB in size.
        object_size_10m,omitempty:
          type: integer
          format: int64
          description: Number of objects served that were between 10MB and 100MB in size.
        object_size_100m,omitempty:
          type: integer
          format: int64
          description: Number of objects served that were between 100MB and 1GB in size.
        object_size_1g,omitempty:
          type: integer
          format: int64
          description: Number of objects served that were larger than 1GB in size.
        object_size_other,omitempty:
          type: integer
          format: int64
          description: Time spent inside the `vcl_recv` Varnish subroutine (in nanoseconds).
        recv_sub_time,omitempty:
          type: number
          format: float
          description: Number of executions of the `vcl_recv` Varnish subroutine.
        recv_sub_count,omitempty:
          type: integer
          format: int64
          description: Time spent inside the `vcl_hash` Varnish subroutine (in nanoseconds).
        hash_sub_time,omitempty:
          type: number
          format: float
          description: Number of executions of the `vcl_hash` Varnish subroutine.
        hash_sub_count,omitempty:
          type: integer
          format: int64
          description: Time spent inside the `vcl_miss` Varnish subroutine (in nanoseconds).
        miss_sub_time,omitempty:
          type: number
          format: float
          description: Number of executions of the `vcl_miss` Varnish subroutine.
        miss_sub_count,omitempty:
          type: integer
          format: int64
          description: Time spent inside the `vcl_fetch` Varnish subroutine (in nanoseconds).
        fetch_sub_time,omitempty:
          type: number
          format: float
          description: Number of executions of the `vcl_fetch` Varnish subroutine.
        fetch_sub_count,omitempty:
          type: integer
          format: int64
          description: Time spent inside the `vcl_pass` Varnish subroutine (in nanoseconds).
        pass_sub_time,omitempty:
          type: number
          format: float
          description: Number of executions of the `vcl_pass` Varnish subroutine.
        pass_sub_count,omitempty:
          type: integer
          format: int64
          description: Time spent inside the `vcl_pipe` Varnish subroutine (in nanoseconds).
        pipe_sub_time,omitempty:
          type: number
          format: float
          description: Number of executions of the `vcl_pipe` Varnish subroutine.
        pipe_sub_count,omitempty:
          type: integer
          format: int64
          description: Time spent inside the `vcl_deliver` Varnish subroutine (in nanoseconds).
        deliver_sub_time,omitempty:
          type: number
          format: float
          description: Number of executions of the `vcl_deliver` Varnish subroutine.
        deliver_sub_count,omitempty:
          type: integer
          format: int64
          description: Time spent inside the `vcl_error` Varnish subroutine (in nanoseconds).
        error_sub_time,omitempty:
          type: number
          format: float
          description: Number of executions of the `vcl_error` Varnish subroutine.
        error_sub_count,omitempty:
          type: integer
          format: int64
          description: Time spent inside the `vcl_hit` Varnish subroutine (in nanoseconds).
        hit_sub_time,omitempty:
          type: number
          format: float
          description: Number of executions of the `vcl_hit` Varnish subroutine.
        hit_sub_count,omitempty:
          type: integer
          format: int64
          description: Time spent inside the `vcl_prehash` Varnish subroutine (in nanoseconds).
        prehash_sub_time,omitempty:
          type: number
          format: float
          description: Number of executions of the `vcl_prehash` Varnish subroutine.
        prehash_sub_count,omitempty:
          type: integer
          format: int64
          description: Time spent inside the `vcl_predeliver` Varnish subroutine (in nanoseconds).
        predeliver_sub_time,omitempty:
          type: number
          format: float
          description: Number of executions of the `vcl_predeliver` Varnish subroutine.
        predeliver_sub_count,omitempty:
          type: integer
          format: int64
          description: Total body bytes delivered for cache hits.
        hit_resp_body_bytes,omitempty:
          type: integer
          format: int64
          description: Total body bytes delivered for cache misses.
        miss_resp_body_bytes,omitempty:
          type: integer
          format: int64
          description: Total body bytes delivered for cache passes.
        pass_resp_body_bytes,omitempty:
          type: integer
          format: int64
          description: Total header bytes received by the Compute platform.
        compute_req_header_bytes,omitempty:
          type: integer
          format: int64
          description: Total body bytes received by the Compute platform.
        compute_req_body_bytes,omitempty:
          type: integer
          format: int64
          description: Total header bytes sent from Compute to end user.
        compute_resp_header_bytes,omitempty:
          type: integer
          format: int64
          description: Total body bytes sent from Compute to end user.
        compute_resp_body_bytes,omitempty:
          type: integer
          format: int64
          description: Number of video responses that came from the Fastly Image Optimizer service.
        imgvideo,omitempty:
          type: integer
          format: int64
          description: Number of video frames that came from the Fastly Image Optimizer service. A video frame is an individual image within a sequence of video.
        imgvideo_frames,omitempty:
          type: integer
          format: int64
          description: Total header bytes of video delivered from the Fastly Image Optimizer service.
        imgvideo_resp_header_bytes,omitempty:
          type: integer
          format: int64
          description: Total body bytes of video delivered from the Fastly Image Optimizer service.
        imgvideo_resp_body_bytes,omitempty:
          type: integer
          format: int64
          description: Number of video responses delivered via a shield that came from the Fastly Image Optimizer service.
        imgvideo_shield,omitempty:
          type: integer
          format: int64
          description: Number of video frames delivered via a shield that came from the Fastly Image Optimizer service. A video frame is an individual image within a sequence of video.
        imgvideo_shield_frames,omitempty:
          type: integer
          format: int64
          description: Total header bytes of video delivered via a shield from the Fastly Image Optimizer service.
        imgvideo_shield_resp_header_bytes,omitempty:
          type: integer
          format: int64
          description: Total body bytes of video delivered via a shield from the Fastly Image Optimizer service.
        imgvideo_shield_resp_body_bytes,omitempty:
          type: integer
          format: int64
          description: Total log bytes sent.
        log_bytes,omitempty:
          type: integer
          format: int64
          description: Number of requests sent by end users to Fastly.
        edge_requests,omitempty:
          type: integer
          format: int64
          description: Total header bytes delivered from Fastly to the end user.
        edge_resp_header_bytes,omitempty:
          type: integer
          format: int64
          description: Total body bytes delivered from Fastly to the end user.
        edge_resp_body_bytes,omitempty:
          type: integer
          format: int64
          description: Number of responses received from origin with a `304` status code in response to an `If-Modified-Since` or `If-None-Match` request. Under regular scenarios, a revalidation will imply
            a cache hit. However, if using Fastly Image Optimizer or segmented caching this may result in a cache miss.
        origin_revalidations,omitempty:
          type: integer
          format: int64
          description: Number of requests sent to origin.
        origin_fetches,omitempty:
          type: integer
          format: int64
          description: Total request header bytes sent to origin.
        origin_fetch_header_bytes,omitempty:
          type: integer
          format: int64
          description: Total request body bytes sent to origin.
        origin_fetch_body_bytes,omitempty:
          type: integer
          format: int64
          description: Total header bytes received from origin.
        origin_fetch_resp_header_bytes,omitempty:
          type: integer
          format: int64
          description: Total body bytes received from origin.
        origin_fetch_resp_body_bytes,omitempty:
          type: integer
          format: int64
          description: Number of responses received from origin with a `304` status code, in response to an `If-Modified-Since` or `If-None-Match` request to a shield. Under regular scenarios, a revalidation
            will imply a cache hit. However, if using segmented caching this may result in a cache miss.
        shield_revalidations,omitempty:
          type: integer
          format: int64
          description: Number of requests made from one Fastly POP to another, as part of shielding.
        shield_fetches,omitempty:
          type: integer
          format: int64
          description: Total request header bytes sent to a shield.
        shield_fetch_header_bytes,omitempty:
          type: integer
          format: int64
          description: Total request body bytes sent to a shield.
        shield_fetch_body_bytes,omitempty:
          type: integer
          format: int64
          description: Total response header bytes sent from a shield to the edge.
        shield_fetch_resp_header_bytes,omitempty:
          type: integer
          format: int64
          description: Total response body bytes sent from a shield to the edge.
        shield_fetch_resp_body_bytes,omitempty:
          type: integer
          format: int64
          description: Number of `Range` requests to origin for segments of resources when using segmented caching.
        segblock_origin_fetches,omitempty:
          type: integer
          format: int64
          description: Number of `Range` requests to a shield for segments of resources when using segmented caching.
        segblock_shield_fetches,omitempty:
          type: integer
          format: int64
          description: Number of \"Informational\" category status codes delivered by the Compute platform.
        compute_resp_status_1xx,omitempty:
          type: integer
          format: int64
          description: Number of \"Success\" category status codes delivered by the Compute platform.
        compute_resp_status_2xx,omitempty:
          type: integer
          format: int64
          description: Number of \"Redirection\" category status codes delivered by the Compute platform.
        compute_resp_status_3xx,omitempty:
          type: integer
          format: int64
          description: Number of \"Client Error\" category status codes delivered by the Compute platform.
        compute_resp_status_4xx,omitempty:
          type: integer
          format: int64
          description: Number of \"Server Error\" category status codes delivered by the Compute platform.
        compute_resp_status_5xx,omitempty:
          type: integer
          format: int64
          description: Number of requests sent by end users to Fastly that resulted in a hit at the edge.
        edge_hit_requests,omitempty:
          type: integer
          format: int64
          description: Number of requests sent by end users to Fastly that resulted in a miss at the edge.
        edge_miss_requests,omitempty:
          type: integer
          format: int64
          description: Total header bytes sent to backends (origins) by the Compute platform.
        compute_bereq_header_bytes,omitempty:
          type: integer
          format: int64
          description: Total body bytes sent to backends (origins) by the Compute platform.
        compute_bereq_body_bytes,omitempty:
          type: integer
          format: int64
          description: Total header bytes received from backends (origins) by the Compute platform.
        compute_beresp_header_bytes,omitempty:
          type: integer
          format: int64
          description: Total body bytes received from backends (origins) by the Compute platform.
        compute_beresp_body_bytes,omitempty:
          type: integer
          format: int64
          description: The total number of completed requests made to backends (origins) that returned cacheable content.
        origin_cache_fetches,omitempty:
          type: integer
          format: int64
          description: The total number of completed requests made to shields that returned cacheable content.
        shield_cache_fetches,omitempty:
          type: integer
          format: int64
          description: Number of backend requests started.
        compute_bereqs,omitempty:
          type: integer
          format: int64
          description: Number of backend request errors, including timeouts.
        compute_bereq_errors,omitempty:
          type: integer
          format: int64
          description: Number of times a guest exceeded its resource limit, includes heap, stack, globals, and code execution timeout.
        compute_resource_limit_exceeded,omitempty:
          type: integer
          format: int64
          description: Number of times a guest exceeded its heap limit.
        compute_heap_limit_exceeded,omitempty:
          type: integer
          format: int64
          description: Number of times a guest exceeded its stack limit.
        compute_stack_limit_exceeded,omitempty:
          type: integer
          format: int64
          description: Number of times a guest exceeded its globals limit.
        compute_globals_limit_exceeded,omitempty:
          type: integer
          format: int64
          description: Number of times a service experienced a guest code error.
        compute_guest_errors,omitempty:
          type: integer
          format: int64
          description: Number of times a service experienced a guest runtime error.
        compute_runtime_errors,omitempty:
          type: integer
          format: int64
          description: Body bytes delivered for edge hits.
        edge_hit_resp_body_bytes,omitempty:
          type: integer
          format: int64
          description: Header bytes delivered for edge hits.
        edge_hit_resp_header_bytes,omitempty:
          type: integer
          format: int64
          description: Body bytes delivered for edge misses.
        edge_miss_resp_body_bytes,omitempty:
          type: integer
          format: int64
          description: Header bytes delivered for edge misses.
        edge_miss_resp_header_bytes,omitempty:
          type: integer
          format: int64
          description: Body bytes received from origin for cacheable content.
        origin_cache_fetch_resp_body_bytes,omitempty:
          type: integer
          format: int64
          description: Header bytes received from an origin for cacheable content.
        origin_cache_fetch_resp_header_bytes,omitempty:
          type: integer
          format: int64
          description: Number of requests that resulted in a hit at a shield.
        shield_hit_requests,omitempty:
          type: integer
          format: int64
          description: Number of requests that resulted in a miss at a shield.
        shield_miss_requests,omitempty:
          type: integer
          format: int64
          description: Header bytes delivered for shield hits.
        shield_hit_resp_header_bytes,omitempty:
          type: integer
          format: int64
          description: Body bytes delivered for shield hits.
        shield_hit_resp_body_bytes,omitempty:
          type: integer
          format: int64
          description: Header bytes delivered for shield misses.
        shield_miss_resp_header_bytes,omitempty:
          type: integer
          format: int64
          description: Body bytes delivered for shield misses.
        shield_miss_resp_body_bytes,omitempty:
          type: integer
          format: int64
          description: Total header bytes received from end users over passthrough WebSocket connections.
        websocket_req_header_bytes,omitempty:
          type: integer
          format: int64
          description: Total message content bytes received from end users over passthrough WebSocket connections.
        websocket_req_body_bytes,omitempty:
          type: integer
          format: int64
          description: Total header bytes sent to end users over passthrough WebSocket connections.
        websocket_resp_header_bytes,omitempty:
          type: integer
          format: int64
          description: Total header bytes sent to backends over passthrough WebSocket connections.
        websocket_bereq_header_bytes,omitempty:
          type: integer
          format: int64
          description: Total message content bytes sent to backends over passthrough WebSocket connections.
        websocket_bereq_body_bytes,omitempty:
          type: integer
          format: int64
          description: Total header bytes received from backends over passthrough WebSocket connections.
        websocket_beresp_header_bytes,omitempty:
          type: integer
          format: int64
          description: Total message content bytes received from backends over passthrough WebSocket connections.
        websocket_beresp_body_bytes,omitempty:
          type: integer
          format: int64
          description: Total duration of passthrough WebSocket connections with end users.
        websocket_conn_time_ms,omitempty:
          type: integer
          format: int64
          description: Total message content bytes sent to end users over passthrough WebSocket connections.
        websocket_resp_body_bytes,omitempty:
          type: integer
          format: int64
          description: Total published messages received from the publish API endpoint.
        fanout_recv_publishes,omitempty:
          type: integer
          format: int64
          description: Total published messages sent to end users.
        fanout_send_publishes,omitempty:
          type: integer
          format: int64
          description: The total number of class a operations for the KV store.
        kv_store_class_a_operations,omitempty:
          type: integer
          format: int64
          description: The total number of class b operations for the KV store.
        kv_store_class_b_operations,omitempty:
          type: integer
          format: int64
          description: Use kv_store_class_a_operations.
        object_store_class_a_operations,omitempty:
          type: integer
          format: int64
          description: Use kv_store_class_b_operations.
        object_store_class_b_operations,omitempty:
          type: integer
          format: int64
          description: Total header bytes received from end users over Fanout connections.
        fanout_req_header_bytes,omitempty:
          type: integer
          format: int64
          description: Total body or message content bytes received from end users over Fanout connections.
        fanout_req_body_bytes,omitempty:
          type: integer
          format: int64
          description: Total header bytes sent to end users over Fanout connections.
        fanout_resp_header_bytes,omitempty:
          type: integer
          format: int64
          description: Total body or message content bytes sent to end users over Fanout connections, excluding published message content.
        fanout_resp_body_bytes,omitempty:
          type: integer
          format: int64
          description: Total header bytes sent to backends over Fanout connections.
        fanout_bereq_header_bytes,omitempty:
          type: integer
          format: int64
          description: Total body or message content bytes sent to backends over Fanout connections.
        fanout_bereq_body_bytes,omitempty:
          type: integer
          format: int64
          description: Total header bytes received from backends over Fanout connections.
        fanout_beresp_header_bytes,omitempty:
          type: integer
          format: int64
          description: Total body or message content bytes received from backends over Fanout connections.
        fanout_beresp_body_bytes,omitempty:
          type: integer
          format: int64
          description: Total duration of Fanout connections with end users.
        fanout_conn_time_ms,omitempty:
          type: integer
          format: int64
          description: For HTTP/2, the number of connections the limit-streams action was applied to. The limit-streams action caps the allowed number of concurrent streams in a connection.
        ddos_action_limit_streams_connections,omitempty:
          type: integer
          format: int64
          description: For HTTP/2, the number of requests made on a connection for which the limit-streams action was taken. The limit-streams action caps the allowed number of concurrent streams in a connection.
        ddos_action_limit_streams_requests,omitempty:
          type: integer
          format: int64
          description: The number of times the tarpit-accept action was taken. The tarpit-accept action adds a delay when accepting future connections.
        ddos_action_tarpit_accept,omitempty:
          type: integer
          format: int64
          description: The number of times the tarpit action was taken. The tarpit action delays writing the response to the client.
        ddos_action_tarpit,omitempty:
          type: integer
          format: int64
          description: The number of times the close action was taken. The close action aborts the connection as soon as possible. The close action takes effect either right after accept, right after the
            client hello, or right after the response was sent.
        ddos_action_close,omitempty:
          type: integer
          format: int64
          description: The number of times the blackhole action was taken. The blackhole action quietly closes a TCP connection without sending a reset. The blackhole action quietly closes a TCP connection
            without notifying its peer (all TCP state is dropped).
        ddos_action_blackhole,omitempty:
          type: integer
          format: int64
          description: The number of challenge-start tokens created.
        bot_challenge_starts,omitempty:
          type: integer
          format: int64
          description: The number of challenge-complete tokens that passed validation.
        bot_challenge_complete_tokens_passed,omitempty:
          type: integer
          format: int64
          description: The number of challenge-complete tokens that failed validation.
        bot_challenge_complete_tokens_failed,omitempty:
          type: integer
          format: int64
          description: The number of challenge-complete tokens checked.
        bot_challenge_complete_tokens_checked,omitempty:
          type: integer
          format: int64
          description: The number of challenge-complete tokens not checked because the feature was disabled.
        bot_challenge_complete_tokens_disabled,omitempty:
          type: integer
          format: int64
          description: The number of challenges issued. For example, the issuance of a CAPTCHA challenge.
        bot_challenges_issued,omitempty:
          type: integer
          format: int64
          description: The number of successful challenge solutions processed. For example, a correct CAPTCHA solution.
        bot_challenges_succeeded,omitempty:
          type: integer
          format: int64
          description: The number of failed challenge solutions processed. For example, an incorrect CAPTCHA solution.
        bot_challenges_failed,omitempty:
          type: integer
          format: int64
          description: The number of challenge-complete tokens issued. For example, issuing a challenge-complete token after a series of CAPTCHA challenges ending in success.
        bot_challenge_complete_tokens_issued,omitempty:
          type: integer
          format: int64
          description: The number of times the downgrade action was taken. The downgrade action restricts the client to http1.
        ddos_action_downgrade,omitempty:
          type: integer
          format: int64
          description: The number of connections the downgrade action was applied to. The downgrade action restricts the connection to http1.
        ddos_action_downgraded_connections,omitempty:
          type: integer
          format: int64
          description: Number of cache hits for a VCL service.
        all_hit_requests,omitempty:
          type: integer
          format: int64
          description: Number of cache misses for a VCL service.
        all_miss_requests,omitempty:
          type: integer
          format: int64
          description: Number of requests that passed through the CDN without being cached for a VCL service.
        all_pass_requests,omitempty:
          type: integer
          format: int64
          description: Number of cache errors for a VCL service.
        all_error_requests,omitempty:
          type: integer
          format: int64
          description: Number of requests that returned a synthetic response (i.e., response objects created with the `synthetic` VCL statement) for a VCL service.
        all_synth_requests,omitempty:
          type: integer
          format: int64
          description: Number of requests sent by end users to Fastly that resulted in a hit at the edge for a VCL service.
        all_edge_hit_requests,omitempty:
          type: integer
          format: int64
          description: Number of requests sent by end users to Fastly that resulted in a miss at the edge for a VCL service.
        all_edge_miss_requests,omitempty:
          type: integer
          format: int64
          description: Number of \"Informational\" category status codes delivered for all sources.
        all_status_1xx,omitempty:
          type: integer
          format: int64
          description: Number of \"Success\" status codes delivered for all sources.
        all_status_2xx,omitempty:
          type: integer
          format: int64
          description: Number of \"Redirection\" codes delivered for all sources.
        all_status_3xx,omitempty:
          type: integer
          format: int64
          description: Number of \"Client Error\" codes delivered for all sources.
        all_status_4xx,omitempty:
          type: integer
          format: int64
          description: Number of \"Server Error\" codes delivered for all sources.
        all_status_5xx,omitempty:
          type: integer
          format: int64
          description: Origin Offload measures the ratio of bytes served to end users that were cached by Fastly, over the bytes served to end users, between 0 and 1. ((`edge_resp_body_bytes` + `edge_resp_header_bytes`)
            - (`origin_fetch_resp_body_bytes` + `origin_fetch_resp_header_bytes`)) / (`edge_resp_body_bytes` + `edge_resp_header_bytes`).
        origin_offload,omitempty:
          type: number
          format: float
          description: Number of requests where Fastly responded with 400 due to the request being a GET or HEAD request containing a body.
        request_denied_get_head_body,omitempty:
          type: integer
          format: int64
          description: Number of requests classified as a DDoS attack against a customer origin or service.
        ddos_protection_requests_detect_count,omitempty:
          type: integer
          format: int64
          description: Number of requests classified as a DDoS attack against a customer origin or service that were mitigated by the Fastly platform.
        ddos_protection_requests_mitigate_count,omitempty:
          type: integer
          format: int64
          description: Number of requests analyzed for DDoS attacks against a customer origin or service, but with no DDoS detected.
        ddos_protection_requests_allow_count,omitempty:
          type: integer
          format: int64
          description: A count of the number of Class A Object Storage operations.
        object_storage_class_a_operations_count,omitempty:
          type: integer
          format: int64
          description: A count of the number of Class B Object Storage operations.
        object_storage_class_b_operations_count,omitempty:
          type: integer
          format: int64
          description: Number of requests received by AI Accelerator.
        aia_requests,omitempty:
          type: integer
          format: int64
          description: Number of \"Informational\" category status codes received from AI provider.
        aia_status_1xx,omitempty:
          type: integer
          format: int64
          description: Number of \"Success\" status codes received from AI provider.
        aia_status_2xx,omitempty:
          type: integer
          format: int64
          description: Number of \"Redirection\" received from AI provider.
        aia_status_3xx,omitempty:
          type: integer
          format: int64
          description: Number of \"Client Error\" received from AI provider.
        aia_status_4xx,omitempty:
          type: integer
          format: int64
          description: Number of \"Server Error\" received from AI provider.
        aia_status_5xx,omitempty:
          type: integer
          format: int64
          description: The usage tokens associated with the response returned from the AI Accelerator cache.
        aia_response_usage_tokens,omitempty:
          type: integer
          format: int64
          description: The number of usage tokens reported by the request to the origin from AI Accelerator.
        aia_origin_usage_tokens,omitempty:
          type: integer
          format: int64
          description: The estimated amount of time saved by responses served from the AI Accelerator semantic cache.
        aia_estimated_time_saved_ms,omitempty:
          type: integer
          format: int64
          description: Number of requests that were collapsed and satisfied by a usable cache object.
        request_collapse_usable_count,omitempty:
          type: integer
          format: int64
          description: Number of requests that were collapsed and unable to be satisfied by the resulting cache object.
        request_collapse_unusable_count,omitempty:
          type: integer
          format: int64
          description: Number of cache operations executed by the Compute platform.
        compute_cache_operations_count,omitempty:
          type: integer
          format: int64
    RelationshipTLSPrivateKeyTLSPrivateKey:
      type: object
      properties:
        data,omitempty:
          $ref: '#/components/schemas/RelationshipMemberTLSPrivateKey'
    MutualAuthenticationResponse:
      type: object
      properties:
        data,omitempty:
          $ref: '#/components/schemas/MutualAuthenticationResponseData'
    RelationshipTLSDomains:
      type: object
      properties:
        tls_domains,omitempty:
          $ref: '#/components/schemas/RelationshipTLSDomainsTLSDomains'
    InlineResponse201:
      type: object
      properties:
        id,omitempty:
          type: string
    HistoricalUsageAggregatedResponse:
      type: object
      properties:
        status,omitempty:
          type: string
        meta,omitempty:
          $ref: '#/components/schemas/HistoricalMeta'
          description: If the query was not successful, this will provide a string that explains why.
        msg,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: Organized by *region*.
    LoggingFtpResponse:
      type: object
      properties:
        name,omitempty:
          type: string
          description: Where in the generated VCL the logging call should be placed. If not set, endpoints with `format_version` of 2 are placed in `vcl_log` and those with `format_version` of 1 are placed
            in `vcl_deliver`.
        placement,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: The name of an existing condition in the configured endpoint, or leave blank to always execute.
        response_condition,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: A Fastly [log format string](https://docs.fastly.com/en/guides/custom-log-formats).
        format,omitempty:
          type: string
          description: The version of the custom logging format used for the configured endpoint. The logging call gets placed by default in `vcl_log` if `format_version` is set to `2` and in `vcl_deliver`
            if `format_version` is set to `1`.
        format_version,omitempty:
          type: string
          description: How the message should be formatted.
        message_type,omitempty:
          type: string
          description: A timestamp format
        timestamp_format,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: The codec used for compressing your logs. Valid values are `zstd`, `snappy`, and `gzip`. Specifying both `compression_codec` and `gzip_level` in the same API request will result in
            an error.
        compression_codec,omitempty:
          type: string
          description: How frequently log files are finalized so they can be available for reading (in seconds).
        period,omitempty:
          type: string
          description: The level of gzip encoding when sending logs (default `0`, no compression). Specifying both `compression_codec` and `gzip_level` in the same API request will result in an error.
        gzip_level,omitempty:
          type: string
          description: Date and time in ISO 8601 format.
        created_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        deleted_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        updated_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
        service_id,omitempty:
          type: string
        version,omitempty:
          type: string
          description: An hostname or IPv4 address.
        address,omitempty:
          type: string
          description: Hostname used.
        hostname,omitempty:
          type: string
          description: IPv4 address of the host.
        ipv4,omitempty:
          type: string
          description: The password for the server. For anonymous use an email address.
        password,omitempty:
          type: string
          description: The path to upload log files to. If the path ends in `/` then it is treated as a directory.
        path,omitempty:
          type: string
          description: A PGP public key that Fastly will use to encrypt your log files before writing them to disk.
        public_key,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: The username for the server. Can be anonymous.
        user,omitempty:
          type: string
          description: The port number.
        port,omitempty:
          type: string
    InlineResponse2007:
      type: object
      properties:
        meta,omitempty:
          $ref: '#/components/schemas/PaginationCursorMeta'
    ContactResponse:
      type: object
      properties:
        user_id,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: The type of contact.
        contact_type,omitempty:
          type: string
          description: The name of this contact, when user_id is not provided.
        name,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: The email of this contact, when a user_id is not provided.
        email,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: The phone number for this contact. Required for primary, technical, and security contact types.
        phone,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: The alphanumeric string representing the customer for this customer contact.
        customer_id,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: Date and time in ISO 8601 format.
        created_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        deleted_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        updated_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
        id,omitempty:
          type: string
    TLSCsrResponse:
      type: object
      properties:
        data,omitempty:
          $ref: '#/components/schemas/TLSCsrResponseData'
    LoggingHTTPSResponse:
      type: object
      properties:
        name,omitempty:
          type: string
          description: Where in the generated VCL the logging call should be placed. If not set, endpoints with `format_version` of 2 are placed in `vcl_log` and those with `format_version` of 1 are placed
            in `vcl_deliver`.
        placement,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: The name of an existing condition in the configured endpoint, or leave blank to always execute.
        response_condition,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: A Fastly [log format string](https://docs.fastly.com/en/guides/custom-log-formats).
        format,omitempty:
          type: string
          description: The version of the custom logging format used for the configured endpoint. The logging call gets placed by default in `vcl_log` if `format_version` is set to `2` and in `vcl_deliver`
            if `format_version` is set to `1`.
        format_version,omitempty:
          type: string
          description: A secure certificate to authenticate a server with. Must be in PEM format.
        tls_ca_cert,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: The client certificate used to make authenticated requests. Must be in PEM format.
        tls_client_cert,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: The client private key used to make authenticated requests. Must be in PEM format.
        tls_client_key,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: The hostname to verify the server's certificate. This should be one of the Subject Alternative Name (SAN) fields for the certificate. Common Names (CN) are not supported.
        tls_hostname,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: The maximum number of logs sent in one request. Defaults `0` (10k).
        request_max_entries,omitempty:
          type: integer
          format: int32
          description: The maximum number of bytes sent in one request. Defaults `0` (100MB).
        request_max_bytes,omitempty:
          type: integer
          format: int32
          description: The URL to send logs to. Must use HTTPS. Required.
        url,omitempty:
          type: string
          description: Content type of the header sent with the request.
        content_type,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: Name of the custom header sent with the request.
        header_name,omitempty:
          $ref: '#/components/schemas/NullableString'
        message_type,omitempty:
          $ref: '#/components/schemas/LoggingMessageType'
          description: Value of the custom header sent with the request.
        header_value,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: HTTP method used for request.
        method,omitempty:
          type: string
          description: Enforces valid JSON formatting for log entries.
        json_format,omitempty:
          type: string
          description: Date and time in ISO 8601 format.
        created_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        deleted_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        updated_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
        service_id,omitempty:
          type: string
        version,omitempty:
          type: string
    Invoicelineitems:
      type: object
      properties:
        description,omitempty:
          type: string
          description: Billed amount for line item.
        amount,omitempty:
          type: number
          format: float
          description: Discount coupon associated with the invoice for any account or service credits.
        credit_coupon_code,omitempty:
          type: string
          description: Price per unit.
        rate,omitempty:
          type: number
          format: float
          description: Total number of units of usage.
        units,omitempty:
          type: number
          format: float
          description: The name of the product.
        product_name,omitempty:
          type: string
          description: The broader classification of the product (e.g., `Compute` or `Full-Site Delivery`).
        product_group,omitempty:
          type: string
          description: The broader classification of the product (e.g., `Network Services` or `Security`).
        product_line,omitempty:
          type: string
          description: The geographical area applicable for regionally based products.
        region,omitempty:
          type: string
          description: The unit of measure (e.g., `requests` or `bandwidth`).
        usage_type,omitempty:
          type: string
    BackendResponse:
      type: object
      properties:
        address,omitempty:
          type: string
          description: Whether or not this backend should be automatically load balanced. If true, all backends with this setting that don't have a `request_condition` will be selected based on their `weight`.
        auto_loadbalance,omitempty:
          type: boolean
          description: Maximum duration in milliseconds that Fastly will wait while receiving no data on a download from a backend. If exceeded, the response received so far will be considered complete
            and the fetch will end. May be set at runtime using `bereq.between_bytes_timeout`.
        between_bytes_timeout,omitempty:
          type: integer
          format: int32
          description: Unused.
        client_cert,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: A freeform descriptive note.
        comment,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: Maximum duration in milliseconds to wait for a connection to this backend to be established. If exceeded, the connection is aborted and a synthetic `503` response will be presented
            instead. May be set at runtime using `bereq.connect_timeout`.
        connect_timeout,omitempty:
          type: integer
          format: int32
          description: Maximum duration in milliseconds to wait for the server response to begin after a TCP connection is established and the request has been sent. If exceeded, the connection is aborted
            and a synthetic `503` response will be presented instead. May be set at runtime using `bereq.first_byte_timeout`.
        first_byte_timeout,omitempty:
          type: integer
          format: int32
          description: The name of the healthcheck to use with this backend.
        healthcheck,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: The hostname of the backend. May be used as an alternative to `address` to set the backend location.
        hostname,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: IPv4 address of the backend. May be used as an alternative to `address` to set the backend location.
        ipv4,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: IPv6 address of the backend. May be used as an alternative to `address` to set the backend location.
        ipv6,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: How long in seconds to keep a persistent connection to the backend between requests. By default, Varnish keeps connections open as long as it can.
        keepalive_time,omitempty:
          $ref: '#/components/schemas/NullableInt32'
          description: Maximum number of concurrent connections this backend will accept.
        max_conn,omitempty:
          type: integer
          format: int32
          description: Maximum allowed TLS version on SSL connections to this backend. If your backend server is not able to negotiate a connection meeting this constraint, a synthetic `503` error response
            will be generated.
        max_tls_version,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: Minimum allowed TLS version on SSL connections to this backend. If your backend server is not able to negotiate a connection meeting this constraint, a synthetic `503` error response
            will be generated.
        min_tls_version,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: The name of the backend.
        name,omitempty:
          type: string
          description: If set, will replace the client-supplied HTTP `Host` header on connections to this backend. Applied after VCL has been processed, so this setting will take precedence over changing
            `bereq.http.Host` in VCL.
        override_host,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: Port on which the backend server is listening for connections from Fastly. Setting `port` to 80 or 443 will also set `use_ssl` automatically (to false and true respectively), unless
            explicitly overridden by setting `use_ssl` in the same request.
        port,omitempty:
          type: integer
          format: int32
          description: Prefer IPv6 connections for DNS hostname lookups.
        prefer_ipv6,omitempty:
          type: boolean
          description: Name of a Condition, which if satisfied, will select this backend during a request. If set, will override any `auto_loadbalance` setting. By default, the first backend added to a
            service is selected for all requests.
        request_condition,omitempty:
          type: string
          description: Value that when shared across backends will enable those backends to share the same health check.
        share_key,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: Identifier of the POP to use as a [shield](https://docs.fastly.com/en/guides/shielding).
        shield,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: CA certificate attached to origin.
        ssl_ca_cert,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: Overrides `ssl_hostname`, but only for cert verification. Does not affect SNI at all.
        ssl_cert_hostname,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: Be strict on checking SSL certs.
        ssl_check_cert,omitempty:
          $ref: '#/components/schemas/NullableBool'
          description: List of [OpenSSL ciphers](https://www.openssl.org/docs/man1.1.1/man1/ciphers.html) to support for connections to this origin. If your backend server is not able to negotiate a connection
            meeting this constraint, a synthetic `503` error response will be generated.
        ssl_ciphers,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: Client certificate attached to origin.
        ssl_client_cert,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: Client key attached to origin.
        ssl_client_key,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: Use `ssl_cert_hostname` and `ssl_sni_hostname` to configure certificate validation.
        ssl_hostname,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: Overrides `ssl_hostname`, but only for SNI in the handshake. Does not affect cert validation at all.
        ssl_sni_hostname,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: Whether to enable TCP keepalives for backend connections. Varnish defaults to using keepalives if this is unspecified.
        tcp_keepalive_enable,omitempty:
          $ref: '#/components/schemas/NullableBool'
          description: Interval in seconds between subsequent keepalive probes.
        tcp_keepalive_interval,omitempty:
          $ref: '#/components/schemas/NullableInt32'
          description: Number of unacknowledged probes to send before considering the connection dead.
        tcp_keepalive_probes,omitempty:
          $ref: '#/components/schemas/NullableInt32'
          description: Interval in seconds between the last data packet sent and the first keepalive probe.
        tcp_keepalive_time,omitempty:
          $ref: '#/components/schemas/NullableInt32'
          description: Whether or not to require TLS for connections to this backend.
        use_ssl,omitempty:
          type: boolean
          description: Weight used to load balance this backend against others. May be any positive integer. If `auto_loadbalance` is true, the chance of this backend being selected is equal to its own
            weight over the sum of all weights for backends that have `auto_loadbalance` set to true.
        weight,omitempty:
          type: integer
          format: int32
          description: Date and time in ISO 8601 format.
        created_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        deleted_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        updated_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
        service_id,omitempty:
          type: string
        version,omitempty:
          type: integer
          format: int32
          description: Indicates whether the version of the service this backend is attached to accepts edits.
        locked,omitempty:
          type: boolean
    Results:
      type: object
      properties:
        requests,omitempty:
          type: integer
          format: int64
          description: Number of cache hits.
        hits,omitempty:
          type: integer
          format: int64
          description: Total amount of time spent processing cache hits (in seconds).
        hits_time,omitempty:
          type: number
          format: float
          description: Number of cache misses.
        miss,omitempty:
          type: integer
          format: int64
          description: Total amount of time spent processing cache misses (in seconds).
        miss_time,omitempty:
          type: number
          format: float
          description: Number of requests that passed through the CDN without being cached.
        pass,omitempty:
          type: integer
          format: int64
          description: Total amount of time spent processing cache passes (in seconds).
        pass_time,omitempty:
          type: number
          format: float
          description: Number of cache errors.
        errors,omitempty:
          type: integer
          format: int64
          description: Number of restarts performed.
        restarts,omitempty:
          type: integer
          format: int64
          description: Ratio of cache hits to cache misses (between 0 and 1).
        hit_ratio,omitempty:
          $ref: '#/components/schemas/NullableFloat32'
          description: Total bytes delivered (`resp_header_bytes` + `resp_body_bytes` + `bereq_header_bytes` + `bereq_body_bytes` + `compute_resp_header_bytes` + `compute_resp_body_bytes` + `compute_bereq_header_bytes`
            + `compute_bereq_body_bytes` + `websocket_resp_header_bytes` + `websocket_resp_body_bytes` + `websocket_bereq_header_bytes` + `websocket_bereq_body_bytes` + `fanout_resp_header_bytes` + `fanout_resp_body_bytes`
            + `fanout_bereq_header_bytes` + `fanout_bereq_body_bytes`).
        bandwidth,omitempty:
          type: integer
          format: int64
          description: Total body bytes delivered (alias for resp_body_bytes).
        body_size,omitempty:
          type: integer
          format: int64
          description: Total header bytes delivered (alias for resp_header_bytes).
        header_size,omitempty:
          type: integer
          format: int64
          description: Total body bytes received.
        req_body_bytes,omitempty:
          type: integer
          format: int64
          description: Total header bytes received.
        req_header_bytes,omitempty:
          type: integer
          format: int64
          description: Total body bytes delivered (edge_resp_body_bytes + shield_resp_body_bytes).
        resp_body_bytes,omitempty:
          type: integer
          format: int64
          description: Total header bytes delivered (edge_resp_header_bytes + shield_resp_header_bytes).
        resp_header_bytes,omitempty:
          type: integer
          format: int64
          description: Total body bytes sent to origin.
        bereq_body_bytes,omitempty:
          type: integer
          format: int64
          description: Total header bytes sent to origin.
        bereq_header_bytes,omitempty:
          type: integer
          format: int64
          description: Number of requests that were designated uncachable.
        uncacheable,omitempty:
          type: integer
          format: int64
          description: Optional. Pipe operations performed (legacy feature).
        pipe,omitempty:
          type: integer
          format: int64
          description: Number of requests that returned a synthetic response (i.e., response objects created with the `synthetic` VCL statement).
        synth,omitempty:
          type: integer
          format: int64
          description: Number of requests that were received over TLS.
        tls,omitempty:
          type: integer
          format: int64
          description: Number of requests received over TLS 1.0.
        tls_v10,omitempty:
          type: integer
          format: int64
          description: Number of requests received over TLS 1.1.
        tls_v11,omitempty:
          type: integer
          format: int64
          description: Number of requests received over TLS 1.2.
        tls_v12,omitempty:
          type: integer
          format: int64
          description: Number of requests received over TLS 1.3.
        tls_v13,omitempty:
          type: integer
          format: int64
          description: Number of requests sent by end users to Fastly.
        edge_requests,omitempty:
          type: integer
          format: int64
          description: Total header bytes delivered from Fastly to the end user.
        edge_resp_header_bytes,omitempty:
          type: integer
          format: int64
          description: Total body bytes delivered from Fastly to the end user.
        edge_resp_body_bytes,omitempty:
          type: integer
          format: int64
          description: Number of requests sent by end users to Fastly that resulted in a hit at the edge.
        edge_hit_requests,omitempty:
          type: integer
          format: int64
          description: Number of requests sent by end users to Fastly that resulted in a miss at the edge.
        edge_miss_requests,omitempty:
          type: integer
          format: int64
          description: Number of requests sent to origin.
        origin_fetches,omitempty:
          type: integer
          format: int64
          description: Total request header bytes sent to origin.
        origin_fetch_header_bytes,omitempty:
          type: integer
          format: int64
          description: Total request body bytes sent to origin.
        origin_fetch_body_bytes,omitempty:
          type: integer
          format: int64
          description: Total header bytes received from origin.
        origin_fetch_resp_header_bytes,omitempty:
          type: integer
          format: int64
          description: Total body bytes received from origin.
        origin_fetch_resp_body_bytes,omitempty:
          type: integer
          format: int64
          description: Number of responses received from origin with a `304` status code in response to an `If-Modified-Since` or `If-None-Match` request. Under regular scenarios, a revalidation will imply
            a cache hit. However, if using Fastly Image Optimizer or segmented caching this may result in a cache miss.
        origin_revalidations,omitempty:
          type: integer
          format: int64
          description: The total number of completed requests made to backends (origins) that returned cacheable content.
        origin_cache_fetches,omitempty:
          type: integer
          format: int64
          description: Number of requests from edge to the shield POP.
        shield,omitempty:
          type: integer
          format: int64
          description: Total body bytes delivered via a shield.
        shield_resp_body_bytes,omitempty:
          type: integer
          format: int64
          description: Total header bytes delivered via a shield.
        shield_resp_header_bytes,omitempty:
          type: integer
          format: int64
          description: Number of requests made from one Fastly POP to another, as part of shielding.
        shield_fetches,omitempty:
          type: integer
          format: int64
          description: Total request header bytes sent to a shield.
        shield_fetch_header_bytes,omitempty:
          type: integer
          format: int64
          description: Total request body bytes sent to a shield.
        shield_fetch_body_bytes,omitempty:
          type: integer
          format: int64
          description: Total response header bytes sent from a shield to the edge.
        shield_fetch_resp_header_bytes,omitempty:
          type: integer
          format: int64
          description: Total response body bytes sent from a shield to the edge.
        shield_fetch_resp_body_bytes,omitempty:
          type: integer
          format: int64
          description: Number of responses received from origin with a `304` status code, in response to an `If-Modified-Since` or `If-None-Match` request to a shield. Under regular scenarios, a revalidation
            will imply a cache hit. However, if using segmented caching this may result in a cache miss.
        shield_revalidations,omitempty:
          type: integer
          format: int64
          description: The total number of completed requests made to shields that returned cacheable content.
        shield_cache_fetches,omitempty:
          type: integer
          format: int64
          description: Number of requests that were received over IPv6.
        ipv6,omitempty:
          type: integer
          format: int64
          description: Number of responses that came from the Fastly On-the-Fly Packaging service for video-on-demand.
        otfp,omitempty:
          type: integer
          format: int64
          description: Total body bytes delivered from the Fastly On-the-Fly Packaging service for video-on-demand.
        otfp_resp_body_bytes,omitempty:
          type: integer
          format: int64
          description: Total header bytes delivered from the Fastly On-the-Fly Packaging service for video-on-demand.
        otfp_resp_header_bytes,omitempty:
          type: integer
          format: int64
          description: Total body bytes delivered via a shield for the Fastly On-the-Fly Packaging service for video-on-demand.
        otfp_shield_resp_body_bytes,omitempty:
          type: integer
          format: int64
          description: Total header bytes delivered via a shield for the Fastly On-the-Fly Packaging service for video-on-demand.
        otfp_shield_resp_header_bytes,omitempty:
          type: integer
          format: int64
          description: Number of responses that were manifest files from the Fastly On-the-Fly Packaging service for video-on-demand.
        otfp_manifests,omitempty:
          type: integer
          format: int64
          description: Total amount of time spent delivering a response from the Fastly On-the-Fly Packaging service for video-on-demand (in seconds).
        otfp_deliver_time,omitempty:
          type: number
          format: float
          description: Total amount of time spent delivering a response via a shield from the Fastly On-the-Fly Packaging service for video-on-demand (in seconds).
        otfp_shield_time,omitempty:
          type: number
          format: float
          description: Number of responses with the video segment or video manifest MIME type (i.e., application/x-mpegurl, application/vnd.apple.mpegurl, application/f4m, application/dash+xml, application/vnd.ms-sstr+xml,
            ideo/mp2t, audio/aac, video/f4f, video/x-flv, video/mp4, audio/mp4).
        video,omitempty:
          type: integer
          format: int64
          description: Number of responses with the PCI flag turned on.
        pci,omitempty:
          type: integer
          format: int64
          description: Number of log lines sent.
        log,omitempty:
          type: integer
          format: int64
          description: Total log bytes sent.
        log_bytes,omitempty:
          type: integer
          format: int64
          description: Number of requests received over HTTP/2.
        http2,omitempty:
          type: integer
          format: int64
          description: Number of requests received over HTTP/3.
        http3,omitempty:
          type: integer
          format: int64
          description: Number of requests that triggered a WAF rule and were logged.
        waf_logged,omitempty:
          type: integer
          format: int64
          description: Number of requests that triggered a WAF rule and were blocked.
        waf_blocked,omitempty:
          type: integer
          format: int64
          description: Number of requests that triggered a WAF rule and were passed.
        waf_passed,omitempty:
          type: integer
          format: int64
          description: Total body bytes received from requests that triggered a WAF rule.
        attack_req_body_bytes,omitempty:
          type: integer
          format: int64
          description: Total header bytes received from requests that triggered a WAF rule.
        attack_req_header_bytes,omitempty:
          type: integer
          format: int64
          description: Total body bytes received from requests that triggered a WAF rule that was logged.
        attack_logged_req_body_bytes,omitempty:
          type: integer
          format: int64
          description: Total header bytes received from requests that triggered a WAF rule that was logged.
        attack_logged_req_header_bytes,omitempty:
          type: integer
          format: int64
          description: Total body bytes received from requests that triggered a WAF rule that was blocked.
        attack_blocked_req_body_bytes,omitempty:
          type: integer
          format: int64
          description: Total header bytes received from requests that triggered a WAF rule that was blocked.
        attack_blocked_req_header_bytes,omitempty:
          type: integer
          format: int64
          description: Total body bytes received from requests that triggered a WAF rule that was passed.
        attack_passed_req_body_bytes,omitempty:
          type: integer
          format: int64
          description: Total header bytes received from requests that triggered a WAF rule that was passed.
        attack_passed_req_header_bytes,omitempty:
          type: integer
          format: int64
          description: Total bytes delivered for requests that triggered a WAF rule and returned a synthetic response.
        attack_resp_synth_bytes,omitempty:
          type: integer
          format: int64
          description: Number of responses that came from the Fastly Image Optimizer service. If the service receives 10 requests for an image, this stat will be 10 regardless of how many times the image
            was transformed.
        imgopto,omitempty:
          type: integer
          format: int64
          description: Total body bytes delivered from the Fastly Image Optimizer service, including shield traffic.
        imgopto_resp_body_bytes,omitempty:
          type: integer
          format: int64
          description: Total header bytes delivered from the Fastly Image Optimizer service, including shield traffic.
        imgopto_resp_header_bytes,omitempty:
          type: integer
          format: int64
          description: Number of responses that came from the Fastly Image Optimizer service via a shield.
        imgopto_shield,omitempty:
          type: integer
          format: int64
          description: Total body bytes delivered via a shield from the Fastly Image Optimizer service.
        imgopto_shield_resp_body_bytes,omitempty:
          type: integer
          format: int64
          description: Total header bytes delivered via a shield from the Fastly Image Optimizer service.
        imgopto_shield_resp_header_bytes,omitempty:
          type: integer
          format: int64
          description: Number of transforms performed by the Fastly Image Optimizer service.
        imgopto_transforms,omitempty:
          type: integer
          format: int64
          description: Number of video responses that came from the Fastly Image Optimizer service.
        imgvideo,omitempty:
          type: integer
          format: int64
          description: Number of video frames that came from the Fastly Image Optimizer service. A video frame is an individual image within a sequence of video.
        imgvideo_frames,omitempty:
          type: integer
          format: int64
          description: Total header bytes of video delivered from the Fastly Image Optimizer service.
        imgvideo_resp_header_bytes,omitempty:
          type: integer
          format: int64
          description: Total body bytes of video delivered from the Fastly Image Optimizer service.
        imgvideo_resp_body_bytes,omitempty:
          type: integer
          format: int64
          description: Total header bytes of video delivered via a shield from the Fastly Image Optimizer service.
        imgvideo_shield_resp_header_bytes,omitempty:
          type: integer
          format: int64
          description: Total body bytes of video delivered via a shield from the Fastly Image Optimizer service.
        imgvideo_shield_resp_body_bytes,omitempty:
          type: integer
          format: int64
          description: Number of video responses delivered via a shield that came from the Fastly Image Optimizer service.
        imgvideo_shield,omitempty:
          type: integer
          format: int64
          description: Number of video frames delivered via a shield that came from the Fastly Image Optimizer service. A video frame is an individual image within a sequence of video.
        imgvideo_shield_frames,omitempty:
          type: integer
          format: int64
          description: Number of responses sent with status code 200 (Success).
        status_200,omitempty:
          type: integer
          format: int64
          description: Number of responses sent with status code 204 (No Content).
        status_204,omitempty:
          type: integer
          format: int64
          description: Number of responses sent with status code 206 (Partial Content).
        status_206,omitempty:
          type: integer
          format: int64
          description: Number of responses sent with status code 301 (Moved Permanently).
        status_301,omitempty:
          type: integer
          format: int64
          description: Number of responses sent with status code 302 (Found).
        status_302,omitempty:
          type: integer
          format: int64
          description: Number of responses sent with status code 304 (Not Modified).
        status_304,omitempty:
          type: integer
          format: int64
          description: Number of responses sent with status code 400 (Bad Request).
        status_400,omitempty:
          type: integer
          format: int64
          description: Number of responses sent with status code 401 (Unauthorized).
        status_401,omitempty:
          type: integer
          format: int64
          description: Number of responses sent with status code 403 (Forbidden).
        status_403,omitempty:
          type: integer
          format: int64
          description: Number of responses sent with status code 404 (Not Found).
        status_404,omitempty:
          type: integer
          format: int64
          description: Number of responses sent with status code 406 (Not Acceptable).
        status_406,omitempty:
          type: integer
          format: int64
          description: Number of responses sent with status code 416 (Range Not Satisfiable).
        status_416,omitempty:
          type: integer
          format: int64
          description: Number of responses sent with status code 429 (Too Many Requests).
        status_429,omitempty:
          type: integer
          format: int64
          description: Number of responses sent with status code 500 (Internal Server Error).
        status_500,omitempty:
          type: integer
          format: int64
          description: Number of responses sent with status code 501 (Not Implemented).
        status_501,omitempty:
          type: integer
          format: int64
          description: Number of responses sent with status code 502 (Bad Gateway).
        status_502,omitempty:
          type: integer
          format: int64
          description: Number of responses sent with status code 503 (Service Unavailable).
        status_503,omitempty:
          type: integer
          format: int64
          description: Number of responses sent with status code 504 (Gateway Timeout).
        status_504,omitempty:
          type: integer
          format: int64
          description: Number of responses sent with status code 505 (HTTP Version Not Supported).
        status_505,omitempty:
          type: integer
          format: int64
          description: Number of responses sent with status code 530.
        status_530,omitempty:
          type: integer
          format: int64
          description: Number of \"Informational\" category status codes delivered.
        status_1xx,omitempty:
          type: integer
          format: int64
          description: Number of \"Success\" status codes delivered.
        status_2xx,omitempty:
          type: integer
          format: int64
          description: Number of \"Redirection\" codes delivered.
        status_3xx,omitempty:
          type: integer
          format: int64
          description: Number of \"Client Error\" codes delivered.
        status_4xx,omitempty:
          type: integer
          format: int64
          description: Number of \"Server Error\" codes delivered.
        status_5xx,omitempty:
          type: integer
          format: int64
          description: Number of objects served that were under 1KB in size.
        object_size_1k,omitempty:
          type: integer
          format: int64
          description: Number of objects served that were between 1KB and 10KB in size.
        object_size_10k,omitempty:
          type: integer
          format: int64
          description: Number of objects served that were between 10KB and 100KB in size.
        object_size_100k,omitempty:
          type: integer
          format: int64
          description: Number of objects served that were between 100KB and 1MB in size.
        object_size_1m,omitempty:
          type: integer
          format: int64
          description: Number of objects served that were between 1MB and 10MB in size.
        object_size_10m,omitempty:
          type: integer
          format: int64
          description: Number of objects served that were between 10MB and 100MB in size.
        object_size_100m,omitempty:
          type: integer
          format: int64
          description: Number of objects served that were between 100MB and 1GB in size.
        object_size_1g,omitempty:
          type: integer
          format: int64
          description: Time spent inside the `vcl_recv` Varnish subroutine (in seconds).
        recv_sub_time,omitempty:
          type: number
          format: float
          description: Number of executions of the `vcl_recv` Varnish subroutine.
        recv_sub_count,omitempty:
          type: integer
          format: int64
          description: Time spent inside the `vcl_hash` Varnish subroutine (in seconds).
        hash_sub_time,omitempty:
          type: number
          format: float
          description: Number of executions of the `vcl_hash` Varnish subroutine.
        hash_sub_count,omitempty:
          type: integer
          format: int64
          description: Time spent inside the `vcl_miss` Varnish subroutine (in seconds).
        miss_sub_time,omitempty:
          type: number
          format: float
          description: Number of executions of the `vcl_miss` Varnish subroutine.
        miss_sub_count,omitempty:
          type: integer
          format: int64
          description: Time spent inside the `vcl_fetch` Varnish subroutine (in seconds).
        fetch_sub_time,omitempty:
          type: number
          format: float
          description: Number of executions of the `vcl_fetch` Varnish subroutine.
        fetch_sub_count,omitempty:
          type: integer
          format: int64
          description: Time spent inside the `vcl_pass` Varnish subroutine (in seconds).
        pass_sub_time,omitempty:
          type: number
          format: float
          description: Number of executions of the `vcl_pass` Varnish subroutine.
        pass_sub_count,omitempty:
          type: integer
          format: int64
          description: Time spent inside the `vcl_pipe` Varnish subroutine (in seconds).
        pipe_sub_time,omitempty:
          type: number
          format: float
          description: Number of executions of the `vcl_pipe` Varnish subroutine.
        pipe_sub_count,omitempty:
          type: integer
          format: int64
          description: Time spent inside the `vcl_deliver` Varnish subroutine (in seconds).
        deliver_sub_time,omitempty:
          type: number
          format: float
          description: Number of executions of the `vcl_deliver` Varnish subroutine.
        deliver_sub_count,omitempty:
          type: integer
          format: int64
          description: Time spent inside the `vcl_error` Varnish subroutine (in seconds).
        error_sub_time,omitempty:
          type: number
          format: float
          description: Number of executions of the `vcl_error` Varnish subroutine.
        error_sub_count,omitempty:
          type: integer
          format: int64
          description: Time spent inside the `vcl_hit` Varnish subroutine (in seconds).
        hit_sub_time,omitempty:
          type: number
          format: float
          description: Number of executions of the `vcl_hit` Varnish subroutine.
        hit_sub_count,omitempty:
          type: integer
          format: int64
          description: Time spent inside the `vcl_prehash` Varnish subroutine (in seconds).
        prehash_sub_time,omitempty:
          type: number
          format: float
          description: Number of executions of the `vcl_prehash` Varnish subroutine.
        prehash_sub_count,omitempty:
          type: integer
          format: int64
          description: Time spent inside the `vcl_predeliver` Varnish subroutine (in seconds).
        predeliver_sub_time,omitempty:
          type: number
          format: float
          description: Number of executions of the `vcl_predeliver` Varnish subroutine.
        predeliver_sub_count,omitempty:
          type: integer
          format: int64
          description: Number of bytes transferred during TLS handshake.
        tls_handshake_sent_bytes,omitempty:
          type: integer
          format: int64
          description: Total body bytes delivered for cache hits.
        hit_resp_body_bytes,omitempty:
          type: integer
          format: int64
          description: Total body bytes delivered for cache misses.
        miss_resp_body_bytes,omitempty:
          type: integer
          format: int64
          description: Total body bytes delivered for cache passes.
        pass_resp_body_bytes,omitempty:
          type: integer
          format: int64
          description: Number of `Range` requests to origin for segments of resources when using segmented caching.
        segblock_origin_fetches,omitempty:
          type: integer
          format: int64
          description: Number of `Range` requests to a shield for segments of resources when using segmented caching.
        segblock_shield_fetches,omitempty:
          type: integer
          format: int64
          description: The total number of requests that were received for your service by Fastly.
        compute_requests,omitempty:
          type: integer
          format: int64
          description: The total, actual amount of time used to process your requests, including active CPU time (in milliseconds).
        compute_request_time_ms,omitempty:
          type: number
          format: float
          description: The total amount of request processing time you will be billed for, measured in 50 millisecond increments.
        compute_request_time_billed_ms,omitempty:
          type: number
          format: float
          description: The amount of RAM used for your service by Fastly (in bytes).
        compute_ram_used,omitempty:
          type: integer
          format: int64
          description: The amount of active CPU time used to process your requests (in milliseconds).
        compute_execution_time_ms,omitempty:
          type: number
          format: float
          description: Total header bytes received by the Compute platform.
        compute_req_header_bytes,omitempty:
          type: integer
          format: int64
          description: Total body bytes received by the Compute platform.
        compute_req_body_bytes,omitempty:
          type: integer
          format: int64
          description: Total header bytes sent from Compute to end user.
        compute_resp_header_bytes,omitempty:
          type: integer
          format: int64
          description: Total body bytes sent from Compute to end user.
        compute_resp_body_bytes,omitempty:
          type: integer
          format: int64
          description: Number of \"Informational\" category status codes delivered by the Compute platform.
        compute_resp_status_1xx,omitempty:
          type: integer
          format: int64
          description: Number of \"Success\" category status codes delivered by the Compute platform.
        compute_resp_status_2xx,omitempty:
          type: integer
          format: int64
          description: Number of \"Redirection\" category status codes delivered by the Compute platform.
        compute_resp_status_3xx,omitempty:
          type: integer
          format: int64
          description: Number of \"Client Error\" category status codes delivered by the Compute platform.
        compute_resp_status_4xx,omitempty:
          type: integer
          format: int64
          description: Number of \"Server Error\" category status codes delivered by the Compute platform.
        compute_resp_status_5xx,omitempty:
          type: integer
          format: int64
          description: Total header bytes sent to backends (origins) by the Compute platform.
        compute_bereq_header_bytes,omitempty:
          type: integer
          format: int64
          description: Total body bytes sent to backends (origins) by the Compute platform.
        compute_bereq_body_bytes,omitempty:
          type: integer
          format: int64
          description: Total header bytes received from backends (origins) by the Compute platform.
        compute_beresp_header_bytes,omitempty:
          type: integer
          format: int64
          description: Total body bytes received from backends (origins) by the Compute platform.
        compute_beresp_body_bytes,omitempty:
          type: integer
          format: int64
          description: Number of backend requests started.
        compute_bereqs,omitempty:
          type: integer
          format: int64
          description: Number of backend request errors, including timeouts.
        compute_bereq_errors,omitempty:
          type: integer
          format: int64
          description: Number of times a guest exceeded its resource limit, includes heap, stack, globals, and code execution timeout.
        compute_resource_limit_exceeded,omitempty:
          type: integer
          format: int64
          description: Number of times a guest exceeded its heap limit.
        compute_heap_limit_exceeded,omitempty:
          type: integer
          format: int64
          description: Number of times a guest exceeded its stack limit.
        compute_stack_limit_exceeded,omitempty:
          type: integer
          format: int64
          description: Number of times a guest exceeded its globals limit.
        compute_globals_limit_exceeded,omitempty:
          type: integer
          format: int64
          description: Number of times a service experienced a guest code error.
        compute_guest_errors,omitempty:
          type: integer
          format: int64
          description: Number of times a service experienced a guest runtime error.
        compute_runtime_errors,omitempty:
          type: integer
          format: int64
          description: Body bytes delivered for edge hits.
        edge_hit_resp_body_bytes,omitempty:
          type: integer
          format: int64
          description: Header bytes delivered for edge hits.
        edge_hit_resp_header_bytes,omitempty:
          type: integer
          format: int64
          description: Body bytes delivered for edge misses.
        edge_miss_resp_body_bytes,omitempty:
          type: integer
          format: int64
          description: Header bytes delivered for edge misses.
        edge_miss_resp_header_bytes,omitempty:
          type: integer
          format: int64
          description: Body bytes received from origin for cacheable content.
        origin_cache_fetch_resp_body_bytes,omitempty:
          type: integer
          format: int64
          description: Header bytes received from an origin for cacheable content.
        origin_cache_fetch_resp_header_bytes,omitempty:
          type: integer
          format: int64
          description: Number of requests that resulted in a hit at a shield.
        shield_hit_requests,omitempty:
          type: integer
          format: int64
          description: Number of requests that resulted in a miss at a shield.
        shield_miss_requests,omitempty:
          type: integer
          format: int64
          description: Header bytes delivered for shield hits.
        shield_hit_resp_header_bytes,omitempty:
          type: integer
          format: int64
          description: Body bytes delivered for shield hits.
        shield_hit_resp_body_bytes,omitempty:
          type: integer
          format: int64
          description: Header bytes delivered for shield misses.
        shield_miss_resp_header_bytes,omitempty:
          type: integer
          format: int64
          description: Body bytes delivered for shield misses.
        shield_miss_resp_body_bytes,omitempty:
          type: integer
          format: int64
          description: Total header bytes received from end users over passthrough WebSocket connections.
        websocket_req_header_bytes,omitempty:
          type: integer
          format: int64
          description: Total message content bytes received from end users over passthrough WebSocket connections.
        websocket_req_body_bytes,omitempty:
          type: integer
          format: int64
          description: Total header bytes sent to end users over passthrough WebSocket connections.
        websocket_resp_header_bytes,omitempty:
          type: integer
          format: int64
          description: Total message content bytes sent to end users over passthrough WebSocket connections.
        websocket_resp_body_bytes,omitempty:
          type: integer
          format: int64
          description: Total header bytes sent to backends over passthrough WebSocket connections.
        websocket_bereq_header_bytes,omitempty:
          type: integer
          format: int64
          description: Total message content bytes sent to backends over passthrough WebSocket connections.
        websocket_bereq_body_bytes,omitempty:
          type: integer
          format: int64
          description: Total header bytes received from backends over passthrough WebSocket connections.
        websocket_beresp_header_bytes,omitempty:
          type: integer
          format: int64
          description: Total message content bytes received from backends over passthrough WebSocket connections.
        websocket_beresp_body_bytes,omitempty:
          type: integer
          format: int64
          description: Total duration of passthrough WebSocket connections with end users.
        websocket_conn_time_ms,omitempty:
          type: integer
          format: int64
          description: Total published messages received from the publish API endpoint.
        fanout_recv_publishes,omitempty:
          type: integer
          format: int64
          description: Total published messages sent to end users.
        fanout_send_publishes,omitempty:
          type: integer
          format: int64
          description: The total number of class a operations for the KV store.
        kv_store_class_a_operations,omitempty:
          type: integer
          format: int64
          description: The total number of class b operations for the KV store.
        kv_store_class_b_operations,omitempty:
          type: integer
          format: int64
          description: Use kv_store_class_a_operations.
        object_store_class_a_operations,omitempty:
          type: integer
          format: int64
          description: Use kv_store_class_b_operations.
        object_store_class_b_operations,omitempty:
          type: integer
          format: int64
          description: Total header bytes received from end users over Fanout connections.
        fanout_req_header_bytes,omitempty:
          type: integer
          format: int64
          description: Total body or message content bytes received from end users over Fanout connections.
        fanout_req_body_bytes,omitempty:
          type: integer
          format: int64
          description: Total header bytes sent to end users over Fanout connections.
        fanout_resp_header_bytes,omitempty:
          type: integer
          format: int64
          description: Total body or message content bytes sent to end users over Fanout connections, excluding published message content.
        fanout_resp_body_bytes,omitempty:
          type: integer
          format: int64
          description: Total header bytes sent to backends over Fanout connections.
        fanout_bereq_header_bytes,omitempty:
          type: integer
          format: int64
          description: Total body or message content bytes sent to backends over Fanout connections.
        fanout_bereq_body_bytes,omitempty:
          type: integer
          format: int64
          description: Total header bytes received from backends over Fanout connections.
        fanout_beresp_header_bytes,omitempty:
          type: integer
          format: int64
          description: Total body or message content bytes received from backends over Fanout connections.
        fanout_beresp_body_bytes,omitempty:
          type: integer
          format: int64
          description: Total duration of Fanout connections with end users.
        fanout_conn_time_ms,omitempty:
          type: integer
          format: int64
          description: For HTTP/2, the number of connections the limit-streams action was applied to. The limit-streams action caps the allowed number of concurrent streams in a connection.
        ddos_action_limit_streams_connections,omitempty:
          type: integer
          format: int64
          description: For HTTP/2, the number of requests made on a connection for which the limit-streams action was taken. The limit-streams action caps the allowed number of concurrent streams in a connection.
        ddos_action_limit_streams_requests,omitempty:
          type: integer
          format: int64
          description: The number of times the tarpit-accept action was taken. The tarpit-accept action adds a delay when accepting future connections.
        ddos_action_tarpit_accept,omitempty:
          type: integer
          format: int64
          description: The number of times the tarpit action was taken. The tarpit action delays writing the response to the client.
        ddos_action_tarpit,omitempty:
          type: integer
          format: int64
          description: The number of times the close action was taken. The close action aborts the connection as soon as possible. The close action takes effect either right after accept, right after the
            client hello, or right after the response was sent.
        ddos_action_close,omitempty:
          type: integer
          format: int64
          description: The number of times the blackhole action was taken. The blackhole action quietly closes a TCP connection without sending a reset. The blackhole action quietly closes a TCP connection
            without notifying its peer (all TCP state is dropped).
        ddos_action_blackhole,omitempty:
          type: integer
          format: int64
          description: The number of challenge-start tokens created.
        bot_challenge_starts,omitempty:
          type: integer
          format: int64
          description: The number of challenge-complete tokens that passed validation.
        bot_challenge_complete_tokens_passed,omitempty:
          type: integer
          format: int64
          description: The number of challenge-complete tokens that failed validation.
        bot_challenge_complete_tokens_failed,omitempty:
          type: integer
          format: int64
          description: The number of challenge-complete tokens checked.
        bot_challenge_complete_tokens_checked,omitempty:
          type: integer
          format: int64
          description: The number of challenge-complete tokens not checked because the feature was disabled.
        bot_challenge_complete_tokens_disabled,omitempty:
          type: integer
          format: int64
          description: The number of challenge-complete tokens issued. For example, issuing a challenge-complete token after a series of CAPTCHA challenges ending in success.
        bot_challenge_complete_tokens_issued,omitempty:
          type: integer
          format: int64
          description: The number of challenges issued. For example, the issuance of a CAPTCHA challenge.
        bot_challenges_issued,omitempty:
          type: integer
          format: int64
          description: The number of successful challenge solutions processed. For example, a correct CAPTCHA solution.
        bot_challenges_succeeded,omitempty:
          type: integer
          format: int64
          description: The number of failed challenge solutions processed. For example, an incorrect CAPTCHA solution.
        bot_challenges_failed,omitempty:
          type: integer
          format: int64
          description: The number of times the downgrade action was taken. The downgrade action restricts the client to http1.
        ddos_action_downgrade,omitempty:
          type: integer
          format: int64
          description: The number of connections the downgrade action was applied to. The downgrade action restricts the connection to http1.
        ddos_action_downgraded_connections,omitempty:
          type: integer
          format: int64
          description: Number of cache hits for a VCL service.
        all_hit_requests,omitempty:
          type: integer
          format: int64
          description: Number of cache misses for a VCL service.
        all_miss_requests,omitempty:
          type: integer
          format: int64
          description: Number of requests that passed through the CDN without being cached for a VCL service.
        all_pass_requests,omitempty:
          type: integer
          format: int64
          description: Number of cache errors for a VCL service.
        all_error_requests,omitempty:
          type: integer
          format: int64
          description: Number of requests that returned a synthetic response (i.e., response objects created with the `synthetic` VCL statement) for a VCL service.
        all_synth_requests,omitempty:
          type: integer
          format: int64
          description: Number of requests sent by end users to Fastly that resulted in a hit at the edge for a VCL service.
        all_edge_hit_requests,omitempty:
          type: integer
          format: int64
          description: Number of requests sent by end users to Fastly that resulted in a miss at the edge for a VCL service.
        all_edge_miss_requests,omitempty:
          type: integer
          format: int64
          description: Number of \"Informational\" category status codes delivered for all sources.
        all_status_1xx,omitempty:
          type: integer
          format: int64
          description: Number of \"Success\" status codes delivered for all sources.
        all_status_2xx,omitempty:
          type: integer
          format: int64
          description: Number of \"Redirection\" codes delivered for all sources.
        all_status_3xx,omitempty:
          type: integer
          format: int64
          description: Number of \"Client Error\" codes delivered for all sources.
        all_status_4xx,omitempty:
          type: integer
          format: int64
          description: Number of \"Server Error\" codes delivered for all sources.
        all_status_5xx,omitempty:
          type: integer
          format: int64
          description: Origin Offload measures the ratio of bytes served to end users that were cached by Fastly, over the bytes served to end users, between 0 and 1. ((`edge_resp_body_bytes` + `edge_resp_header_bytes`)
            - (`origin_fetch_resp_body_bytes` + `origin_fetch_resp_header_bytes`)) / (`edge_resp_body_bytes` + `edge_resp_header_bytes`).
        origin_offload,omitempty:
          type: number
          format: float
          description: Number of requests where Fastly responded with 400 due to the request being a GET or HEAD request containing a body.
        request_denied_get_head_body,omitempty:
          type: integer
          format: int64
          description: Number of requests classified as a DDoS attack against a customer origin or service.
        ddos_protection_requests_detect_count,omitempty:
          type: integer
          format: int64
          description: Number of requests classified as a DDoS attack against a customer origin or service that were mitigated by the Fastly platform.
        ddos_protection_requests_mitigate_count,omitempty:
          type: integer
          format: int64
          description: Number of requests analyzed for DDoS attacks against a customer origin or service, but with no DDoS detected.
        ddos_protection_requests_allow_count,omitempty:
          type: integer
          format: int64
          description: A count of the number of Class A Object Storage operations.
        object_storage_class_a_operations_count,omitempty:
          type: integer
          format: int64
          description: A count of the number of Class B Object Storage operations.
        object_storage_class_b_operations_count,omitempty:
          type: integer
          format: int64
          description: Number of requests received by AI Accelerator.
        aia_requests,omitempty:
          type: integer
          format: int64
          description: Number of \"Informational\" category status codes received from AI provider.
        aia_status_1xx,omitempty:
          type: integer
          format: int64
          description: Number of \"Success\" status codes received from AI provider.
        aia_status_2xx,omitempty:
          type: integer
          format: int64
          description: Number of \"Redirection\" received from AI provider.
        aia_status_3xx,omitempty:
          type: integer
          format: int64
          description: Number of \"Client Error\" received from AI provider.
        aia_status_4xx,omitempty:
          type: integer
          format: int64
          description: Number of \"Server Error\" received from AI provider.
        aia_status_5xx,omitempty:
          type: integer
          format: int64
          description: The usage tokens associated with the response returned from the AI Accelerator cache.
        aia_response_usage_tokens,omitempty:
          type: integer
          format: int64
          description: The number of usage tokens reported by the request to the origin from AI Accelerator.
        aia_origin_usage_tokens,omitempty:
          type: integer
          format: int64
          description: The estimated amount of time saved by responses served from the AI Accelerator semantic cache.
        aia_estimated_time_saved_ms,omitempty:
          type: integer
          format: int64
          description: Number of requests that were collapsed and satisfied by a usable cache object.
        request_collapse_usable_count,omitempty:
          type: integer
          format: int64
          description: Number of requests that were collapsed and unable to be satisfied by the resulting cache object.
        request_collapse_unusable_count,omitempty:
          type: integer
          format: int64
          description: Number of cache operations executed by the Compute platform.
        compute_cache_operations_count,omitempty:
          type: integer
          format: int64
          description: Total number of Next-Gen WAF (Edge WAF & Core WAF) requests.
        ngwaf_requests_total_count,omitempty:
          type: integer
          format: int32
          description: Count of Edge WAF requests with an unknown outcome.
        ngwaf_requests_unknown_count,omitempty:
          type: integer
          format: int32
          description: Count of Edge WAF requests allowed.
        ngwaf_requests_allowed_count,omitempty:
          type: integer
          format: int32
          description: Count of Edge WAF requests logged.
        ngwaf_requests_logged_count,omitempty:
          type: integer
          format: int32
          description: Count of Edge WAF requests blocked.
        ngwaf_requests_blocked_count,omitempty:
          type: integer
          format: int32
          description: Count of Edge WAF requests timed outcome.
        ngwaf_requests_timeout_count,omitempty:
          type: integer
          format: int32
          description: Count of Edge WAF requests challenged.
        ngwaf_requests_challenged_count,omitempty:
          type: integer
          format: int32
        service_id,omitempty:
          type: string
          description: Timestamp for the start of the time period being reported
        start_time,omitempty:
          type: integer
          format: int64
    DdosProtectionResponseProduct:
      type: object
      properties:
        product,omitempty:
          $ref: '#/components/schemas/DdosProtectionResponseProductProduct'
    DefaultSettingsResponse:
      type: object
      properties:
        resize_filter:
          type: string
          description: Controls whether or not to default to WebP output when the client supports it. This is equivalent to adding \"auto=webp\" to all image optimizer requests.
        webp:
          type: boolean
          description: The default quality to use with WebP output. This can be overridden with the second option in the \"quality\" URL parameter on specific image optimizer requests.
        webp_quality:
          type: integer
          format: int32
          description: The default type of JPEG output to use. This can be overridden with \"format=bjpeg\" and \"format=pjpeg\" on specific image optimizer requests.
        jpeg_type:
          type: string
          description: The default quality to use with JPEG output. This can be overridden with the \"quality\" parameter on specific image optimizer requests.
        jpeg_quality:
          type: integer
          format: int32
          description: Whether or not we should allow output images to render at sizes larger than input.
        upscale:
          type: boolean
          description: Enables GIF to MP4 transformations on this service.
        allow_video:
          type: boolean
      required:
      - resize_filter
      - webp
      - webp_quality
      - jpeg_type
      - jpeg_quality
      - upscale
      - allow_video
    LoggingKinesisResponse:
      type: object
      properties:
        name,omitempty:
          type: string
        placement,omitempty:
          $ref: '#/components/schemas/NullableLoggingPlacement'
          description: A Fastly [log format string](https://docs.fastly.com/en/guides/custom-log-formats).
        format,omitempty:
          type: string
          description: The Amazon Kinesis stream to send logs to. Required.
        topic,omitempty:
          type: string
        region,omitempty:
          $ref: '#/components/schemas/AwsRegion'
          description: The secret key associated with the target Amazon Kinesis stream. Not required if `iam_role` is specified.
        secret_key,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: The access key associated with the target Amazon Kinesis stream. Not required if `iam_role` is specified.
        access_key,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: The ARN for an IAM role granting Fastly access to the target Amazon Kinesis stream. Not required if `access_key` and `secret_key` are provided.
        iam_role,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: The version of the custom logging format used for the configured endpoint. The logging call gets placed by default in `vcl_log` if `format_version` is set to `2` and in `vcl_deliver`
            if `format_version` is set to `1`.
        format_version,omitempty:
          type: string
          description: Date and time in ISO 8601 format.
        created_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        deleted_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        updated_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
        service_id,omitempty:
          type: string
        version,omitempty:
          type: string
    TLSBulkCertificateResponseDataAllOf:
      type: object
      properties:
        id,omitempty:
          type: string
        attributes,omitempty:
          $ref: '#/components/schemas/TLSBulkCertificateResponseAttributes'
    ServiceInvitation:
      type: object
      properties:
        data,omitempty:
          $ref: '#/components/schemas/ServiceInvitationData'
    ServiceListResponseAllOf:
      type: object
      properties:
        id,omitempty:
          type: string
          description: Current [version](https://www.fastly.com/documentation/reference/api/services/version/) of the service.
        version,omitempty:
          type: integer
          format: int32
          description: A list of [versions](https://www.fastly.com/documentation/reference/api/services/version/) associated with the service.
    RealtimeMeasurements:
      type: object
      properties:
        requests,omitempty:
          type: integer
          format: int64
          description: Number of log lines sent (alias for `log`).
        logging,omitempty:
          type: integer
          format: int64
          description: Number of log lines sent.
        log,omitempty:
          type: integer
          format: int64
          description: Total header bytes delivered (edge_resp_header_bytes + shield_resp_header_bytes).
        resp_header_bytes,omitempty:
          type: integer
          format: int64
          description: Total header bytes delivered (alias for resp_header_bytes).
        header_size,omitempty:
          type: integer
          format: int64
          description: Total body bytes delivered (edge_resp_body_bytes + shield_resp_body_bytes).
        resp_body_bytes,omitempty:
          type: integer
          format: int64
          description: Total body bytes delivered (alias for resp_body_bytes).
        body_size,omitempty:
          type: integer
          format: int64
          description: Number of cache hits.
        hits,omitempty:
          type: integer
          format: int64
          description: Number of cache misses.
        miss,omitempty:
          type: integer
          format: int64
          description: Number of requests that passed through the CDN without being cached.
        pass,omitempty:
          type: integer
          format: int64
          description: Number of requests that returned a synthetic response (i.e., response objects created with the `synthetic` VCL statement).
        synth,omitempty:
          type: integer
          format: int64
          description: Number of cache errors.
        errors,omitempty:
          type: integer
          format: int64
          description: Total amount of time spent processing cache hits (in seconds).
        hits_time,omitempty:
          type: number
          format: float
          description: Total amount of time spent processing cache misses (in seconds).
        miss_time,omitempty:
          type: number
          format: float
          description: A histogram. The value in each bucket is the number of requests to the origin whose responses arrived during the time period represented by the bucket. The key of each bucket represents
            the upper bound (in response time) of that bucket. The buckets vary in width and cover the time periods 0-10ms (in 1ms increments), 10-250ms (in 10ms increments), 250-1,000ms (in 50ms increments),
            1,000-3,000ms (in 100ms increments), 3,000-10,000ms (in 500 ms increments), 10,000-20,000ms (in 1,000ms increments), 20,000-60,000ms (in 5,000ms increments), and 60,000ms through infinity (in
            a single bucket).
        compute_requests,omitempty:
          type: integer
          format: int64
          description: The amount of active CPU time used to process your requests (in milliseconds).
        compute_execution_time_ms,omitempty:
          type: number
          format: float
          description: The amount of RAM used for your service by Fastly (in bytes).
        compute_ram_used,omitempty:
          type: integer
          format: int64
          description: The total, actual amount of time used to process your requests, including active CPU time (in milliseconds).
        compute_request_time_ms,omitempty:
          type: number
          format: float
          description: The total amount of request processing time you will be billed for, measured in 50 millisecond increments.
        compute_request_time_billed_ms,omitempty:
          type: number
          format: float
          description: Number of requests from edge to the shield POP.
        shield,omitempty:
          type: integer
          format: int64
          description: Number of requests that were received over IPv6.
        ipv6,omitempty:
          type: integer
          format: int64
          description: Number of responses that came from the Fastly Image Optimizer service. If the service receives 10 requests for an image, this stat will be 10 regardless of how many times the image
            was transformed.
        imgopto,omitempty:
          type: integer
          format: int64
          description: Number of responses that came from the Fastly Image Optimizer service via a shield.
        imgopto_shield,omitempty:
          type: integer
          format: int64
          description: Number of transforms performed by the Fastly Image Optimizer service.
        imgopto_transforms,omitempty:
          type: integer
          format: int64
          description: Number of responses that came from the Fastly On-the-Fly Packaging service for video-on-demand.
        otfp,omitempty:
          type: integer
          format: int64
          description: Number of responses that came from the Fastly On-the-Fly Packaging service for video-on-demand via a shield.
        otfp_shield,omitempty:
          type: integer
          format: int64
          description: Number of responses that were manifest files from the Fastly On-the-Fly Packaging service for video-on-demand.
        otfp_manifests,omitempty:
          type: integer
          format: int64
          description: Number of responses with the video segment or video manifest MIME type (i.e., application/x-mpegurl, application/vnd.apple.mpegurl, application/f4m, application/dash+xml, application/vnd.ms-sstr+xml,
            ideo/mp2t, audio/aac, video/f4f, video/x-flv, video/mp4, audio/mp4).
        video,omitempty:
          type: integer
          format: int64
          description: Number of responses with the PCI flag turned on.
        pci,omitempty:
          type: integer
          format: int64
          description: Number of requests received over HTTP/2.
        http2,omitempty:
          type: integer
          format: int64
          description: Number of requests received over HTTP/3.
        http3,omitempty:
          type: integer
          format: int64
          description: Number of restarts performed.
        restarts,omitempty:
          type: integer
          format: int64
          description: Total header bytes received.
        req_header_bytes,omitempty:
          type: integer
          format: int64
          description: Total body bytes received.
        req_body_bytes,omitempty:
          type: integer
          format: int64
          description: Total header bytes sent to origin.
        bereq_header_bytes,omitempty:
          type: integer
          format: int64
          description: Total body bytes sent to origin.
        bereq_body_bytes,omitempty:
          type: integer
          format: int64
          description: Number of requests that triggered a WAF rule and were blocked.
        waf_blocked,omitempty:
          type: integer
          format: int64
          description: Number of requests that triggered a WAF rule and were logged.
        waf_logged,omitempty:
          type: integer
          format: int64
          description: Number of requests that triggered a WAF rule and were passed.
        waf_passed,omitempty:
          type: integer
          format: int64
          description: Total header bytes received from requests that triggered a WAF rule.
        attack_req_header_bytes,omitempty:
          type: integer
          format: int64
          description: Total body bytes received from requests that triggered a WAF rule.
        attack_req_body_bytes,omitempty:
          type: integer
          format: int64
          description: Total bytes delivered for requests that triggered a WAF rule and returned a synthetic response.
        attack_resp_synth_bytes,omitempty:
          type: integer
          format: int64
          description: Total header bytes received from requests that triggered a WAF rule that was logged.
        attack_logged_req_header_bytes,omitempty:
          type: integer
          format: int64
          description: Total body bytes received from requests that triggered a WAF rule that was logged.
        attack_logged_req_body_bytes,omitempty:
          type: integer
          format: int64
          description: Total header bytes received from requests that triggered a WAF rule that was blocked.
        attack_blocked_req_header_bytes,omitempty:
          type: integer
          format: int64
          description: Total body bytes received from requests that triggered a WAF rule that was blocked.
        attack_blocked_req_body_bytes,omitempty:
          type: integer
          format: int64
          description: Total header bytes received from requests that triggered a WAF rule that was passed.
        attack_passed_req_header_bytes,omitempty:
          type: integer
          format: int64
          description: Total body bytes received from requests that triggered a WAF rule that was passed.
        attack_passed_req_body_bytes,omitempty:
          type: integer
          format: int64
          description: Total header bytes delivered via a shield.
        shield_resp_header_bytes,omitempty:
          type: integer
          format: int64
          description: Total body bytes delivered via a shield.
        shield_resp_body_bytes,omitempty:
          type: integer
          format: int64
          description: Total header bytes delivered from the Fastly On-the-Fly Packaging service for video-on-demand.
        otfp_resp_header_bytes,omitempty:
          type: integer
          format: int64
          description: Total body bytes delivered from the Fastly On-the-Fly Packaging service for video-on-demand.
        otfp_resp_body_bytes,omitempty:
          type: integer
          format: int64
          description: Total header bytes delivered via a shield for the Fastly On-the-Fly Packaging service for video-on-demand.
        otfp_shield_resp_header_bytes,omitempty:
          type: integer
          format: int64
          description: Total body bytes delivered via a shield for the Fastly On-the-Fly Packaging service for video-on-demand.
        otfp_shield_resp_body_bytes,omitempty:
          type: integer
          format: int64
          description: Total amount of time spent delivering a response via a shield from the Fastly On-the-Fly Packaging service for video-on-demand (in seconds).
        otfp_shield_time,omitempty:
          type: number
          format: float
          description: Total amount of time spent delivering a response from the Fastly On-the-Fly Packaging service for video-on-demand (in seconds).
        otfp_deliver_time,omitempty:
          type: number
          format: float
          description: Total header bytes delivered from the Fastly Image Optimizer service, including shield traffic.
        imgopto_resp_header_bytes,omitempty:
          type: integer
          format: int64
          description: Total body bytes delivered from the Fastly Image Optimizer service, including shield traffic.
        imgopto_resp_body_bytes,omitempty:
          type: integer
          format: int64
          description: Total header bytes delivered via a shield from the Fastly Image Optimizer service.
        imgopto_shield_resp_header_bytes,omitempty:
          type: integer
          format: int64
          description: Total body bytes delivered via a shield from the Fastly Image Optimizer service.
        imgopto_shield_resp_body_bytes,omitempty:
          type: integer
          format: int64
          description: Number of \"Informational\" category status codes delivered.
        status_1xx,omitempty:
          type: integer
          format: int64
          description: Number of \"Success\" status codes delivered.
        status_2xx,omitempty:
          type: integer
          format: int64
          description: Number of \"Redirection\" codes delivered.
        status_3xx,omitempty:
          type: integer
          format: int64
          description: Number of \"Client Error\" codes delivered.
        status_4xx,omitempty:
          type: integer
          format: int64
          description: Number of \"Server Error\" codes delivered.
        status_5xx,omitempty:
          type: integer
          format: int64
          description: Number of responses sent with status code 200 (Success).
        status_200,omitempty:
          type: integer
          format: int64
          description: Number of responses sent with status code 204 (No Content).
        status_204,omitempty:
          type: integer
          format: int64
          description: Number of responses sent with status code 206 (Partial Content).
        status_206,omitempty:
          type: integer
          format: int64
          description: Number of responses sent with status code 301 (Moved Permanently).
        status_301,omitempty:
          type: integer
          format: int64
          description: Number of responses sent with status code 302 (Found).
        status_302,omitempty:
          type: integer
          format: int64
          description: Number of responses sent with status code 304 (Not Modified).
        status_304,omitempty:
          type: integer
          format: int64
          description: Number of responses sent with status code 400 (Bad Request).
        status_400,omitempty:
          type: integer
          format: int64
          description: Number of responses sent with status code 401 (Unauthorized).
        status_401,omitempty:
          type: integer
          format: int64
          description: Number of responses sent with status code 403 (Forbidden).
        status_403,omitempty:
          type: integer
          format: int64
          description: Number of responses sent with status code 404 (Not Found).
        status_404,omitempty:
          type: integer
          format: int64
          description: Number of responses sent with status code 406 (Not Acceptable).
        status_406,omitempty:
          type: integer
          format: int64
          description: Number of responses sent with status code 416 (Range Not Satisfiable).
        status_416,omitempty:
          type: integer
          format: int64
          description: Number of responses sent with status code 429 (Too Many Requests).
        status_429,omitempty:
          type: integer
          format: int64
          description: Number of responses sent with status code 500 (Internal Server Error).
        status_500,omitempty:
          type: integer
          format: int64
          description: Number of responses sent with status code 501 (Not Implemented).
        status_501,omitempty:
          type: integer
          format: int64
          description: Number of responses sent with status code 502 (Bad Gateway).
        status_502,omitempty:
          type: integer
          format: int64
          description: Number of responses sent with status code 503 (Service Unavailable).
        status_503,omitempty:
          type: integer
          format: int64
          description: Number of responses sent with status code 504 (Gateway Timeout).
        status_504,omitempty:
          type: integer
          format: int64
          description: Number of responses sent with status code 505 (HTTP Version Not Supported).
        status_505,omitempty:
          type: integer
          format: int64
          description: Number of responses sent with status code 530.
        status_530,omitempty:
          type: integer
          format: int64
          description: Number of requests that were designated uncachable.
        uncacheable,omitempty:
          type: integer
          format: int64
          description: Total amount of time spent processing cache passes (in seconds).
        pass_time,omitempty:
          type: number
          format: float
          description: Number of requests that were received over TLS.
        tls,omitempty:
          type: integer
          format: int64
          description: Number of requests received over TLS 1.0.
        tls_v10,omitempty:
          type: integer
          format: int64
          description: Number of requests received over TLS 1.1.
        tls_v11,omitempty:
          type: integer
          format: int64
          description: Number of requests received over TLS 1.2.
        tls_v12,omitempty:
          type: integer
          format: int64
          description: Number of requests received over TLS 1.3.
        tls_v13,omitempty:
          type: integer
          format: int64
          description: Number of objects served that were under 1KB in size.
        object_size_1k,omitempty:
          type: integer
          format: int64
          description: Number of objects served that were between 1KB and 10KB in size.
        object_size_10k,omitempty:
          type: integer
          format: int64
          description: Number of objects served that were between 10KB and 100KB in size.
        object_size_100k,omitempty:
          type: integer
          format: int64
          description: Number of objects served that were between 100KB and 1MB in size.
        object_size_1m,omitempty:
          type: integer
          format: int64
          description: Number of objects served that were between 1MB and 10MB in size.
        object_size_10m,omitempty:
          type: integer
          format: int64
          description: Number of objects served that were between 10MB and 100MB in size.
        object_size_100m,omitempty:
          type: integer
          format: int64
          description: Number of objects served that were between 100MB and 1GB in size.
        object_size_1g,omitempty:
          type: integer
          format: int64
          description: Number of objects served that were larger than 1GB in size.
        object_size_other,omitempty:
          type: integer
          format: int64
          description: Time spent inside the `vcl_recv` Varnish subroutine (in nanoseconds).
        recv_sub_time,omitempty:
          type: number
          format: float
          description: Number of executions of the `vcl_recv` Varnish subroutine.
        recv_sub_count,omitempty:
          type: integer
          format: int64
          description: Time spent inside the `vcl_hash` Varnish subroutine (in nanoseconds).
        hash_sub_time,omitempty:
          type: number
          format: float
          description: Number of executions of the `vcl_hash` Varnish subroutine.
        hash_sub_count,omitempty:
          type: integer
          format: int64
          description: Time spent inside the `vcl_miss` Varnish subroutine (in nanoseconds).
        miss_sub_time,omitempty:
          type: number
          format: float
          description: Number of executions of the `vcl_miss` Varnish subroutine.
        miss_sub_count,omitempty:
          type: integer
          format: int64
          description: Time spent inside the `vcl_fetch` Varnish subroutine (in nanoseconds).
        fetch_sub_time,omitempty:
          type: number
          format: float
          description: Number of executions of the `vcl_fetch` Varnish subroutine.
        fetch_sub_count,omitempty:
          type: integer
          format: int64
          description: Time spent inside the `vcl_pass` Varnish subroutine (in nanoseconds).
        pass_sub_time,omitempty:
          type: number
          format: float
          description: Number of executions of the `vcl_pass` Varnish subroutine.
        pass_sub_count,omitempty:
          type: integer
          format: int64
          description: Time spent inside the `vcl_pipe` Varnish subroutine (in nanoseconds).
        pipe_sub_time,omitempty:
          type: number
          format: float
          description: Number of executions of the `vcl_pipe` Varnish subroutine.
        pipe_sub_count,omitempty:
          type: integer
          format: int64
          description: Time spent inside the `vcl_deliver` Varnish subroutine (in nanoseconds).
        deliver_sub_time,omitempty:
          type: number
          format: float
          description: Number of executions of the `vcl_deliver` Varnish subroutine.
        deliver_sub_count,omitempty:
          type: integer
          format: int64
          description: Time spent inside the `vcl_error` Varnish subroutine (in nanoseconds).
        error_sub_time,omitempty:
          type: number
          format: float
          description: Number of executions of the `vcl_error` Varnish subroutine.
        error_sub_count,omitempty:
          type: integer
          format: int64
          description: Time spent inside the `vcl_hit` Varnish subroutine (in nanoseconds).
        hit_sub_time,omitempty:
          type: number
          format: float
          description: Number of executions of the `vcl_hit` Varnish subroutine.
        hit_sub_count,omitempty:
          type: integer
          format: int64
          description: Time spent inside the `vcl_prehash` Varnish subroutine (in nanoseconds).
        prehash_sub_time,omitempty:
          type: number
          format: float
          description: Number of executions of the `vcl_prehash` Varnish subroutine.
        prehash_sub_count,omitempty:
          type: integer
          format: int64
          description: Time spent inside the `vcl_predeliver` Varnish subroutine (in nanoseconds).
        predeliver_sub_time,omitempty:
          type: number
          format: float
          description: Number of executions of the `vcl_predeliver` Varnish subroutine.
        predeliver_sub_count,omitempty:
          type: integer
          format: int64
          description: Total body bytes delivered for cache hits.
        hit_resp_body_bytes,omitempty:
          type: integer
          format: int64
          description: Total body bytes delivered for cache misses.
        miss_resp_body_bytes,omitempty:
          type: integer
          format: int64
          description: Total body bytes delivered for cache passes.
        pass_resp_body_bytes,omitempty:
          type: integer
          format: int64
          description: Total header bytes received by the Compute platform.
        compute_req_header_bytes,omitempty:
          type: integer
          format: int64
          description: Total body bytes received by the Compute platform.
        compute_req_body_bytes,omitempty:
          type: integer
          format: int64
          description: Total header bytes sent from Compute to end user.
        compute_resp_header_bytes,omitempty:
          type: integer
          format: int64
          description: Total body bytes sent from Compute to end user.
        compute_resp_body_bytes,omitempty:
          type: integer
          format: int64
          description: Number of video responses that came from the Fastly Image Optimizer service.
        imgvideo,omitempty:
          type: integer
          format: int64
          description: Number of video frames that came from the Fastly Image Optimizer service. A video frame is an individual image within a sequence of video.
        imgvideo_frames,omitempty:
          type: integer
          format: int64
          description: Total header bytes of video delivered from the Fastly Image Optimizer service.
        imgvideo_resp_header_bytes,omitempty:
          type: integer
          format: int64
          description: Total body bytes of video delivered from the Fastly Image Optimizer service.
        imgvideo_resp_body_bytes,omitempty:
          type: integer
          format: int64
          description: Number of video responses delivered via a shield that came from the Fastly Image Optimizer service.
        imgvideo_shield,omitempty:
          type: integer
          format: int64
          description: Number of video frames delivered via a shield that came from the Fastly Image Optimizer service. A video frame is an individual image within a sequence of video.
        imgvideo_shield_frames,omitempty:
          type: integer
          format: int64
          description: Total header bytes of video delivered via a shield from the Fastly Image Optimizer service.
        imgvideo_shield_resp_header_bytes,omitempty:
          type: integer
          format: int64
          description: Total body bytes of video delivered via a shield from the Fastly Image Optimizer service.
        imgvideo_shield_resp_body_bytes,omitempty:
          type: integer
          format: int64
          description: Total log bytes sent.
        log_bytes,omitempty:
          type: integer
          format: int64
          description: Number of requests sent by end users to Fastly.
        edge_requests,omitempty:
          type: integer
          format: int64
          description: Total header bytes delivered from Fastly to the end user.
        edge_resp_header_bytes,omitempty:
          type: integer
          format: int64
          description: Total body bytes delivered from Fastly to the end user.
        edge_resp_body_bytes,omitempty:
          type: integer
          format: int64
          description: Number of responses received from origin with a `304` status code in response to an `If-Modified-Since` or `If-None-Match` request. Under regular scenarios, a revalidation will imply
            a cache hit. However, if using Fastly Image Optimizer or segmented caching this may result in a cache miss.
        origin_revalidations,omitempty:
          type: integer
          format: int64
          description: Number of requests sent to origin.
        origin_fetches,omitempty:
          type: integer
          format: int64
          description: Total request header bytes sent to origin.
        origin_fetch_header_bytes,omitempty:
          type: integer
          format: int64
          description: Total request body bytes sent to origin.
        origin_fetch_body_bytes,omitempty:
          type: integer
          format: int64
          description: Total header bytes received from origin.
        origin_fetch_resp_header_bytes,omitempty:
          type: integer
          format: int64
          description: Total body bytes received from origin.
        origin_fetch_resp_body_bytes,omitempty:
          type: integer
          format: int64
          description: Number of responses received from origin with a `304` status code, in response to an `If-Modified-Since` or `If-None-Match` request to a shield. Under regular scenarios, a revalidation
            will imply a cache hit. However, if using segmented caching this may result in a cache miss.
        shield_revalidations,omitempty:
          type: integer
          format: int64
          description: Number of requests made from one Fastly POP to another, as part of shielding.
        shield_fetches,omitempty:
          type: integer
          format: int64
          description: Total request header bytes sent to a shield.
        shield_fetch_header_bytes,omitempty:
          type: integer
          format: int64
          description: Total request body bytes sent to a shield.
        shield_fetch_body_bytes,omitempty:
          type: integer
          format: int64
          description: Total response header bytes sent from a shield to the edge.
        shield_fetch_resp_header_bytes,omitempty:
          type: integer
          format: int64
          description: Total response body bytes sent from a shield to the edge.
        shield_fetch_resp_body_bytes,omitempty:
          type: integer
          format: int64
          description: Number of `Range` requests to origin for segments of resources when using segmented caching.
        segblock_origin_fetches,omitempty:
          type: integer
          format: int64
          description: Number of `Range` requests to a shield for segments of resources when using segmented caching.
        segblock_shield_fetches,omitempty:
          type: integer
          format: int64
          description: Number of \"Informational\" category status codes delivered by the Compute platform.
        compute_resp_status_1xx,omitempty:
          type: integer
          format: int64
          description: Number of \"Success\" category status codes delivered by the Compute platform.
        compute_resp_status_2xx,omitempty:
          type: integer
          format: int64
          description: Number of \"Redirection\" category status codes delivered by the Compute platform.
        compute_resp_status_3xx,omitempty:
          type: integer
          format: int64
          description: Number of \"Client Error\" category status codes delivered by the Compute platform.
        compute_resp_status_4xx,omitempty:
          type: integer
          format: int64
          description: Number of \"Server Error\" category status codes delivered by the Compute platform.
        compute_resp_status_5xx,omitempty:
          type: integer
          format: int64
          description: Number of requests sent by end users to Fastly that resulted in a hit at the edge.
        edge_hit_requests,omitempty:
          type: integer
          format: int64
          description: Number of requests sent by end users to Fastly that resulted in a miss at the edge.
        edge_miss_requests,omitempty:
          type: integer
          format: int64
          description: Total header bytes sent to backends (origins) by the Compute platform.
        compute_bereq_header_bytes,omitempty:
          type: integer
          format: int64
          description: Total body bytes sent to backends (origins) by the Compute platform.
        compute_bereq_body_bytes,omitempty:
          type: integer
          format: int64
          description: Total header bytes received from backends (origins) by the Compute platform.
        compute_beresp_header_bytes,omitempty:
          type: integer
          format: int64
          description: Total body bytes received from backends (origins) by the Compute platform.
        compute_beresp_body_bytes,omitempty:
          type: integer
          format: int64
          description: The total number of completed requests made to backends (origins) that returned cacheable content.
        origin_cache_fetches,omitempty:
          type: integer
          format: int64
          description: The total number of completed requests made to shields that returned cacheable content.
        shield_cache_fetches,omitempty:
          type: integer
          format: int64
          description: Number of backend requests started.
        compute_bereqs,omitempty:
          type: integer
          format: int64
          description: Number of backend request errors, including timeouts.
        compute_bereq_errors,omitempty:
          type: integer
          format: int64
          description: Number of times a guest exceeded its resource limit, includes heap, stack, globals, and code execution timeout.
        compute_resource_limit_exceeded,omitempty:
          type: integer
          format: int64
          description: Number of times a guest exceeded its heap limit.
        compute_heap_limit_exceeded,omitempty:
          type: integer
          format: int64
          description: Number of times a guest exceeded its stack limit.
        compute_stack_limit_exceeded,omitempty:
          type: integer
          format: int64
          description: Number of times a guest exceeded its globals limit.
        compute_globals_limit_exceeded,omitempty:
          type: integer
          format: int64
          description: Number of times a service experienced a guest code error.
        compute_guest_errors,omitempty:
          type: integer
          format: int64
          description: Number of times a service experienced a guest runtime error.
        compute_runtime_errors,omitempty:
          type: integer
          format: int64
          description: Body bytes delivered for edge hits.
        edge_hit_resp_body_bytes,omitempty:
          type: integer
          format: int64
          description: Header bytes delivered for edge hits.
        edge_hit_resp_header_bytes,omitempty:
          type: integer
          format: int64
          description: Body bytes delivered for edge misses.
        edge_miss_resp_body_bytes,omitempty:
          type: integer
          format: int64
          description: Header bytes delivered for edge misses.
        edge_miss_resp_header_bytes,omitempty:
          type: integer
          format: int64
          description: Body bytes received from origin for cacheable content.
        origin_cache_fetch_resp_body_bytes,omitempty:
          type: integer
          format: int64
          description: Header bytes received from an origin for cacheable content.
        origin_cache_fetch_resp_header_bytes,omitempty:
          type: integer
          format: int64
          description: Number of requests that resulted in a hit at a shield.
        shield_hit_requests,omitempty:
          type: integer
          format: int64
          description: Number of requests that resulted in a miss at a shield.
        shield_miss_requests,omitempty:
          type: integer
          format: int64
          description: Header bytes delivered for shield hits.
        shield_hit_resp_header_bytes,omitempty:
          type: integer
          format: int64
          description: Body bytes delivered for shield hits.
        shield_hit_resp_body_bytes,omitempty:
          type: integer
          format: int64
          description: Header bytes delivered for shield misses.
        shield_miss_resp_header_bytes,omitempty:
          type: integer
          format: int64
          description: Body bytes delivered for shield misses.
        shield_miss_resp_body_bytes,omitempty:
          type: integer
          format: int64
          description: Total header bytes received from end users over passthrough WebSocket connections.
        websocket_req_header_bytes,omitempty:
          type: integer
          format: int64
          description: Total message content bytes received from end users over passthrough WebSocket connections.
        websocket_req_body_bytes,omitempty:
          type: integer
          format: int64
          description: Total header bytes sent to end users over passthrough WebSocket connections.
        websocket_resp_header_bytes,omitempty:
          type: integer
          format: int64
          description: Total header bytes sent to backends over passthrough WebSocket connections.
        websocket_bereq_header_bytes,omitempty:
          type: integer
          format: int64
          description: Total message content bytes sent to backends over passthrough WebSocket connections.
        websocket_bereq_body_bytes,omitempty:
          type: integer
          format: int64
          description: Total header bytes received from backends over passthrough WebSocket connections.
        websocket_beresp_header_bytes,omitempty:
          type: integer
          format: int64
          description: Total message content bytes received from backends over passthrough WebSocket connections.
        websocket_beresp_body_bytes,omitempty:
          type: integer
          format: int64
          description: Total duration of passthrough WebSocket connections with end users.
        websocket_conn_time_ms,omitempty:
          type: integer
          format: int64
          description: Total message content bytes sent to end users over passthrough WebSocket connections.
        websocket_resp_body_bytes,omitempty:
          type: integer
          format: int64
          description: Total published messages received from the publish API endpoint.
        fanout_recv_publishes,omitempty:
          type: integer
          format: int64
          description: Total published messages sent to end users.
        fanout_send_publishes,omitempty:
          type: integer
          format: int64
          description: The total number of class a operations for the KV store.
        kv_store_class_a_operations,omitempty:
          type: integer
          format: int64
          description: The total number of class b operations for the KV store.
        kv_store_class_b_operations,omitempty:
          type: integer
          format: int64
          description: Use kv_store_class_a_operations.
        object_store_class_a_operations,omitempty:
          type: integer
          format: int64
          description: Use kv_store_class_b_operations.
        object_store_class_b_operations,omitempty:
          type: integer
          format: int64
          description: Total header bytes received from end users over Fanout connections.
        fanout_req_header_bytes,omitempty:
          type: integer
          format: int64
          description: Total body or message content bytes received from end users over Fanout connections.
        fanout_req_body_bytes,omitempty:
          type: integer
          format: int64
          description: Total header bytes sent to end users over Fanout connections.
        fanout_resp_header_bytes,omitempty:
          type: integer
          format: int64
          description: Total body or message content bytes sent to end users over Fanout connections, excluding published message content.
        fanout_resp_body_bytes,omitempty:
          type: integer
          format: int64
          description: Total header bytes sent to backends over Fanout connections.
        fanout_bereq_header_bytes,omitempty:
          type: integer
          format: int64
          description: Total body or message content bytes sent to backends over Fanout connections.
        fanout_bereq_body_bytes,omitempty:
          type: integer
          format: int64
          description: Total header bytes received from backends over Fanout connections.
        fanout_beresp_header_bytes,omitempty:
          type: integer
          format: int64
          description: Total body or message content bytes received from backends over Fanout connections.
        fanout_beresp_body_bytes,omitempty:
          type: integer
          format: int64
          description: Total duration of Fanout connections with end users.
        fanout_conn_time_ms,omitempty:
          type: integer
          format: int64
          description: For HTTP/2, the number of connections the limit-streams action was applied to. The limit-streams action caps the allowed number of concurrent streams in a connection.
        ddos_action_limit_streams_connections,omitempty:
          type: integer
          format: int64
          description: For HTTP/2, the number of requests made on a connection for which the limit-streams action was taken. The limit-streams action caps the allowed number of concurrent streams in a connection.
        ddos_action_limit_streams_requests,omitempty:
          type: integer
          format: int64
          description: The number of times the tarpit-accept action was taken. The tarpit-accept action adds a delay when accepting future connections.
        ddos_action_tarpit_accept,omitempty:
          type: integer
          format: int64
          description: The number of times the tarpit action was taken. The tarpit action delays writing the response to the client.
        ddos_action_tarpit,omitempty:
          type: integer
          format: int64
          description: The number of times the close action was taken. The close action aborts the connection as soon as possible. The close action takes effect either right after accept, right after the
            client hello, or right after the response was sent.
        ddos_action_close,omitempty:
          type: integer
          format: int64
          description: The number of times the blackhole action was taken. The blackhole action quietly closes a TCP connection without sending a reset. The blackhole action quietly closes a TCP connection
            without notifying its peer (all TCP state is dropped).
        ddos_action_blackhole,omitempty:
          type: integer
          format: int64
          description: The number of challenge-start tokens created.
        bot_challenge_starts,omitempty:
          type: integer
          format: int64
          description: The number of challenge-complete tokens that passed validation.
        bot_challenge_complete_tokens_passed,omitempty:
          type: integer
          format: int64
          description: The number of challenge-complete tokens that failed validation.
        bot_challenge_complete_tokens_failed,omitempty:
          type: integer
          format: int64
          description: The number of challenge-complete tokens checked.
        bot_challenge_complete_tokens_checked,omitempty:
          type: integer
          format: int64
          description: The number of challenge-complete tokens not checked because the feature was disabled.
        bot_challenge_complete_tokens_disabled,omitempty:
          type: integer
          format: int64
          description: The number of challenges issued. For example, the issuance of a CAPTCHA challenge.
        bot_challenges_issued,omitempty:
          type: integer
          format: int64
          description: The number of successful challenge solutions processed. For example, a correct CAPTCHA solution.
        bot_challenges_succeeded,omitempty:
          type: integer
          format: int64
          description: The number of failed challenge solutions processed. For example, an incorrect CAPTCHA solution.
        bot_challenges_failed,omitempty:
          type: integer
          format: int64
          description: The number of challenge-complete tokens issued. For example, issuing a challenge-complete token after a series of CAPTCHA challenges ending in success.
        bot_challenge_complete_tokens_issued,omitempty:
          type: integer
          format: int64
          description: The number of times the downgrade action was taken. The downgrade action restricts the client to http1.
        ddos_action_downgrade,omitempty:
          type: integer
          format: int64
          description: The number of connections the downgrade action was applied to. The downgrade action restricts the connection to http1.
        ddos_action_downgraded_connections,omitempty:
          type: integer
          format: int64
          description: Number of cache hits for a VCL service.
        all_hit_requests,omitempty:
          type: integer
          format: int64
          description: Number of cache misses for a VCL service.
        all_miss_requests,omitempty:
          type: integer
          format: int64
          description: Number of requests that passed through the CDN without being cached for a VCL service.
        all_pass_requests,omitempty:
          type: integer
          format: int64
          description: Number of cache errors for a VCL service.
        all_error_requests,omitempty:
          type: integer
          format: int64
          description: Number of requests that returned a synthetic response (i.e., response objects created with the `synthetic` VCL statement) for a VCL service.
        all_synth_requests,omitempty:
          type: integer
          format: int64
          description: Number of requests sent by end users to Fastly that resulted in a hit at the edge for a VCL service.
        all_edge_hit_requests,omitempty:
          type: integer
          format: int64
          description: Number of requests sent by end users to Fastly that resulted in a miss at the edge for a VCL service.
        all_edge_miss_requests,omitempty:
          type: integer
          format: int64
          description: Number of \"Informational\" category status codes delivered for all sources.
        all_status_1xx,omitempty:
          type: integer
          format: int64
          description: Number of \"Success\" status codes delivered for all sources.
        all_status_2xx,omitempty:
          type: integer
          format: int64
          description: Number of \"Redirection\" codes delivered for all sources.
        all_status_3xx,omitempty:
          type: integer
          format: int64
          description: Number of \"Client Error\" codes delivered for all sources.
        all_status_4xx,omitempty:
          type: integer
          format: int64
          description: Number of \"Server Error\" codes delivered for all sources.
        all_status_5xx,omitempty:
          type: integer
          format: int64
          description: Origin Offload measures the ratio of bytes served to end users that were cached by Fastly, over the bytes served to end users, between 0 and 1. ((`edge_resp_body_bytes` + `edge_resp_header_bytes`)
            - (`origin_fetch_resp_body_bytes` + `origin_fetch_resp_header_bytes`)) / (`edge_resp_body_bytes` + `edge_resp_header_bytes`).
        origin_offload,omitempty:
          type: number
          format: float
          description: Number of requests where Fastly responded with 400 due to the request being a GET or HEAD request containing a body.
        request_denied_get_head_body,omitempty:
          type: integer
          format: int64
          description: Number of requests classified as a DDoS attack against a customer origin or service.
        ddos_protection_requests_detect_count,omitempty:
          type: integer
          format: int64
          description: Number of requests classified as a DDoS attack against a customer origin or service that were mitigated by the Fastly platform.
        ddos_protection_requests_mitigate_count,omitempty:
          type: integer
          format: int64
          description: Number of requests analyzed for DDoS attacks against a customer origin or service, but with no DDoS detected.
        ddos_protection_requests_allow_count,omitempty:
          type: integer
          format: int64
          description: A count of the number of Class A Object Storage operations.
        object_storage_class_a_operations_count,omitempty:
          type: integer
          format: int64
          description: A count of the number of Class B Object Storage operations.
        object_storage_class_b_operations_count,omitempty:
          type: integer
          format: int64
          description: Number of requests received by AI Accelerator.
        aia_requests,omitempty:
          type: integer
          format: int64
          description: Number of \"Informational\" category status codes received from AI provider.
        aia_status_1xx,omitempty:
          type: integer
          format: int64
          description: Number of \"Success\" status codes received from AI provider.
        aia_status_2xx,omitempty:
          type: integer
          format: int64
          description: Number of \"Redirection\" received from AI provider.
        aia_status_3xx,omitempty:
          type: integer
          format: int64
          description: Number of \"Client Error\" received from AI provider.
        aia_status_4xx,omitempty:
          type: integer
          format: int64
          description: Number of \"Server Error\" received from AI provider.
        aia_status_5xx,omitempty:
          type: integer
          format: int64
          description: The usage tokens associated with the response returned from the AI Accelerator cache.
        aia_response_usage_tokens,omitempty:
          type: integer
          format: int64
          description: The number of usage tokens reported by the request to the origin from AI Accelerator.
        aia_origin_usage_tokens,omitempty:
          type: integer
          format: int64
          description: The estimated amount of time saved by responses served from the AI Accelerator semantic cache.
        aia_estimated_time_saved_ms,omitempty:
          type: integer
          format: int64
          description: Number of requests that were collapsed and satisfied by a usable cache object.
        request_collapse_usable_count,omitempty:
          type: integer
          format: int64
          description: Number of requests that were collapsed and unable to be satisfied by the resulting cache object.
        request_collapse_unusable_count,omitempty:
          type: integer
          format: int64
          description: Number of cache operations executed by the Compute platform.
        compute_cache_operations_count,omitempty:
          type: integer
          format: int64
    SchemasUserResponseReadOnly:
      type: object
      properties:
        id,omitempty:
          type: string
          description: The alphanumeric string identifying a email login.
        email_hash,omitempty:
          type: string
        customer_id,omitempty:
          type: string
    DomainInspectorResponseBodyEnable:
      type: object
      properties:
        product,omitempty:
          $ref: '#/components/schemas/DomainInspectorResponseProductProduct'
        service,omitempty:
          $ref: '#/components/schemas/BotManagementResponseServiceService'
        _links,omitempty:
          $ref: '#/components/schemas/DomainInspectorResponseLinksLinks'
    LoggingDatadogAdditional:
      type: object
      properties:
        region,omitempty:
          type: string
          description: A Fastly [log format string](https://docs.fastly.com/en/guides/custom-log-formats). Must produce valid JSON that Datadog can ingest.
        format,omitempty:
          type: string
          description: The API key from your Datadog account. Required.
        token,omitempty:
          type: string
    LoggingRequestCapsCommon:
      type: object
      properties:
        request_max_entries,omitempty:
          type: integer
          format: int32
          description: The maximum number of bytes sent in one request. Defaults `0` for unbounded.
        request_max_bytes,omitempty:
          type: integer
          format: int32
    TLSCertificateData:
      type: object
      properties:
        type,omitempty:
          $ref: '#/components/schemas/TypeTLSCertificate'
        attributes,omitempty:
          $ref: '#/components/schemas/TLSCertificateDataAttributes'
        relationships,omitempty:
          $ref: '#/components/schemas/RelationshipTLSDomains'
    NgwafResponseEnable:
      type: object
      properties:
        product,omitempty:
          $ref: '#/components/schemas/NgwafResponseProductProduct'
        service,omitempty:
          $ref: '#/components/schemas/BotManagementResponseServiceService'
        _links,omitempty:
          $ref: '#/components/schemas/NgwafResponseLinksLinks'
    LoggingSftpResponse:
      type: object
      properties:
        name,omitempty:
          type: string
          description: Where in the generated VCL the logging call should be placed. If not set, endpoints with `format_version` of 2 are placed in `vcl_log` and those with `format_version` of 1 are placed
            in `vcl_deliver`.
        placement,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: The name of an existing condition in the configured endpoint, or leave blank to always execute.
        response_condition,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: A Fastly [log format string](https://docs.fastly.com/en/guides/custom-log-formats).
        format,omitempty:
          type: string
          description: The version of the custom logging format used for the configured endpoint. The logging call gets placed by default in `vcl_log` if `format_version` is set to `2` and in `vcl_deliver`
            if `format_version` is set to `1`.
        format_version,omitempty:
          type: string
          description: How the message should be formatted.
        message_type,omitempty:
          type: string
          description: A timestamp format
        timestamp_format,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: The codec used for compressing your logs. Valid values are `zstd`, `snappy`, and `gzip`. Specifying both `compression_codec` and `gzip_level` in the same API request will result in
            an error.
        compression_codec,omitempty:
          type: string
          description: Date and time in ISO 8601 format.
        created_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        deleted_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        updated_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
        service_id,omitempty:
          type: string
        version,omitempty:
          type: string
          description: The password for the server. If both `password` and `secret_key` are passed, `secret_key` will be used in preference.
        password,omitempty:
          type: string
          description: The path to upload logs to.
        path,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: A PGP public key that Fastly will use to encrypt your log files before writing them to disk.
        public_key,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: The SSH private key for the server. If both `password` and `secret_key` are passed, `secret_key` will be used in preference.
        secret_key,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: A list of host keys for all hosts we can connect to over SFTP.
        ssh_known_hosts,omitempty:
          type: string
          description: The username for the server.
        user,omitempty:
          type: string
          description: A hostname or IPv4 address.
        address,omitempty:
          type: string
          description: The port number.
        port,omitempty:
          type: string
          description: How frequently log files are finalized so they can be available for reading (in seconds).
        period,omitempty:
          type: string
          description: The level of gzip encoding when sending logs (default `0`, no compression). Specifying both `compression_codec` and `gzip_level` in the same API request will result in an error.
        gzip_level,omitempty:
          type: integer
          format: int32
    CustomerResponse:
      type: object
      properties:
        billing_contact_id,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: Customer's current network revenue type.
        billing_network_type,omitempty:
          type: string
          description: Used for adding purchased orders to customer's account.
        billing_ref,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: Whether this customer can view or edit wordpress.
        can_configure_wordpress,omitempty:
          $ref: '#/components/schemas/NullableBool'
          description: Whether this customer can reset passwords.
        can_reset_passwords,omitempty:
          type: boolean
          description: Whether this customer can upload VCL.
        can_upload_vcl,omitempty:
          type: boolean
          description: Specifies whether 2FA is forced or not forced on the customer account. Logs out non-2FA users once 2FA is force enabled.
        force_2fa,omitempty:
          type: boolean
          description: Specifies whether SSO is forced or not forced on the customer account.
        force_sso,omitempty:
          type: boolean
          description: Specifies whether the account has access or does not have access to the account panel.
        has_account_panel,omitempty:
          type: boolean
          description: Specifies whether the account has access or does not have access to the improved events.
        has_improved_events,omitempty:
          type: boolean
          description: Whether this customer can view or edit the SSL config.
        has_improved_ssl_config,omitempty:
          type: boolean
          description: Specifies whether the account has enabled or not enabled openstack logging.
        has_openstack_logging,omitempty:
          type: boolean
          description: Specifies whether the account can edit PCI for a service.
        has_pci,omitempty:
          type: boolean
          description: Specifies whether PCI passwords are required for the account.
        has_pci_passwords,omitempty:
          type: boolean
          description: The range of IP addresses authorized to access the customer account.
        ip_whitelist,omitempty:
          type: string
          description: The alphanumeric string identifying the account's legal contact.
        legal_contact_id,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: The name of the customer, generally the company name.
        name,omitempty:
          type: string
          description: The alphanumeric string identifying the account owner.
        owner_id,omitempty:
          type: string
          description: The phone number associated with the account.
        phone_number,omitempty:
          type: string
          description: The postal address associated with the account.
        postal_address,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: The pricing plan this customer is under.
        pricing_plan,omitempty:
          type: string
          description: The alphanumeric string identifying the pricing plan.
        pricing_plan_id,omitempty:
          type: string
          description: The alphanumeric string identifying the account's security contact.
        security_contact_id,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: The alphanumeric string identifying the account's technical contact.
        technical_contact_id,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: Date and time in ISO 8601 format.
        created_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        deleted_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        updated_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
        id,omitempty:
          type: string
    OriginInspectorResponseProductProduct:
      type: object
      properties:
        id,omitempty:
          type: string
          description: Name of the object
        object,omitempty:
          type: string
    LoggingPapertrailResponse:
      type: object
      properties:
        name,omitempty:
          type: string
          description: Where in the generated VCL the logging call should be placed. If not set, endpoints with `format_version` of 2 are placed in `vcl_log` and those with `format_version` of 1 are placed
            in `vcl_deliver`.
        placement,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: The name of an existing condition in the configured endpoint, or leave blank to always execute.
        response_condition,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: A Fastly [log format string](https://docs.fastly.com/en/guides/custom-log-formats).
        format,omitempty:
          type: string
          description: The version of the custom logging format used for the configured endpoint. The logging call gets placed by default in `vcl_log` if `format_version` is set to `2` and in `vcl_deliver`
            if `format_version` is set to `1`.
        format_version,omitempty:
          type: string
          description: A hostname or IPv4 address.
        address,omitempty:
          type: string
          description: The port number.
        port,omitempty:
          type: integer
          format: int32
          description: Date and time in ISO 8601 format.
        created_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        deleted_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        updated_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
        service_id,omitempty:
          type: string
        version,omitempty:
          type: string
    PackageResponseAllOf:
      type: object
      properties:
        id,omitempty:
          type: string
    ModelPackage:
      type: object
      properties:
        metadata,omitempty:
          $ref: '#/components/schemas/PackageMetadata'
    RelationshipCustomer:
      type: object
      properties:
        customer,omitempty:
          $ref: '#/components/schemas/RelationshipCustomerCustomer'
    Realtime:
      type: object
      properties:
        Timestamp,omitempty:
          type: integer
          format: int32
          description: How long the system will wait before aggregating messages for each second. The most recent data returned will have happened at the moment of the request, minus the aggregation delay.
        AggregateDelay,omitempty:
          type: integer
          format: int64
          description: A list of [records](#record-data-model), each representing one second of time.
    ComputeACLList:
      type: object
      properties:
        meta,omitempty:
          $ref: '#/components/schemas/ComputeACLListMeta'
    ServiceAuthorizationResponse:
      type: object
      properties:
        data,omitempty:
          $ref: '#/components/schemas/ServiceAuthorizationResponseData'
    RelationshipTLSConfigurations:
      type: object
      properties:
        tls_configurations,omitempty:
          $ref: '#/components/schemas/RelationshipTLSConfigurationsTLSConfigurations'
    BrotliCompressionResponseLinksLinks:
      type: object
      properties:
        self,omitempty:
          type: string
          description: Location of the service resource
        service,omitempty:
          type: string
    HistoricalStatsByServiceResponse:
      type: object
      properties:
        status,omitempty:
          type: string
        meta,omitempty:
          $ref: '#/components/schemas/HistoricalMeta'
          description: If the query was not successful, this will provide a string that explains why.
        msg,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: Contains the results of the query, organized by *service ID*, into arrays where each element describes one service over a *time span*.
    AiAcceleratorResponseProduct:
      type: object
      properties:
        product,omitempty:
          $ref: '#/components/schemas/AiAcceleratorResponseProductProduct'
    FanoutResponseBodyEnable:
      type: object
      properties:
        product,omitempty:
          $ref: '#/components/schemas/FanoutResponseProductProduct'
        service,omitempty:
          $ref: '#/components/schemas/BotManagementResponseServiceService'
        _links,omitempty:
          $ref: '#/components/schemas/FanoutResponseLinksLinks'
    LoggingKinesisAdditional:
      type: object
      properties:
        name,omitempty:
          type: string
        placement,omitempty:
          $ref: '#/components/schemas/NullableLoggingPlacement'
          description: A Fastly [log format string](https://docs.fastly.com/en/guides/custom-log-formats).
        format,omitempty:
          type: string
          description: The Amazon Kinesis stream to send logs to. Required.
        topic,omitempty:
          type: string
        region,omitempty:
          $ref: '#/components/schemas/AwsRegion'
          description: The secret key associated with the target Amazon Kinesis stream. Not required if `iam_role` is specified.
        secret_key,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: The access key associated with the target Amazon Kinesis stream. Not required if `iam_role` is specified.
        access_key,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: The ARN for an IAM role granting Fastly access to the target Amazon Kinesis stream. Not required if `access_key` and `secret_key` are provided.
        iam_role,omitempty:
          $ref: '#/components/schemas/NullableString'
    ValidatorResultData:
      type: object
      properties:
        id,omitempty:
          type: string
        type,omitempty:
          type: string
        attributes,omitempty:
          $ref: '#/components/schemas/ValidatorResultDataAttributes'
    LogExplorerInsightsResponseService:
      type: object
      properties:
        service,omitempty:
          $ref: '#/components/schemas/BotManagementResponseServiceService'
    AiAcceleratorResponseProductProduct:
      type: object
      properties:
        id,omitempty:
          type: string
          description: Name of the object
        object,omitempty:
          type: string
    DdosProtectionResponseConfigure:
      type: object
      properties:
        product,omitempty:
          $ref: '#/components/schemas/DdosProtectionResponseProductProduct'
        service,omitempty:
          $ref: '#/components/schemas/BotManagementResponseServiceService'
        configuration,omitempty:
          $ref: '#/components/schemas/DdosProtectionResponseConfigurationConfiguration'
        _links,omitempty:
          $ref: '#/components/schemas/DdosProtectionResponseLinksLinks'
    LoggingSumologicAdditional:
      type: object
      properties:
        message_type,omitempty:
          $ref: '#/components/schemas/LoggingMessageType'
          description: The URL to post logs to.
        url,omitempty:
          type: string
    LoggingDatadogResponse:
      type: object
      properties:
        name,omitempty:
          type: string
          description: Where in the generated VCL the logging call should be placed. If not set, endpoints with `format_version` of 2 are placed in `vcl_log` and those with `format_version` of 1 are placed
            in `vcl_deliver`.
        placement,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: The name of an existing condition in the configured endpoint, or leave blank to always execute.
        response_condition,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: A Fastly [log format string](https://docs.fastly.com/en/guides/custom-log-formats). Must produce valid JSON that Datadog can ingest.
        format,omitempty:
          type: string
          description: The version of the custom logging format used for the configured endpoint. The logging call gets placed by default in `vcl_log` if `format_version` is set to `2` and in `vcl_deliver`
            if `format_version` is set to `1`.
        format_version,omitempty:
          type: string
          description: The region that log data will be sent to.
        region,omitempty:
          type: string
          description: The API key from your Datadog account. Required.
        token,omitempty:
          type: string
          description: Date and time in ISO 8601 format.
        created_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        deleted_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        updated_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
        service_id,omitempty:
          type: string
        version,omitempty:
          type: string
    LoggingLogglyResponse:
      type: object
      properties:
        name,omitempty:
          type: string
          description: Where in the generated VCL the logging call should be placed. If not set, endpoints with `format_version` of 2 are placed in `vcl_log` and those with `format_version` of 1 are placed
            in `vcl_deliver`.
        placement,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: The name of an existing condition in the configured endpoint, or leave blank to always execute.
        response_condition,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: A Fastly [log format string](https://docs.fastly.com/en/guides/custom-log-formats).
        format,omitempty:
          type: string
          description: The version of the custom logging format used for the configured endpoint. The logging call gets placed by default in `vcl_log` if `format_version` is set to `2` and in `vcl_deliver`
            if `format_version` is set to `1`.
        format_version,omitempty:
          type: string
          description: The token to use for authentication ([https://www.loggly.com/docs/customer-token-authentication-token/](https://www.loggly.com/docs/customer-token-authentication-token/)).
        token,omitempty:
          type: string
          description: Date and time in ISO 8601 format.
        created_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        deleted_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        updated_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
        service_id,omitempty:
          type: string
        version,omitempty:
          type: string
    RelationshipTLSConfigurationTLSConfiguration:
      type: object
      properties:
        data,omitempty:
          $ref: '#/components/schemas/RelationshipMemberTLSConfiguration'
    VersionResponseAllOf:
      type: object
      properties:
        service_id,omitempty:
          type: string
          description: A list of environments where the service has been deployed.
    LoggingKafkaAdditional:
      type: object
      properties:
        topic,omitempty:
          type: string
          description: A comma-separated list of IP addresses or hostnames of Kafka brokers. Required.
        brokers,omitempty:
          type: string
          description: The codec used for compression of your logs.
        compression_codec,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: The number of acknowledgements a leader must receive before a write is considered successful.
        required_acks,omitempty:
          type: integer
          format: int32
          description: The maximum number of bytes sent in one request. Defaults `0` (no limit).
        request_max_bytes,omitempty:
          type: integer
          format: int32
          description: Enables parsing of key=value tuples from the beginning of a logline, turning them into [record headers](https://cwiki.apache.org/confluence/display/KAFKA/KIP-82+-+Add+Record+Headers).
        parse_log_keyvals,omitempty:
          type: boolean
          description: SASL authentication method.
        auth_method,omitempty:
          type: string
          description: SASL user.
        user,omitempty:
          type: string
          description: SASL password.
        password,omitempty:
          type: string
        use_tls,omitempty:
          $ref: '#/components/schemas/LoggingUseTLSString'
    ResourceResponseAllOf:
      type: object
      properties:
        id,omitempty:
          type: string
          description: The path to the resource.
        href,omitempty:
          type: string
          description: Alphanumeric string identifying the service.
        service_id,omitempty:
          type: string
          description: Integer identifying a service version.
        version,omitempty:
          type: integer
          format: int32
        resource_type,omitempty:
          $ref: '#/components/schemas/TypeResource'
    HTTPStreamFormat:
      type: object
      properties:
        content,omitempty:
          type: string
          description: A fragment of body data as a base64-encoded binary blob.
        content-bin,omitempty:
          type: string
    LoggingHoneycombAdditional:
      type: object
      properties:
        format,omitempty:
          type: string
          description: The Honeycomb Dataset you want to log to.
        dataset,omitempty:
          type: string
          description: The Write Key from the Account page of your Honeycomb account.
        token,omitempty:
          type: string
    InlineResponse200:
      type: object
      properties:
        status,omitempty:
          type: string
    ACLEntryResponseAllOf:
      type: object
      properties:
        acl_id,omitempty:
          type: string
        id,omitempty:
          type: string
        service_id,omitempty:
          type: string
    FanoutResponseService:
      type: object
      properties:
        service,omitempty:
          $ref: '#/components/schemas/BotManagementResponseServiceService'
    LogExplorerInsightsResponseLinks:
      type: object
      properties:
        _links,omitempty:
          $ref: '#/components/schemas/LogExplorerInsightsResponseLinksLinks'
    RelationshipTLSDomainTLSDomain:
      type: object
      properties:
        data,omitempty:
          $ref: '#/components/schemas/RelationshipMemberTLSDomain'
    InlineResponse2006:
      type: object
      properties:
        meta,omitempty:
          $ref: '#/components/schemas/PaginationCursorMeta'
    FanoutResponseCustomer:
      type: object
      properties:
        customer,omitempty:
          $ref: '#/components/schemas/BotManagementResponseCustomerCustomer'
    DomainInspectorResponseBodyGetAllServices:
      type: object
      properties:
        product,omitempty:
          $ref: '#/components/schemas/DomainInspectorResponseProductProduct'
        customer,omitempty:
          $ref: '#/components/schemas/BotManagementResponseCustomerCustomer'
          description: A list of services with Domain Inspector enabled.
        _links,omitempty:
          $ref: '#/components/schemas/DomainInspectorResponseLinksGetAllServicesLinks'
    RelationshipCommonName:
      type: object
      properties:
        common_name,omitempty:
          $ref: '#/components/schemas/RelationshipMemberTLSDomain'
    TLSPrivateKeyResponseData:
      type: object
      properties:
        type,omitempty:
          $ref: '#/components/schemas/TypeTLSPrivateKey'
        id,omitempty:
          type: string
        attributes,omitempty:
          $ref: '#/components/schemas/TLSPrivateKeyResponseAttributes'
    Usagemetric:
      type: object
      properties:
        month,omitempty:
          type: string
          description: The usage type identifier for the usage. This is a single, billable metric for the product.
        usage_type,omitempty:
          type: string
          description: Full name of the product usage type as it might appear on a customer's invoice.
        name,omitempty:
          type: string
          description: The geographical area applicable for regionally based products.
        region,omitempty:
          type: string
          description: The unit for the usage as shown on an invoice. If there is no explicit unit, this field will be \"unit\" (e.g., a request with `product_id` of 'cdn_usage' and `usage_type` of 'North
            America Requests' has no unit, and will return \"unit\").
        unit,omitempty:
          type: string
          description: The quantity of the usage for the product.
        quantity,omitempty:
          type: number
          format: float
          description: The raw units measured for the product.
        raw_quantity,omitempty:
          type: number
          format: float
          description: The product identifier associated with the usage type. This corresponds to a Fastly product offering.
        product_id,omitempty:
          type: string
          description: The date when the usage metric was last updated.
        last_updated_at,omitempty:
          type: string
    UpdateBillingAddressRequest:
      type: object
      properties:
        skip_verification,omitempty:
          type: boolean
        data,omitempty:
          $ref: '#/components/schemas/UpdateBillingAddressRequestData'
    ContactResponseAllOf:
      type: object
      properties:
        id,omitempty:
          type: string
    DdosProtectionResponseLinksGetAllServices:
      type: object
      properties:
        _links,omitempty:
          $ref: '#/components/schemas/DdosProtectionResponseLinksGetAllServicesLinks'
    ServiceAuthorizationData:
      type: object
      properties:
        type,omitempty:
          $ref: '#/components/schemas/TypeServiceAuthorization'
        attributes,omitempty:
          $ref: '#/components/schemas/ServiceAuthorizationDataAttributes'
        relationships,omitempty:
          $ref: '#/components/schemas/ServiceAuthorizationDataRelationships'
    Dictionary:
      type: object
      properties:
        name,omitempty:
          type: string
          description: Determines if items in the dictionary are readable or not.
        write_only,omitempty:
          type: boolean
    LoggingS3Additional:
      type: object
      properties:
        access_key,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: The access control list (ACL) specific request header. See the AWS documentation for [Access Control List (ACL) Specific Request Headers](https://docs.aws.amazon.com/AmazonS3/latest/API/mpUploadInitiate.html#initiate-mpu-acl-specific-request-headers)
            for more information.
        acl,omitempty:
          type: string
          description: The bucket name for S3 account.
        bucket_name,omitempty:
          type: string
          description: The domain of the Amazon S3 endpoint.
        domain,omitempty:
          type: string
          description: The Amazon Resource Name (ARN) for the IAM role granting Fastly access to S3. Not required if `access_key` and `secret_key` are provided.
        iam_role,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: The path to upload logs to.
        path,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: A PGP public key that Fastly will use to encrypt your log files before writing them to disk.
        public_key,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: The S3 redundancy level.
        redundancy,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: The secret key for your S3 account. Not required if `iam_role` is provided.
        secret_key,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: Optional server-side KMS Key ID. Must be set if `server_side_encryption` is set to `aws:kms` or `AES256`.
        server_side_encryption_kms_key_id,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: Set this to `AES256` or `aws:kms` to enable S3 Server Side Encryption.
        server_side_encryption,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: The maximum number of bytes for each uploaded file. A value of 0 can be used to indicate there is no limit on the size of uploaded files, otherwise the minimum value is 1048576 bytes
            (1 MiB.)
        file_max_bytes,omitempty:
          type: integer
          format: int32
    TLSConfigurationDataAttributes:
      type: object
      properties:
        name,omitempty:
          type: string
    PoolResponseCommon:
      type: object
      properties:
        between_bytes_timeout,omitempty:
          type: string
          description: How long to wait for a timeout in milliseconds.
        connect_timeout,omitempty:
          type: string
          description: How long to wait for the first byte in milliseconds.
        first_byte_timeout,omitempty:
          type: string
          description: Maximum number of connections.
        max_conn_default,omitempty:
          type: string
          description: Be strict on checking TLS certs.
        tls_check_cert,omitempty:
          $ref: '#/components/schemas/NullableString'
        id,omitempty:
          type: string
    RelationshipTLSDNSRecordsResponse:
      type: object
      properties:
        dns_records,omitempty:
          $ref: '#/components/schemas/RelationshipTLSDNSRecordsResponseDNSRecords'
    ValuesCacheHitRatio:
      type: object
      properties:
        cache_hit_ratio,omitempty:
          type: number
          format: float
    ServiceInvitationResponseAllOf:
      type: object
      properties:
        data,omitempty:
          $ref: '#/components/schemas/ServiceInvitationResponseAllOfData'
    BrotliCompressionResponseCustomer:
      type: object
      properties:
        customer,omitempty:
          $ref: '#/components/schemas/BotManagementResponseCustomerCustomer'
    LoggingOpenstackResponse:
      type: object
      properties:
        name,omitempty:
          type: string
          description: Where in the generated VCL the logging call should be placed. If not set, endpoints with `format_version` of 2 are placed in `vcl_log` and those with `format_version` of 1 are placed
            in `vcl_deliver`.
        placement,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: The name of an existing condition in the configured endpoint, or leave blank to always execute.
        response_condition,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: A Fastly [log format string](https://docs.fastly.com/en/guides/custom-log-formats).
        format,omitempty:
          type: string
          description: The version of the custom logging format used for the configured endpoint. The logging call gets placed by default in `vcl_log` if `format_version` is set to `2` and in `vcl_deliver`
            if `format_version` is set to `1`.
        format_version,omitempty:
          type: string
          description: How the message should be formatted.
        message_type,omitempty:
          type: string
          description: A timestamp format
        timestamp_format,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: The codec used for compressing your logs. Valid values are `zstd`, `snappy`, and `gzip`. Specifying both `compression_codec` and `gzip_level` in the same API request will result in
            an error.
        compression_codec,omitempty:
          type: string
          description: How frequently log files are finalized so they can be available for reading (in seconds).
        period,omitempty:
          type: string
          description: The level of gzip encoding when sending logs (default `0`, no compression). Specifying both `compression_codec` and `gzip_level` in the same API request will result in an error.
        gzip_level,omitempty:
          type: string
          description: Date and time in ISO 8601 format.
        created_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        deleted_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        updated_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
        service_id,omitempty:
          type: string
        version,omitempty:
          type: string
          description: Your OpenStack account access key.
        access_key,omitempty:
          type: string
          description: The name of your OpenStack container.
        bucket_name,omitempty:
          type: string
          description: The path to upload logs to.
        path,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: A PGP public key that Fastly will use to encrypt your log files before writing them to disk.
        public_key,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: Your OpenStack auth url.
        url,omitempty:
          type: string
          description: The username for your OpenStack account.
        user,omitempty:
          type: string
    ConfigStoreInfoResponse:
      type: object
      properties:
        item_count,omitempty:
          type: integer
          format: int32
    LoggingGenericCommonResponseAllOf:
      type: object
      properties:
        message_type,omitempty:
          type: string
          description: A timestamp format
        timestamp_format,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: The codec used for compressing your logs. Valid values are `zstd`, `snappy`, and `gzip`. Specifying both `compression_codec` and `gzip_level` in the same API request will result in
            an error.
        compression_codec,omitempty:
          type: string
    OriginInspectorDimensions:
      type: object
      properties:
        region,omitempty:
          type: string
          description: The POP from which the edge responses in this data entry were delivered. If unspecified, results are aggregated across POPs.
        datacenter,omitempty:
          type: string
          description: The origin host from which the edge responses in this data entry were delivered. If unspecified, results are aggregated across origin hosts.
        host,omitempty:
          type: string
    DdosProtectionAttributeStats:
      type: object
      properties:
        name,omitempty:
          $ref: '#/components/schemas/DdosProtectionTrafficAttribute'
          description: Values for traffic attribute.
    TLSBulkCertificateResponse:
      type: object
      properties:
        data,omitempty:
          $ref: '#/components/schemas/TLSBulkCertificateResponseData'
    Service:
      type: object
      properties:
        comment,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: The name of the service.
        name,omitempty:
          type: string
          description: Alphanumeric string identifying the customer.
        customer_id,omitempty:
          type: string
    VersionCreateResponse:
      type: object
      properties:
        number,omitempty:
          type: integer
          format: int32
        service_id,omitempty:
          type: string
    RelationshipMemberTLSPrivateKey:
      type: object
      properties:
        type,omitempty:
          $ref: '#/components/schemas/TypeTLSPrivateKey'
        id,omitempty:
          type: string
    DirectorBackendAllOf:
      type: object
      properties:
        backend_name,omitempty:
          type: string
          description: Name for the Director.
        director,omitempty:
          type: string
    Metadata:
      type: object
      properties:
        next_cursor,omitempty:
          type: string
          description: The number of invoices included in the response.
        limit,omitempty:
          type: integer
          format: int32
          description: The sort order of the invoices in the response.
        sort,omitempty:
          type: string
          description: Total number of records available on the backend.
        total,omitempty:
          type: integer
          format: int32
    OriginInspectorResponseBodyGetAllServices:
      type: object
      properties:
        product,omitempty:
          $ref: '#/components/schemas/OriginInspectorResponseProductProduct'
        customer,omitempty:
          $ref: '#/components/schemas/BotManagementResponseCustomerCustomer'
          description: A list of services with Origin Inspector enabled.
        _links,omitempty:
          $ref: '#/components/schemas/OriginInspectorResponseLinksGetAllServicesLinks'
    Pagination:
      type: object
      properties:
        links,omitempty:
          $ref: '#/components/schemas/PaginationLinks'
        meta,omitempty:
          $ref: '#/components/schemas/PaginationMeta'
    RelationshipCustomerCustomer:
      type: object
      properties:
        data,omitempty:
          $ref: '#/components/schemas/RelationshipMemberCustomer'
    OriginInspector:
      type: object
      properties:
        Timestamp,omitempty:
          type: integer
          format: int32
          description: Offset of entry timestamps from the current time due to processing time.
        AggregateDelay,omitempty:
          type: integer
          format: int32
          description: A list of report [entries](#entry-data-model), each representing one second of time.
    BillingAddressVerificationErrorResponseErrors:
      type: object
      properties:
        type:
          type: string
        title:
          type: string
        detail:
          type: string
        status:
          type: number
          format: float
    RelationshipUser:
      type: object
      properties:
        user,omitempty:
          $ref: '#/components/schemas/RelationshipUserUser'
    DdosProtectionTrafficStatsAllOf:
      type: object
      properties:
        customer_id,omitempty:
          type: string
          description: Alphanumeric string identifying the service.
        service_id,omitempty:
          type: string
    ImageOptimizerResponseService:
      type: object
      properties:
        service,omitempty:
          $ref: '#/components/schemas/BotManagementResponseServiceService'
    LoggingGenericCommonResponse:
      type: object
      properties:
        message_type,omitempty:
          type: string
          description: A timestamp format
        timestamp_format,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: The codec used for compressing your logs. Valid values are `zstd`, `snappy`, and `gzip`. Specifying both `compression_codec` and `gzip_level` in the same API request will result in
            an error.
        compression_codec,omitempty:
          type: string
          description: How frequently log files are finalized so they can be available for reading (in seconds).
        period,omitempty:
          type: string
          description: The level of gzip encoding when sending logs (default `0`, no compression). Specifying both `compression_codec` and `gzip_level` in the same API request will result in an error.
        gzip_level,omitempty:
          type: string
    RelationshipServiceInvitations:
      type: object
      properties:
        service_invitations,omitempty:
          $ref: '#/components/schemas/RelationshipServiceInvitationsServiceInvitations'
    RelationshipMemberCustomer:
      type: object
      properties:
        type,omitempty:
          $ref: '#/components/schemas/TypeCustomer'
        id,omitempty:
          type: string
    WebsocketsResponseBodyEnable:
      type: object
      properties:
        product,omitempty:
          $ref: '#/components/schemas/WebsocketsResponseProductProduct'
        service,omitempty:
          $ref: '#/components/schemas/BotManagementResponseServiceService'
        _links,omitempty:
          $ref: '#/components/schemas/WebsocketsResponseLinksLinks'
    KvStoreBatchResponseErrors:
      type: object
      properties:
        key,omitempty:
          type: string
          description: The line number of the batch request body on which the error occurred (starting from 0 for the first line).
        index,omitempty:
          type: integer
          format: int32
          description: The HTTP response code for the item, or a 400 if the item's operation was not completed.
        code,omitempty:
          type: string
          description: A descriptor of this particular item's error.
        reason,omitempty:
          type: string
    LoggingGooglePubsubResponse:
      type: object
      properties:
        name,omitempty:
          type: string
          description: Where in the generated VCL the logging call should be placed. If not set, endpoints with `format_version` of 2 are placed in `vcl_log` and those with `format_version` of 1 are placed
            in `vcl_deliver`.
        placement,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: The name of an existing condition in the configured endpoint, or leave blank to always execute.
        response_condition,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: A Fastly [log format string](https://docs.fastly.com/en/guides/custom-log-formats).
        format,omitempty:
          type: string
          description: The version of the custom logging format used for the configured endpoint. The logging call gets placed by default in `vcl_log` if `format_version` is set to `2` and in `vcl_deliver`
            if `format_version` is set to `1`.
        format_version,omitempty:
          type: string
          description: Your Google Cloud Platform service account email address. The `client_email` field in your service account authentication JSON. Not required if `account_name` is specified.
        user,omitempty:
          type: string
          description: Your Google Cloud Platform account secret key. The `private_key` field in your service account authentication JSON. Not required if `account_name` is specified.
        secret_key,omitempty:
          type: string
          description: The name of the Google Cloud Platform service account associated with the target log collection service. Not required if `user` and `secret_key` are provided.
        account_name,omitempty:
          type: string
          description: The Google Cloud Pub/Sub topic to which logs will be published. Required.
        topic,omitempty:
          type: string
          description: Your Google Cloud Platform project ID. Required
        project_id,omitempty:
          type: string
          description: Date and time in ISO 8601 format.
        created_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        deleted_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        updated_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
        service_id,omitempty:
          type: string
        version,omitempty:
          type: string
    DdosProtectionResponseCustomer:
      type: object
      properties:
        customer,omitempty:
          $ref: '#/components/schemas/BotManagementResponseCustomerCustomer'
    Invitation:
      type: object
      properties:
        data,omitempty:
          $ref: '#/components/schemas/InvitationData'
    NgwafResponseLinks:
      type: object
      properties:
        _links,omitempty:
          $ref: '#/components/schemas/NgwafResponseLinksLinks'
    LoggingFtpResponseAllOf:
      type: object
      properties:
        port,omitempty:
          type: string
    TLSConfigurationsResponse:
      type: object
      properties:
        links,omitempty:
          $ref: '#/components/schemas/PaginationLinks'
        meta,omitempty:
          $ref: '#/components/schemas/PaginationMeta'
    LogExplorerInsightsResponseLinksGetAllServicesLinks:
      type: object
      properties:
        self,omitempty:
          type: string
    Secret:
      type: object
      properties:
        name,omitempty:
          type: string
          description: A Base64-encoded string containing either the secret or the encrypted secret (when using client_key). The maximum secret size (before Base64 encoding and optional local encryption)
            is 64KB.
        secret,omitempty:
          type: string
          description: The Base64-encoded string containing the client key used to encrypt the secret, if applicable.
        client_key,omitempty:
          $ref: '#/components/schemas/NullableString'
    InlineResponse2002:
      type: object
      properties:
        meta,omitempty:
          $ref: '#/components/schemas/PaginationCursorMeta'
    Event:
      type: object
      properties:
        type,omitempty:
          $ref: '#/components/schemas/TypeEvent'
        id,omitempty:
          type: string
        attributes,omitempty:
          $ref: '#/components/schemas/EventAttributes'
    LoggingCommonResponseAllOf1:
      type: object
      properties:
        format_version,omitempty:
          type: string
    VclDiff:
      type: object
      properties:
        from,omitempty:
          type: integer
          format: int32
          description: The version number of the service from which changes in the generated VCL are being compared.
        to,omitempty:
          type: integer
          format: int32
          description: The format in which compared VCL changes are being returned in.
        format,omitempty:
          type: string
          description: The differences between two specified versions.
        diff,omitempty:
          type: string
    ConfigStoreItem:
      type: object
      properties:
        item_key,omitempty:
          type: string
          description: Item value, maximum 8000 characters.
        item_value,omitempty:
          type: string
    DdosProtectionRequestUpdateConfiguration:
      type: object
      properties:
        mode:
          type: string
      required:
      - mode
    AiAcceleratorResponseLinks:
      type: object
      properties:
        _links,omitempty:
          $ref: '#/components/schemas/AiAcceleratorResponseLinksLinks'
    BackendResponseAllOf:
      type: object
      properties:
        locked,omitempty:
          type: boolean
    OriginInspectorResponseBodyEnable:
      type: object
      properties:
        product,omitempty:
          $ref: '#/components/schemas/OriginInspectorResponseProductProduct'
        service,omitempty:
          $ref: '#/components/schemas/BotManagementResponseServiceService'
        _links,omitempty:
          $ref: '#/components/schemas/OriginInspectorResponseLinksLinks'
    TLSConfiguration:
      type: object
      properties:
        data,omitempty:
          $ref: '#/components/schemas/TLSConfigurationData'
    TLSSubscription:
      type: object
      properties:
        data,omitempty:
          $ref: '#/components/schemas/TLSSubscriptionData'
    ACL:
      type: object
      properties:
        name,omitempty:
          type: string
    PaginationLinks:
      type: object
      properties:
        first,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: The last page of data.
        last,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: The previous page of data.
        prev,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: The next page of data.
        next,omitempty:
          $ref: '#/components/schemas/NullableString'
    BrotliCompressionResponseLinks:
      type: object
      properties:
        _links,omitempty:
          $ref: '#/components/schemas/BrotliCompressionResponseLinksLinks'
    Pop:
      type: object
      properties:
        code:
          type: string
          description: the name of the POP
        name:
          type: string
        group:
          type: string
        region:
          type: string
          description: the region used for stats reporting
        stats_region:
          type: string
          description: the region used for billing
        billing_region:
          type: string
        coordinates,omitempty:
          $ref: '#/components/schemas/PopCoordinates'
          description: the name of the [shield code](https://www.fastly.com/documentation/learning/concepts/shielding/#choosing-a-shield-location) if this POP is suitable for shielding
        shield,omitempty:
          type: string
    TLSConfigurationResponse:
      type: object
      properties:
        data,omitempty:
          $ref: '#/components/schemas/TLSConfigurationResponseData'
    TLSCertificateResponseDataAllOf:
      type: object
      properties:
        id,omitempty:
          type: string
        attributes,omitempty:
          $ref: '#/components/schemas/TLSCertificateResponseAttributes'
    TLSCsrResponseAttributes:
      type: object
      properties:
        content,omitempty:
          type: string
    TLSSubscriptionData:
      type: object
      properties:
        type,omitempty:
          $ref: '#/components/schemas/TypeTLSSubscription'
        attributes,omitempty:
          $ref: '#/components/schemas/TLSSubscriptionDataAttributes'
        relationships,omitempty:
          $ref: '#/components/schemas/RelationshipsForTLSSubscription'
    ValuesMisses:
      type: object
      properties:
        miss_rate,omitempty:
          type: number
          format: float
    CustomerAddress:
      type: object
      properties:
        type,omitempty:
          type: string
          description: The street number and name of the address.
        address_1,omitempty:
          type: string
          description: Additional address line for unit number, P.O. Box, etc.
        address_2,omitempty:
          type: string
          description: City, town, or locality name the address is located.
        locality,omitempty:
          type: string
          description: State, province, or region of the address.
        region,omitempty:
          type: string
          description: ISO 3166-1 alpha-2 country code (e.g., \"US\", \"CA\", \"NZ\")
        country,omitempty:
          type: string
          description: Postal or Zip code of the address.
        postal_code,omitempty:
          type: string
    NgwafRequestUpdateConfiguration:
      type: object
      properties:
        workspace_id,omitempty:
          type: string
          description: The percentage of traffic to inspect.
        traffic_ramp,omitempty:
          type: string
    LoggingAzureblobAdditional:
      type: object
      properties:
        path,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: The unique Azure Blob Storage namespace in which your data objects are stored. Required.
        account_name,omitempty:
          type: string
          description: The name of the Azure Blob Storage container in which to store logs. Required.
        container,omitempty:
          type: string
          description: The Azure shared access signature providing write access to the blob service objects. Be sure to update your token before it expires or the logging functionality will not work. Required.
        sas_token,omitempty:
          type: string
          description: A PGP public key that Fastly will use to encrypt your log files before writing them to disk.
        public_key,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: The maximum number of bytes for each uploaded file. A value of 0 can be used to indicate there is no limit on the size of uploaded files, otherwise the minimum value is 1048576 bytes
            (1 MiB). Note that Microsoft Azure Storage has [block size limits](https://learn.microsoft.com/en-us/rest/api/storageservices/put-block?tabs=microsoft-entra-id#remarks).
        file_max_bytes,omitempty:
          type: integer
          format: int32
    TLSCertificatesResponse:
      type: object
      properties:
        links,omitempty:
          $ref: '#/components/schemas/PaginationLinks'
        meta,omitempty:
          $ref: '#/components/schemas/PaginationMeta'
    RelationshipTLSDomain:
      type: object
      properties:
        tls_domain,omitempty:
          $ref: '#/components/schemas/RelationshipTLSDomainTLSDomain'
    RelationshipsForTLSActivation:
      type: object
      properties:
        tls_certificate,omitempty:
          $ref: '#/components/schemas/RelationshipTLSCertificateTLSCertificate'
        tls_configuration,omitempty:
          $ref: '#/components/schemas/RelationshipTLSConfigurationTLSConfiguration'
        tls_domain,omitempty:
          $ref: '#/components/schemas/RelationshipTLSDomainTLSDomain'
    ComputeACLCreateAclsResponse:
      type: object
      properties:
        name,omitempty:
          type: string
          description: An example identifier (UUID).
        id,omitempty:
          type: string
    RelationshipUserUser:
      type: object
      properties:
        data,omitempty:
          $ref: '#/components/schemas/ServiceAuthorizationDataRelationshipsUserData'
    ComputeACLListMeta:
      type: object
      properties:
        total,omitempty:
          type: integer
          format: int32
    LogInsightsMetaFilter:
      type: object
      properties:
        service_id,omitempty:
          type: string
          description: Start time for the query as supplied in the request.
        start,omitempty:
          type: string
          description: End time for the query as supplied in the request.
        end,omitempty:
          type: string
          description: Value of the `domain_exact_match` filter as supplied in the request.
        domain_exact_match,omitempty:
          type: boolean
          description: Number of records per page.
        limit,omitempty:
          type: integer
          format: int32
    SchemasSnippetResponse:
      type: object
      properties:
        name,omitempty:
          type: string
          description: The location in generated VCL where the snippet should be placed.
        type,omitempty:
          type: string
          description: The VCL code that specifies exactly what the snippet does.
        content,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: Priority determines execution order. Lower numbers execute first.
        priority,omitempty:
          type: string
          description: Sets the snippet version.
        dynamic,omitempty:
          type: string
          description: Date and time in ISO 8601 format.
        created_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        deleted_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        updated_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
        service_id,omitempty:
          type: string
          description: String representing the number identifying a version of the service.
        version,omitempty:
          type: string
        id,omitempty:
          type: string
    DdosProtectionResponseEnable:
      type: object
      properties:
        product,omitempty:
          $ref: '#/components/schemas/DdosProtectionResponseProductProduct'
        service,omitempty:
          $ref: '#/components/schemas/BotManagementResponseServiceService'
        _links,omitempty:
          $ref: '#/components/schemas/DdosProtectionResponseLinksLinks'
    RelationshipMutualAuthentications:
      type: object
      properties:
        mutual_authentications,omitempty:
          $ref: '#/components/schemas/RelationshipMutualAuthenticationsMutualAuthentications'
    ServiceVersionDetailOrNull:
      type: object
      properties:
        active,omitempty:
          type: boolean
          description: A freeform descriptive note.
        comment,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: Unused at this time.
        deployed,omitempty:
          type: boolean
          description: Whether this version is locked or not. Objects can not be added or edited on locked versions.
        locked,omitempty:
          type: boolean
          description: The number of this version.
        number,omitempty:
          type: integer
          format: int32
          description: Unused at this time.
        staging,omitempty:
          type: boolean
          description: Unused at this time.
        testing,omitempty:
          type: boolean
          description: Date and time in ISO 8601 format.
        created_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        deleted_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        updated_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
        service_id,omitempty:
          type: string
          description: A list of environments where the service has been deployed.
        settings,omitempty:
          $ref: '#/components/schemas/VersionDetailSettings'
          description: List of VCL snippets for this service.
    HeaderResponse:
      type: object
      properties:
        action,omitempty:
          type: string
          description: Name of the cache condition controlling when this configuration applies.
        cache_condition,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: Header to set.
        dst,omitempty:
          type: string
          description: A handle to refer to this Header object.
        name,omitempty:
          type: string
          description: Regular expression to use. Only applies to `regex` and `regex_repeat` actions.
        regex,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: Condition which, if met, will select this configuration during a request. Optional.
        request_condition,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: Optional name of a response condition to apply.
        response_condition,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: Variable to be used as a source for the header content. Does not apply to `delete` action.
        src,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: Value to substitute in place of regular expression. Only applies to `regex` and `regex_repeat` actions.
        substitution,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: Accepts a string value.
        type,omitempty:
          type: string
          description: Don't add the header if it is added already. Only applies to 'set' action. Numerical value (\"0\" = false, \"1\" = true)
        ignore_if_set,omitempty:
          type: string
          description: Priority determines execution order. Lower numbers execute first.
        priority,omitempty:
          type: string
        service_id,omitempty:
          type: string
        version,omitempty:
          type: string
          description: Date and time in ISO 8601 format.
        created_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        deleted_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        updated_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
    DomainInspectorResponseLinksLinks:
      type: object
      properties:
        self,omitempty:
          type: string
          description: Location of the service resource
        service,omitempty:
          type: string
    OriginInspectorResponseCustomer:
      type: object
      properties:
        customer,omitempty:
          $ref: '#/components/schemas/BotManagementResponseCustomerCustomer'
    ServiceInvitationDataAttributes:
      type: object
      properties:
        permission,omitempty:
          type: string
    BotManagementResponseLinksGetAllServices:
      type: object
      properties:
        _links,omitempty:
          $ref: '#/components/schemas/BotManagementResponseLinksGetAllServicesLinks'
    RelationshipService:
      type: object
      properties:
        service,omitempty:
          $ref: '#/components/schemas/RelationshipMemberService'
    Serviceusagetype:
      type: object
      properties:
        product_id,omitempty:
          type: string
          description: Full name of the product usage type as it might appear on a customer's invoice.
        name,omitempty:
          type: string
    RelationshipMemberTLSCertificate:
      type: object
      properties:
        type,omitempty:
          $ref: '#/components/schemas/TypeTLSCertificate'
        id,omitempty:
          type: string
    CustomerResponseAllOf:
      type: object
      properties:
        id,omitempty:
          type: string
    HistoricalDomainsResponse:
      type: object
      properties:
        status,omitempty:
          type: string
        meta,omitempty:
          $ref: '#/components/schemas/HistoricalDomainsMeta'
          description: If the query was not successful, this will provide a string that explains why.
        msg,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: A list of timeseries. Each individual timeseries represents a unique combination of dimensions, such as domain, region or POP.
    DomainInspectorRealtimeEntry:
      type: object
      properties:
        recorded,omitempty:
          type: integer
          format: int32
          description: Groups [measurements](#measurements-data-model) by backend name and then by IP address.
    TLSConfigurationResponseData:
      type: object
      properties:
        type,omitempty:
          $ref: '#/components/schemas/TypeTLSConfiguration'
        attributes,omitempty:
          $ref: '#/components/schemas/TLSConfigurationResponseAttributes'
        relationships,omitempty:
          $ref: '#/components/schemas/RelationshipsForTLSConfiguration'
        id,omitempty:
          type: string
    ValuesCountryStats:
      type: object
      properties:
        region,omitempty:
          type: string
          description: The cache hit ratio for the region.
        region_chr,omitempty:
          type: number
          format: float
          description: The error rate for the region.
        region_error_rate,omitempty:
          type: number
          format: float
    ServiceVersionDetail:
      type: object
      properties:
        active,omitempty:
          type: boolean
          description: A freeform descriptive note.
        comment,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: Unused at this time.
        deployed,omitempty:
          type: boolean
          description: Whether this version is locked or not. Objects can not be added or edited on locked versions.
        locked,omitempty:
          type: boolean
          description: The number of this version.
        number,omitempty:
          type: integer
          format: int32
          description: Unused at this time.
        staging,omitempty:
          type: boolean
          description: Unused at this time.
        testing,omitempty:
          type: boolean
          description: Date and time in ISO 8601 format.
        created_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        deleted_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        updated_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
        service_id,omitempty:
          type: string
          description: A list of environments where the service has been deployed.
        settings,omitempty:
          $ref: '#/components/schemas/VersionDetailSettings'
          description: List of VCL snippets for this service.
    DefaultSettings:
      type: object
      properties:
        resize_filter,omitempty:
          type: string
          description: Controls whether or not to default to WebP output when the client supports it. This is equivalent to adding \"auto=webp\" to all image optimizer requests.
        webp,omitempty:
          type: boolean
          description: The default quality to use with WebP output. This can be overridden with the second option in the \"quality\" URL parameter on specific image optimizer requests.
        webp_quality,omitempty:
          type: integer
          format: int32
          description: The default type of JPEG output to use. This can be overridden with \"format=bjpeg\" and \"format=pjpeg\" on specific image optimizer requests.
        jpeg_type,omitempty:
          type: string
          description: The default quality to use with JPEG output. This can be overridden with the \"quality\" parameter on specific image optimizer requests.
        jpeg_quality,omitempty:
          type: integer
          format: int32
          description: Whether or not we should allow output images to render at sizes larger than input.
        upscale,omitempty:
          type: boolean
          description: Enables GIF to MP4 transformations on this service.
        allow_video,omitempty:
          type: boolean
    DashboardItem:
      type: object
      properties:
        id,omitempty:
          type: string
          description: A human-readable title for the dashboard item
        title:
          type: string
          description: A human-readable subtitle for the dashboard item. Often a description of the visualization.
        subtitle:
          type: string
        data_source:
          $ref: '#/components/schemas/DashboardItemPropertyDataSource'
        visualization:
          $ref: '#/components/schemas/DashboardItemPropertyVisualization'
          description: The number of columns for the dashboard item to span. Dashboards are rendered on a 12-column grid on \"desktop\" screen sizes.
        span,omitempty:
          type: integer
          format: int32
    LoggingNewrelicotlpResponse:
      type: object
      properties:
        name,omitempty:
          type: string
          description: Where in the generated VCL the logging call should be placed. If not set, endpoints with `format_version` of 2 are placed in `vcl_log` and those with `format_version` of 1 are placed
            in `vcl_deliver`.
        placement,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: The name of an existing condition in the configured endpoint, or leave blank to always execute.
        response_condition,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: A Fastly [log format string](https://docs.fastly.com/en/guides/custom-log-formats).
        format,omitempty:
          type: string
          description: The version of the custom logging format used for the configured endpoint. The logging call gets placed by default in `vcl_log` if `format_version` is set to `2` and in `vcl_deliver`
            if `format_version` is set to `1`.
        format_version,omitempty:
          type: string
          description: The Insert API key from the Account page of your New Relic account. Required.
        token,omitempty:
          type: string
          description: The region to which to stream logs.
        region,omitempty:
          type: string
          description: (Optional) URL of the New Relic Trace Observer, if you are using New Relic Infinite Tracing.
        url,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: Date and time in ISO 8601 format.
        created_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        deleted_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        updated_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
        service_id,omitempty:
          type: string
        version,omitempty:
          type: string
    Serviceusagemetrics:
      type: object
      properties:
        data,omitempty:
          $ref: '#/components/schemas/ServiceusagemetricsData'
    FanoutResponseLinksLinks:
      type: object
      properties:
        self,omitempty:
          type: string
          description: Location of the service resource
        service,omitempty:
          type: string
    ServiceDetail:
      type: object
      properties:
        created_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        deleted_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        updated_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: A freeform descriptive note.
        comment,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: The name of the service.
        name,omitempty:
          type: string
          description: Alphanumeric string identifying the customer.
        customer_id,omitempty:
          type: string
          description: The type of this service.
        type,omitempty:
          type: string
        id,omitempty:
          type: string
          description: Unused at this time.
        publish_key,omitempty:
          type: string
          description: Whether the service is paused. Services are paused due to a lack of traffic for an extended period of time. Services are resumed either when a draft version is activated or a locked
            version is cloned and reactivated.
        paused,omitempty:
          type: boolean
          description: A list of [versions](https://www.fastly.com/documentation/reference/api/services/version/) associated with the service.
        active_version,omitempty:
          $ref: '#/components/schemas/NullableServiceVersionDetailOrNull'
        version,omitempty:
          $ref: '#/components/schemas/ServiceVersionDetail'
    Healthcheck:
      type: object
      properties:
        check_interval,omitempty:
          type: integer
          format: int32
          description: A freeform descriptive note.
        comment,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: The status code expected from the host.
        expected_response,omitempty:
          type: integer
          format: int32
          description: Array of custom headers that will be added to the health check probes.
        host,omitempty:
          type: string
          description: Whether to use version 1.0 or 1.1 HTTP.
        http_version,omitempty:
          type: string
          description: When loading a config, the initial number of probes to be seen as OK.
        initial,omitempty:
          type: integer
          format: int32
          description: Which HTTP method to use.
        method,omitempty:
          type: string
          description: The name of the health check.
        name,omitempty:
          type: string
          description: The path to check.
        path,omitempty:
          type: string
          description: How many health checks must succeed to be considered healthy.
        threshold,omitempty:
          type: integer
          format: int32
          description: Timeout in milliseconds.
        timeout,omitempty:
          type: integer
          format: int32
          description: The number of most recent health check queries to keep for this health check.
        window,omitempty:
          type: integer
          format: int32
    HistoricalUsageMonthResponseAllOf:
      type: object
      properties:
        data,omitempty:
          $ref: '#/components/schemas/HistoricalUsageMonthResponseData'
    RelationshipTLSCertificateTLSCertificate:
      type: object
      properties:
        data,omitempty:
          $ref: '#/components/schemas/RelationshipMemberTLSCertificate'
    Snippet:
      type: object
      properties:
        name,omitempty:
          type: string
          description: The location in generated VCL where the snippet should be placed.
        type,omitempty:
          type: string
          description: The VCL code that specifies exactly what the snippet does.
        content,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: Priority determines execution order. Lower numbers execute first.
        priority,omitempty:
          type: string
          description: Sets the snippet version.
        dynamic,omitempty:
          type: string
    LogInsightsMeta:
      type: object
      properties:
        filters,omitempty:
          $ref: '#/components/schemas/LogInsightsMetaFilter'
    DictionaryItemResponse:
      type: object
      properties:
        item_key,omitempty:
          type: string
          description: Item value, maximum 8000 characters.
        item_value,omitempty:
          type: string
          description: Date and time in ISO 8601 format.
        created_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        deleted_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        updated_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
        dictionary_id,omitempty:
          type: string
        service_id,omitempty:
          type: string
    KvStoreBatchResponse:
      type: object
      properties:
        title,omitempty:
          type: string
          description: If an error is present in any of the requests, this field will describe that error
        type,omitempty:
          type: string
          description: Errors which occurred while handling the items in the request
    LoggingLogshuttleAdditional:
      type: object
      properties:
        token,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: The URL to stream logs to.
        url,omitempty:
          type: string
    HistoricalStatsAggregatedResponse:
      type: object
      properties:
        status,omitempty:
          type: string
        meta,omitempty:
          $ref: '#/components/schemas/HistoricalMeta'
          description: If the query was not successful, this will provide a string that explains why.
        msg,omitempty:
          $ref: '#/components/schemas/NullableString'
    TokenCreatedResponse:
      type: object
      properties:
        name,omitempty:
          type: string
          description: Space-delimited list of authorization scope.
        scope,omitempty:
          type: string
          description: Time-stamp (UTC) of when the token was created.
        created_at,omitempty:
          type: string
          description: Date and time in ISO 8601 format.
        deleted_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        updated_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
        id,omitempty:
          type: string
        user_id,omitempty:
          type: string
          description: Time-stamp (UTC) of when the token was last used.
        last_used_at,omitempty:
          type: string
          description: Time-stamp (UTC) of when the token will expire (optional).
        expires_at,omitempty:
          type: string
          description: IP Address of the client that last used the token.
        ip,omitempty:
          type: string
          description: User-Agent header of the client that last used the token.
        user_agent,omitempty:
          type: string
          description: The alphanumeric string for accessing the API (only available on token creation).
        access_token,omitempty:
          type: string
    LoggingKafkaResponsePost:
      type: object
      properties:
        name,omitempty:
          type: string
          description: Where in the generated VCL the logging call should be placed. If not set, endpoints with `format_version` of 2 are placed in `vcl_log` and those with `format_version` of 1 are placed
            in `vcl_deliver`.
        placement,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: The name of an existing condition in the configured endpoint, or leave blank to always execute.
        response_condition,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: A Fastly [log format string](https://docs.fastly.com/en/guides/custom-log-formats).
        format,omitempty:
          type: string
          description: The version of the custom logging format used for the configured endpoint. The logging call gets placed by default in `vcl_log` if `format_version` is set to `2` and in `vcl_deliver`
            if `format_version` is set to `1`.
        format_version,omitempty:
          type: integer
          format: int32
          description: A secure certificate to authenticate a server with. Must be in PEM format.
        tls_ca_cert,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: The client certificate used to make authenticated requests. Must be in PEM format.
        tls_client_cert,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: The client private key used to make authenticated requests. Must be in PEM format.
        tls_client_key,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: The hostname to verify the server's certificate. This should be one of the Subject Alternative Name (SAN) fields for the certificate. Common Names (CN) are not supported.
        tls_hostname,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: Date and time in ISO 8601 format.
        created_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        deleted_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        updated_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
        service_id,omitempty:
          type: string
        version,omitempty:
          type: string
          description: The Kafka topic to send logs to. Required.
        topic,omitempty:
          type: string
          description: A comma-separated list of IP addresses or hostnames of Kafka brokers. Required.
        brokers,omitempty:
          type: string
          description: The codec used for compression of your logs.
        compression_codec,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: The number of acknowledgements a leader must receive before a write is considered successful.
        required_acks,omitempty:
          type: integer
          format: int32
          description: The maximum number of bytes sent in one request. Defaults `0` (no limit).
        request_max_bytes,omitempty:
          type: integer
          format: int32
          description: Enables parsing of key=value tuples from the beginning of a logline, turning them into [record headers](https://cwiki.apache.org/confluence/display/KAFKA/KIP-82+-+Add+Record+Headers).
        parse_log_keyvals,omitempty:
          type: boolean
          description: SASL authentication method.
        auth_method,omitempty:
          type: string
          description: SASL user.
        user,omitempty:
          type: string
          description: SASL password.
        password,omitempty:
          type: string
        use_tls,omitempty:
          $ref: '#/components/schemas/LoggingUseTLSString'
    ServiceAuthorizationResponseDataAllOf:
      type: object
      properties:
        id,omitempty:
          type: string
        attributes,omitempty:
          $ref: '#/components/schemas/Timestamps'
    LoggingHerokuAdditional:
      type: object
      properties:
        token,omitempty:
          type: string
          description: The URL to stream logs to.
        url,omitempty:
          type: string
    ServiceListResponse:
      type: object
      properties:
        created_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        deleted_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        updated_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: A freeform descriptive note.
        comment,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: The name of the service.
        name,omitempty:
          type: string
          description: Alphanumeric string identifying the customer.
        customer_id,omitempty:
          type: string
          description: The type of this service.
        type,omitempty:
          type: string
        id,omitempty:
          type: string
          description: Current [version](https://www.fastly.com/documentation/reference/api/services/version/) of the service.
        version,omitempty:
          type: integer
          format: int32
          description: A list of [versions](https://www.fastly.com/documentation/reference/api/services/version/) associated with the service.
    ImageOptimizerResponseBodyEnable:
      type: object
      properties:
        product,omitempty:
          $ref: '#/components/schemas/ImageOptimizerResponseProductProduct'
        service,omitempty:
          $ref: '#/components/schemas/BotManagementResponseServiceService'
        _links,omitempty:
          $ref: '#/components/schemas/ImageOptimizerResponseLinksLinks'
    RelationshipDefaultTLSCertificateDefaultCertificate:
      type: object
      properties:
        data,omitempty:
          $ref: '#/components/schemas/RelationshipDefaultTLSCertificateDefaultCertificateData'
    TLSConfigurationResponseAttributesAllOf:
      type: object
      properties:
        default,omitempty:
          type: boolean
          description: HTTP protocols available on your configuration.
        bulk,omitempty:
          type: boolean
    NgwafResponseConfigure:
      type: object
      properties:
        product,omitempty:
          $ref: '#/components/schemas/NgwafResponseProductProduct'
        service,omitempty:
          $ref: '#/components/schemas/BotManagementResponseServiceService'
        configuration,omitempty:
          $ref: '#/components/schemas/NgwafResponseConfigurationConfiguration'
        _links,omitempty:
          $ref: '#/components/schemas/NgwafResponseLinksLinks'
    HTTPResponseFormat:
      type: object
      properties:
        code,omitempty:
          type: integer
          format: int32
          description: The HTTP status string. Defaults to a string appropriate for `code`.
        reason,omitempty:
          type: string
          description: A map of arbitrary HTTP response headers to include in the response.
        body,omitempty:
          type: string
          description: The response body as a base64-encoded binary blob.
        body-bin,omitempty:
          type: string
    HistoricalUsageMonthResponse:
      type: object
      properties:
        status,omitempty:
          type: string
        meta,omitempty:
          $ref: '#/components/schemas/HistoricalMeta'
          description: If the query was not successful, this will provide a string that explains why.
        msg,omitempty:
          $ref: '#/components/schemas/NullableString'
        data,omitempty:
          $ref: '#/components/schemas/HistoricalUsageMonthResponseData'
    SchemasVclResponse:
      type: object
      properties:
        content,omitempty:
          type: string
          description: Set to `true` when this is the main VCL, otherwise `false`.
        main,omitempty:
          type: boolean
          description: The name of this VCL.
        name,omitempty:
          type: string
        service_id,omitempty:
          type: string
        version,omitempty:
          type: integer
          format: int32
          description: Date and time in ISO 8601 format.
        created_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        deleted_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        updated_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
    InvitationResponse:
      type: object
      properties:
        data,omitempty:
          $ref: '#/components/schemas/InvitationResponseData'
    TLSCsr:
      type: object
      properties:
        data,omitempty:
          $ref: '#/components/schemas/TLSCsrData'
    PoolResponsePostAllOf:
      type: object
      properties:
        quorum,omitempty:
          type: integer
          format: int32
    InvitationResponseData:
      type: object
      properties:
        type,omitempty:
          $ref: '#/components/schemas/TypeInvitation'
        attributes,omitempty:
          $ref: '#/components/schemas/Timestamps'
        relationships,omitempty:
          $ref: '#/components/schemas/RelationshipsForInvitation'
        id,omitempty:
          type: string
    DashboardItemPropertyDataSource:
      type: object
      properties:
        type:
          type: string
        config:
          $ref: '#/components/schemas/DashboardItemPropertyDataSourcePropertyConfig'
      required:
      - type
      - config
    NgwafResponseConfiguration:
      type: object
      properties:
        configuration,omitempty:
          $ref: '#/components/schemas/NgwafResponseConfigurationConfiguration'
    OriginInspectorResponseLinksLinks:
      type: object
      properties:
        self,omitempty:
          type: string
          description: Location of the service resource
        service,omitempty:
          type: string
    UserResponseReadOnly:
      type: object
      properties:
        id,omitempty:
          type: string
          description: The alphanumeric string identifying a email login.
        email_hash,omitempty:
          type: string
        customer_id,omitempty:
          type: string
    BotManagementResponseCustomerCustomer:
      type: object
      properties:
        id,omitempty:
          type: string
          description: Name of the object
        object,omitempty:
          type: string
    RelationshipMemberTLSActivation:
      type: object
      properties:
        type,omitempty:
          $ref: '#/components/schemas/TypeTLSActivation'
        id,omitempty:
          type: string
    ImageOptimizerResponseLinksLinks:
      type: object
      properties:
        self,omitempty:
          type: string
          description: Location of the service resource
        service,omitempty:
          type: string
    ValuesRate:
      type: object
      properties:
        rate,omitempty:
          type: number
          format: float
    HistoricalUsageServiceResponse:
      type: object
      properties:
        status,omitempty:
          type: string
        meta,omitempty:
          $ref: '#/components/schemas/HistoricalMeta'
          description: If the query was not successful, this will provide a string that explains why.
        msg,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: Organized by *region*.
    RelationshipMutualAuthenticationMutualAuthentication:
      type: object
      properties:
        data,omitempty:
          $ref: '#/components/schemas/RelationshipMemberMutualAuthentication'
    TLSPrivateKeyData:
      type: object
      properties:
        type,omitempty:
          $ref: '#/components/schemas/TypeTLSPrivateKey'
        attributes,omitempty:
          $ref: '#/components/schemas/TLSPrivateKeyDataAttributes'
        relationships,omitempty:
          $ref: '#/components/schemas/RelationshipsForTLSPrivateKey'
    DomainInspectorResponseProduct:
      type: object
      properties:
        product,omitempty:
          $ref: '#/components/schemas/DomainInspectorResponseProductProduct'
    AiAcceleratorResponseLinksLinks:
      type: object
      properties:
        self,omitempty:
          type: string
    LoggingCloudfilesAdditional:
      type: object
      properties:
        access_key,omitempty:
          type: string
          description: The name of your Cloud Files container.
        bucket_name,omitempty:
          type: string
          description: The path to upload logs to.
        path,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: The region to stream logs to.
        region,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: A PGP public key that Fastly will use to encrypt your log files before writing them to disk.
        public_key,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: The username for your Cloud Files account.
        user,omitempty:
          type: string
    TLSCommonResponseAllOf:
      type: object
      properties:
        tls_ca_cert,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: The client certificate used to make authenticated requests. Must be in PEM format.
        tls_client_cert,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: The client private key used to make authenticated requests. Must be in PEM format.
        tls_client_key,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: The hostname used to verify a server's certificate. It can either be the Common Name (CN) or a Subject Alternative Name (SAN).
        tls_cert_hostname,omitempty:
          $ref: '#/components/schemas/NullableString'
    ObjectStorageResponseProduct:
      type: object
      properties:
        product,omitempty:
          $ref: '#/components/schemas/ObjectStorageResponseProductProduct'
    DdosProtectionAttributeValue:
      type: object
      properties:
        value,omitempty:
          type: string
          description: Percentage of traffic containing a value.
        percentage,omitempty:
          type: integer
          format: int32
    TLSPrivateKeysResponse:
      type: object
      properties:
        links,omitempty:
          $ref: '#/components/schemas/PaginationLinks'
        meta,omitempty:
          $ref: '#/components/schemas/PaginationMeta'
    TokenCreatedResponseAllOf:
      type: object
      properties:
        access_token,omitempty:
          type: string
    VclResponse:
      type: object
      properties:
        content,omitempty:
          type: string
          description: Set to `true` when this is the main VCL, otherwise `false`.
        main,omitempty:
          type: boolean
          description: The name of this VCL.
        name,omitempty:
          type: string
        service_id,omitempty:
          type: string
        version,omitempty:
          type: integer
          format: int32
          description: Date and time in ISO 8601 format.
        created_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        deleted_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        updated_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
    DictionaryItem:
      type: object
      properties:
        item_key,omitempty:
          type: string
          description: Item value, maximum 8000 characters.
        item_value,omitempty:
          type: string
    WebsocketsResponseLinksGetAllServices:
      type: object
      properties:
        _links,omitempty:
          $ref: '#/components/schemas/WebsocketsResponseLinksGetAllServicesLinks'
    AccessKeyResponse:
      type: object
      properties:
        access_key,omitempty:
          type: string
          description: Generated secret key.
        secret_key,omitempty:
          type: string
          description: Description for the access key.
        description,omitempty:
          type: string
          description: Permissions granted to an access key.
        permission,omitempty:
          type: string
        created_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
    ObjectStorageResponseCustomer:
      type: object
      properties:
        customer,omitempty:
          $ref: '#/components/schemas/AiAcceleratorResponseCustomerCustomer'
    NgwafResponseConfigurationConfiguration:
      type: object
      properties:
        workspace_id,omitempty:
          type: string
          description: The percentage of traffic to inspect.
        traffic_ramp,omitempty:
          type: string
    DefaultSettingsError:
      type: object
      properties:
        title,omitempty:
          type: string
        type,omitempty:
          type: string
        detail,omitempty:
          type: string
    ImageOptimizerResponseProductProduct:
      type: object
      properties:
        id,omitempty:
          type: string
          description: Name of the object
        object,omitempty:
          type: string
    HistoricalUsageService:
      type: object
      properties:
        name,omitempty:
          type: string
    LoggingNewrelicResponse:
      type: object
      properties:
        name,omitempty:
          type: string
          description: Where in the generated VCL the logging call should be placed. If not set, endpoints with `format_version` of 2 are placed in `vcl_log` and those with `format_version` of 1 are placed
            in `vcl_deliver`.
        placement,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: The name of an existing condition in the configured endpoint, or leave blank to always execute.
        response_condition,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: A Fastly [log format string](https://docs.fastly.com/en/guides/custom-log-formats). Must produce valid JSON that New Relic Logs can ingest.
        format,omitempty:
          type: string
          description: The version of the custom logging format used for the configured endpoint. The logging call gets placed by default in `vcl_log` if `format_version` is set to `2` and in `vcl_deliver`
            if `format_version` is set to `1`.
        format_version,omitempty:
          type: string
          description: The Insert API key from the Account page of your New Relic account. Required.
        token,omitempty:
          type: string
          description: The region to which to stream logs.
        region,omitempty:
          type: string
          description: Date and time in ISO 8601 format.
        created_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        deleted_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        updated_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
        service_id,omitempty:
          type: string
        version,omitempty:
          type: string
    LogExplorerInsightsResponseProductProduct:
      type: object
      properties:
        id,omitempty:
          type: string
          description: Name of the object
        object,omitempty:
          type: string
    LoggingGcsAdditional:
      type: object
      properties:
        bucket_name,omitempty:
          type: string
        path,omitempty:
          type: string
          description: A PGP public key that Fastly will use to encrypt your log files before writing them to disk.
        public_key,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: Your Google Cloud Platform project ID. Required
        project_id,omitempty:
          type: string
    TokenResponse:
      type: object
      properties:
        name,omitempty:
          type: string
          description: Space-delimited list of authorization scope.
        scope,omitempty:
          type: string
          description: Time-stamp (UTC) of when the token was created.
        created_at,omitempty:
          type: string
          description: Date and time in ISO 8601 format.
        deleted_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        updated_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
        id,omitempty:
          type: string
        user_id,omitempty:
          type: string
          description: Time-stamp (UTC) of when the token was last used.
        last_used_at,omitempty:
          type: string
          description: Time-stamp (UTC) of when the token will expire (optional).
        expires_at,omitempty:
          type: string
          description: IP Address of the client that last used the token.
        ip,omitempty:
          type: string
          description: User-Agent header of the client that last used the token.
        user_agent,omitempty:
          type: string
    TLSCsrDataAttributes:
      type: object
      properties:
        common_name,omitempty:
          type: string
          description: Country (C) - The two-letter ISO country code where the organization is located.
        country,omitempty:
          type: string
          description: State (S) - The state, province, region, or county where the organization is located. This should not be abbreviated.
        state,omitempty:
          type: string
          description: Locality (L) - The locality, city, town, or village where the organization is located.
        city,omitempty:
          type: string
          description: Postal Code - The postal code where the organization is located.
        postal_code,omitempty:
          type: string
          description: Street Address - The street address where the organization is located.
        street_address,omitempty:
          type: string
          description: Organization (O) - The legal name of the organization, including any suffixes. This should not be abbreviated.
        organization,omitempty:
          type: string
          description: Organizational Unit (OU) - The internal division of the organization managing the certificate.
        organizational_unit,omitempty:
          type: string
          description: Email Address (EMAIL) - The organizational contact for this.
        email,omitempty:
          type: string
          description: CSR Key Type.
        key_type,omitempty:
          type: string
    LoggingCommonResponseAllOf:
      type: object
      properties:
        name,omitempty:
          type: string
          description: Where in the generated VCL the logging call should be placed. If not set, endpoints with `format_version` of 2 are placed in `vcl_log` and those with `format_version` of 1 are placed
            in `vcl_deliver`.
        placement,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: The name of an existing condition in the configured endpoint, or leave blank to always execute.
        response_condition,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: A Fastly [log format string](https://docs.fastly.com/en/guides/custom-log-formats).
        format,omitempty:
          type: string
    LoggingNewrelicotlpAdditional:
      type: object
      properties:
        format,omitempty:
          type: string
          description: The Insert API key from the Account page of your New Relic account. Required.
        token,omitempty:
          type: string
          description: The region to which to stream logs.
        region,omitempty:
          type: string
          description: (Optional) URL of the New Relic Trace Observer, if you are using New Relic Infinite Tracing.
        url,omitempty:
          $ref: '#/components/schemas/NullableString'
    LoggingCommonResponse:
      type: object
      properties:
        name,omitempty:
          type: string
          description: Where in the generated VCL the logging call should be placed. If not set, endpoints with `format_version` of 2 are placed in `vcl_log` and those with `format_version` of 1 are placed
            in `vcl_deliver`.
        placement,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: The name of an existing condition in the configured endpoint, or leave blank to always execute.
        response_condition,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: A Fastly [log format string](https://docs.fastly.com/en/guides/custom-log-formats).
        format,omitempty:
          type: string
          description: The version of the custom logging format used for the configured endpoint. The logging call gets placed by default in `vcl_log` if `format_version` is set to `2` and in `vcl_deliver`
            if `format_version` is set to `1`.
        format_version,omitempty:
          type: string
    HistoricalMeta:
      type: object
      properties:
        to,omitempty:
          type: string
        from,omitempty:
          type: string
        by,omitempty:
          type: string
        region,omitempty:
          type: string
    MutualAuthenticationDataAttributes:
      type: object
      properties:
        cert_bundle,omitempty:
          type: string
          description: Determines whether Mutual TLS will fail closed (enforced) or fail open. A true value will require a successful Mutual TLS handshake for the connection to continue and will fail closed
            if unsuccessful. A false value will fail open and allow the connection to proceed. Optional. Defaults to true.
        enforced,omitempty:
          type: boolean
          description: A custom name for your mutual authentication. Optional. If name is not supplied we will auto-generate one.
        name,omitempty:
          type: string
    LoggingSyslogAdditional:
      type: object
      properties:
        message_type,omitempty:
          $ref: '#/components/schemas/LoggingMessageType'
          description: The hostname used for the syslog endpoint.
        hostname,omitempty:
          type: string
          description: The IPv4 address used for the syslog endpoint.
        ipv4,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: Whether to prepend each message with a specific token.
        token,omitempty:
          $ref: '#/components/schemas/NullableString'
        use_tls,omitempty:
          $ref: '#/components/schemas/LoggingUseTLSString'
    DomainInspectorEntryDimensions:
      type: object
      properties:
        region,omitempty:
          type: string
          description: The POP from which the edge responses in this data entry were delivered. If unspecified, results are aggregated across POPs.
        datacenter,omitempty:
          type: string
          description: The domain from which the edge responses in this data entry were delivered. If unspecified, results are aggregated across domains.
        domain,omitempty:
          type: string
    DimensionAttributesCountryStats:
      type: object
      properties:
        country_chr,omitempty:
          type: number
          format: float
          description: The error rate for the country.
        country_error_rate,omitempty:
          type: number
          format: float
          description: This country's percentage of the total requests.
        country_request_rate,omitempty:
          type: number
          format: float
    BulkUpdateConfigStoreItem:
      type: object
      properties:
        item_key,omitempty:
          type: string
          description: Item value, maximum 8000 characters.
        item_value,omitempty:
          type: string
        op,omitempty:
          type: string
    RelationshipDefaultEcdsaTLSCertificateDefaultEcdsaCertificate:
      type: object
      properties:
        data,omitempty:
          $ref: '#/components/schemas/RelationshipDefaultEcdsaTLSCertificateDefaultEcdsaCertificateData'
    BotManagementResponseServiceService:
      type: object
      properties:
        id,omitempty:
          type: string
          description: Name of the object
        object,omitempty:
          type: string
    OriginInspectorMeasurements:
      type: object
      properties:
        responses,omitempty:
          type: integer
          format: int64
          description: Number of header bytes from origin.
        resp_header_bytes,omitempty:
          type: integer
          format: int64
          description: Number of body bytes from origin.
        resp_body_bytes,omitempty:
          type: integer
          format: int64
          description: Number of 1xx \"Informational\" status codes delivered from origin.
        status_1xx,omitempty:
          type: integer
          format: int64
          description: Number of 2xx \"Success\" status codes delivered from origin.
        status_2xx,omitempty:
          type: integer
          format: int64
          description: Number of 3xx \"Redirection\" codes delivered from origin.
        status_3xx,omitempty:
          type: integer
          format: int64
          description: Number of 4xx \"Client Error\" codes delivered from origin.
        status_4xx,omitempty:
          type: integer
          format: int64
          description: Number of 5xx \"Server Error\" codes delivered from origin.
        status_5xx,omitempty:
          type: integer
          format: int64
          description: Number of responses received with status code 200 (Success) from origin.
        status_200,omitempty:
          type: integer
          format: int64
          description: Number of responses received with status code 204 (No Content) from origin.
        status_204,omitempty:
          type: integer
          format: int64
          description: Number of responses received with status code 206 (Partial Content) from origin.
        status_206,omitempty:
          type: integer
          format: int64
          description: Number of responses received with status code 301 (Moved Permanently) from origin.
        status_301,omitempty:
          type: integer
          format: int64
          description: Number of responses received with status code 302 (Found) from origin.
        status_302,omitempty:
          type: integer
          format: int64
          description: Number of responses received with status code 304 (Not Modified) from origin.
        status_304,omitempty:
          type: integer
          format: int64
          description: Number of responses received with status code 400 (Bad Request) from origin.
        status_400,omitempty:
          type: integer
          format: int64
          description: Number of responses received with status code 401 (Unauthorized) from origin.
        status_401,omitempty:
          type: integer
          format: int64
          description: Number of responses received with status code 403 (Forbidden) from origin.
        status_403,omitempty:
          type: integer
          format: int64
          description: Number of responses received with status code 404 (Not Found) from origin.
        status_404,omitempty:
          type: integer
          format: int64
          description: Number of responses received with status code 416 (Range Not Satisfiable) from origin.
        status_416,omitempty:
          type: integer
          format: int64
          description: Number of responses received with status code 429 (Too Many Requests) from origin.
        status_429,omitempty:
          type: integer
          format: int64
          description: Number of responses received with status code 500 (Internal Server Error) from origin.
        status_500,omitempty:
          type: integer
          format: int64
          description: Number of responses received with status code 501 (Not Implemented) from origin.
        status_501,omitempty:
          type: integer
          format: int64
          description: Number of responses received with status code 502 (Bad Gateway) from origin.
        status_502,omitempty:
          type: integer
          format: int64
          description: Number of responses received with status code 503 (Service Unavailable) from origin.
        status_503,omitempty:
          type: integer
          format: int64
          description: Number of responses received with status code 504 (Gateway Timeout) from origin.
        status_504,omitempty:
          type: integer
          format: int64
          description: Number of responses received with status code 505 (HTTP Version Not Supported) from origin.
        status_505,omitempty:
          type: integer
          format: int64
          description: Number of responses received from origin with status code 530.
        status_530,omitempty:
          type: integer
          format: int64
          description: Number of responses from origin with latency between 0 and 1 millisecond.
        latency_0_to_1ms,omitempty:
          type: integer
          format: int64
          description: Number of responses from origin with latency between 1 and 5 milliseconds.
        latency_1_to_5ms,omitempty:
          type: integer
          format: int64
          description: Number of responses from origin with latency between 5 and 10 milliseconds.
        latency_5_to_10ms,omitempty:
          type: integer
          format: int64
          description: Number of responses from origin with latency between 10 and 50 milliseconds.
        latency_10_to_50ms,omitempty:
          type: integer
          format: int64
          description: Number of responses from origin with latency between 50 and 100 milliseconds.
        latency_50_to_100ms,omitempty:
          type: integer
          format: int64
          description: Number of responses from origin with latency between 100 and 250 milliseconds.
        latency_100_to_250ms,omitempty:
          type: integer
          format: int64
          description: Number of responses from origin with latency between 250 and 500 milliseconds.
        latency_250_to_500ms,omitempty:
          type: integer
          format: int64
          description: Number of responses from origin with latency between 500 and 1,000 milliseconds.
        latency_500_to_1000ms,omitempty:
          type: integer
          format: int64
          description: Number of responses from origin with latency between 1,000 and 5,000 milliseconds.
        latency_1000_to_5000ms,omitempty:
          type: integer
          format: int64
          description: Number of responses from origin with latency between 5,000 and 10,000 milliseconds.
        latency_5000_to_10000ms,omitempty:
          type: integer
          format: int64
          description: Number of responses from origin with latency between 10,000 and 60,000 milliseconds.
        latency_10000_to_60000ms,omitempty:
          type: integer
          format: int64
          description: Number of responses from origin with latency of 60,000 milliseconds and above.
        latency_60000ms,omitempty:
          type: integer
          format: int64
          description: Number of responses received for origin requests made by the Fastly WAF.
        waf_responses,omitempty:
          type: integer
          format: int64
          description: Number of header bytes received for origin requests made by the Fastly WAF.
        waf_resp_header_bytes,omitempty:
          type: integer
          format: int64
          description: Number of body bytes received for origin requests made by the Fastly WAF.
        waf_resp_body_bytes,omitempty:
          type: integer
          format: int64
          description: Number of 1xx \"Informational\" status codes received for origin requests made by the Fastly WAF.
        waf_status_1xx,omitempty:
          type: integer
          format: int64
          description: Number of 2xx \"Success\" status codes received for origin requests made by the Fastly WAF.
        waf_status_2xx,omitempty:
          type: integer
          format: int64
          description: Number of 3xx \"Redirection\" codes received for origin requests made by the Fastly WAF.
        waf_status_3xx,omitempty:
          type: integer
          format: int64
          description: Number of 4xx \"Client Error\" codes received for origin requests made by the Fastly WAF.
        waf_status_4xx,omitempty:
          type: integer
          format: int64
          description: Number of 5xx \"Server Error\" codes received for origin requests made by the Fastly WAF.
        waf_status_5xx,omitempty:
          type: integer
          format: int64
          description: Number of responses received with status code 200 (Success) received for origin requests made by the Fastly WAF.
        waf_status_200,omitempty:
          type: integer
          format: int64
          description: Number of responses received with status code 204 (No Content) received for origin requests made by the Fastly WAF.
        waf_status_204,omitempty:
          type: integer
          format: int64
          description: Number of responses received with status code 206 (Partial Content) received for origin requests made by the Fastly WAF.
        waf_status_206,omitempty:
          type: integer
          format: int64
          description: Number of responses received with status code 301 (Moved Permanently) received for origin requests made by the Fastly WAF.
        waf_status_301,omitempty:
          type: integer
          format: int64
          description: Number of responses received with status code 302 (Found) received for origin requests made by the Fastly WAF.
        waf_status_302,omitempty:
          type: integer
          format: int64
          description: Number of responses received with status code 304 (Not Modified) received for origin requests made by the Fastly WAF.
        waf_status_304,omitempty:
          type: integer
          format: int64
          description: Number of responses received with status code 400 (Bad Request) received for origin requests made by the Fastly WAF.
        waf_status_400,omitempty:
          type: integer
          format: int64
          description: Number of responses received with status code 401 (Unauthorized) received for origin requests made by the Fastly WAF.
        waf_status_401,omitempty:
          type: integer
          format: int64
          description: Number of responses received with status code 403 (Forbidden) received for origin requests made by the Fastly WAF.
        waf_status_403,omitempty:
          type: integer
          format: int64
          description: Number of responses received with status code 404 (Not Found) received for origin requests made by the Fastly WAF.
        waf_status_404,omitempty:
          type: integer
          format: int64
          description: Number of responses received with status code 416 (Range Not Satisfiable) received for origin requests made by the Fastly WAF.
        waf_status_416,omitempty:
          type: integer
          format: int64
          description: Number of responses received with status code 429 (Too Many Requests) received for origin requests made by the Fastly WAF.
        waf_status_429,omitempty:
          type: integer
          format: int64
          description: Number of responses received with status code 500 (Internal Server Error) received for origin requests made by the Fastly WAF.
        waf_status_500,omitempty:
          type: integer
          format: int64
          description: Number of responses received with status code 501 (Not Implemented) received for origin requests made by the Fastly WAF.
        waf_status_501,omitempty:
          type: integer
          format: int64
          description: Number of responses received with status code 502 (Bad Gateway) received for origin requests made by the Fastly WAF.
        waf_status_502,omitempty:
          type: integer
          format: int64
          description: Number of responses received with status code 503 (Service Unavailable) received for origin requests made by the Fastly WAF.
        waf_status_503,omitempty:
          type: integer
          format: int64
          description: Number of responses received with status code 504 (Gateway Timeout) received for origin requests made by the Fastly WAF.
        waf_status_504,omitempty:
          type: integer
          format: int64
          description: Number of responses received with status code 505 (HTTP Version Not Supported) received for origin requests made by the Fastly WAF.
        waf_status_505,omitempty:
          type: integer
          format: int64
          description: Number of responses received with status code 530 received for origin requests made by the Fastly WAF.
        waf_status_530,omitempty:
          type: integer
          format: int64
          description: Number of responses with latency between 0 and 1 millisecond received for origin requests made by the Fastly WAF.
        waf_latency_0_to_1ms,omitempty:
          type: integer
          format: int64
          description: Number of responses with latency between 1 and 5 milliseconds received for origin requests made by the Fastly WAF.
        waf_latency_1_to_5ms,omitempty:
          type: integer
          format: int64
          description: Number of responses with latency between 5 and 10 milliseconds received for origin requests made by the Fastly WAF.
        waf_latency_5_to_10ms,omitempty:
          type: integer
          format: int64
          description: Number of responses with latency between 10 and 50 milliseconds received for origin requests made by the Fastly WAF.
        waf_latency_10_to_50ms,omitempty:
          type: integer
          format: int64
          description: Number of responses with latency between 50 and 100 milliseconds received for origin requests made by the Fastly WAF.
        waf_latency_50_to_100ms,omitempty:
          type: integer
          format: int64
          description: Number of responses with latency between 100 and 250 milliseconds received for origin requests made by the Fastly WAF.
        waf_latency_100_to_250ms,omitempty:
          type: integer
          format: int64
          description: Number of responses with latency between 250 and 500 milliseconds received for origin requests made by the Fastly WAF.
        waf_latency_250_to_500ms,omitempty:
          type: integer
          format: int64
          description: Number of responses with latency between 500 and 1,000 milliseconds received for origin requests made by the Fastly WAF.
        waf_latency_500_to_1000ms,omitempty:
          type: integer
          format: int64
          description: Number of responses with latency between 1,000 and 5,000 milliseconds received for origin requests made by the Fastly WAF.
        waf_latency_1000_to_5000ms,omitempty:
          type: integer
          format: int64
          description: Number of responses with latency between 5,000 and 10,000 milliseconds received for origin requests made by the Fastly WAF.
        waf_latency_5000_to_10000ms,omitempty:
          type: integer
          format: int64
          description: Number of responses with latency between 10,000 and 60,000 milliseconds received for origin requests made by the Fastly WAF.
        waf_latency_10000_to_60000ms,omitempty:
          type: integer
          format: int64
          description: Number of responses with latency of 60,000 milliseconds and above received for origin requests made by the Fastly WAF.
        waf_latency_60000ms,omitempty:
          type: integer
          format: int64
          description: Number of responses for origin received by the Compute platform.
        compute_responses,omitempty:
          type: integer
          format: int64
          description: Number of header bytes for origin received by the Compute platform.
        compute_resp_header_bytes,omitempty:
          type: integer
          format: int64
          description: Number of body bytes for origin received by the Compute platform.
        compute_resp_body_bytes,omitempty:
          type: integer
          format: int64
          description: Number of 1xx \"Informational\" status codes for origin received by the Compute platform.
        compute_status_1xx,omitempty:
          type: integer
          format: int64
          description: Number of 2xx \"Success\" status codes for origin received by the Compute platform.
        compute_status_2xx,omitempty:
          type: integer
          format: int64
          description: Number of 3xx \"Redirection\" codes for origin received by the Compute platform.
        compute_status_3xx,omitempty:
          type: integer
          format: int64
          description: Number of 4xx \"Client Error\" codes for origin received by the Compute platform.
        compute_status_4xx,omitempty:
          type: integer
          format: int64
          description: Number of 5xx \"Server Error\" codes for origin received by the Compute platform.
        compute_status_5xx,omitempty:
          type: integer
          format: int64
          description: Number of responses received with status code 200 (Success) for origin received by the Compute platform.
        compute_status_200,omitempty:
          type: integer
          format: int64
          description: Number of responses received with status code 204 (No Content) for origin received by the Compute platform.
        compute_status_204,omitempty:
          type: integer
          format: int64
          description: Number of responses received with status code 206 (Partial Content) for origin received by the Compute platform.
        compute_status_206,omitempty:
          type: integer
          format: int64
          description: Number of responses received with status code 301 (Moved Permanently) for origin received by the Compute platform.
        compute_status_301,omitempty:
          type: integer
          format: int64
          description: Number of responses received with status code 302 (Found) for origin received by the Compute platform.
        compute_status_302,omitempty:
          type: integer
          format: int64
          description: Number of responses received with status code 304 (Not Modified) for origin received by the Compute platform.
        compute_status_304,omitempty:
          type: integer
          format: int64
          description: Number of responses received with status code 400 (Bad Request) for origin received by the Compute platform.
        compute_status_400,omitempty:
          type: integer
          format: int64
          description: Number of responses received with status code 401 (Unauthorized) for origin received by the Compute platform.
        compute_status_401,omitempty:
          type: integer
          format: int64
          description: Number of responses received with status code 403 (Forbidden) for origin received by the Compute platform.
        compute_status_403,omitempty:
          type: integer
          format: int64
          description: Number of responses received with status code 404 (Not Found) for origin received by the Compute platform.
        compute_status_404,omitempty:
          type: integer
          format: int64
          description: Number of responses received with status code 416 (Range Not Satisfiable) for origin received by the Compute platform.
        compute_status_416,omitempty:
          type: integer
          format: int64
          description: Number of responses received with status code 429 (Too Many Requests) for origin received by the Compute platform.
        compute_status_429,omitempty:
          type: integer
          format: int64
          description: Number of responses received with status code 500 (Internal Server Error) for origin received by the Compute platform.
        compute_status_500,omitempty:
          type: integer
          format: int64
          description: Number of responses received with status code 501 (Not Implemented) for origin received by the Compute platform.
        compute_status_501,omitempty:
          type: integer
          format: int64
          description: Number of responses received with status code 502 (Bad Gateway) for origin received by the Compute platform.
        compute_status_502,omitempty:
          type: integer
          format: int64
          description: Number of responses received with status code 503 (Service Unavailable) for origin received by the Compute platform.
        compute_status_503,omitempty:
          type: integer
          format: int64
          description: Number of responses received with status code 504 (Gateway Timeout) for origin received by the Compute platform.
        compute_status_504,omitempty:
          type: integer
          format: int64
          description: Number of responses received with status code 505 (HTTP Version Not Supported) for origin received by the Compute platform.
        compute_status_505,omitempty:
          type: integer
          format: int64
          description: Number of responses received with status code 530 for origin received by the Compute platform.
        compute_status_530,omitempty:
          type: integer
          format: int64
          description: Number of responses with latency between 0 and 1 millisecond for origin received by the Compute platform.
        compute_latency_0_to_1ms,omitempty:
          type: integer
          format: int64
          description: Number of responses with latency between 1 and 5 milliseconds for origin received by the Compute platform.
        compute_latency_1_to_5ms,omitempty:
          type: integer
          format: int64
          description: Number of responses with latency between 5 and 10 milliseconds for origin received by the Compute platform.
        compute_latency_5_to_10ms,omitempty:
          type: integer
          format: int64
          description: Number of responses with latency between 10 and 50 milliseconds for origin received by the Compute platform.
        compute_latency_10_to_50ms,omitempty:
          type: integer
          format: int64
          description: Number of responses with latency between 50 and 100 milliseconds for origin received by the Compute platform.
        compute_latency_50_to_100ms,omitempty:
          type: integer
          format: int64
          description: Number of responses with latency between 100 and 250 milliseconds for origin received by the Compute platform.
        compute_latency_100_to_250ms,omitempty:
          type: integer
          format: int64
          description: Number of responses with latency between 250 and 500 milliseconds for origin received by the Compute platform.
        compute_latency_250_to_500ms,omitempty:
          type: integer
          format: int64
          description: Number of responses with latency between 500 and 1,000 milliseconds for origin received by the Compute platform.
        compute_latency_500_to_1000ms,omitempty:
          type: integer
          format: int64
          description: Number of responses with latency between 1,000 and 5,000 milliseconds for origin received by the Compute platform.
        compute_latency_1000_to_5000ms,omitempty:
          type: integer
          format: int64
          description: Number of responses with latency between 5,000 and 10,000 milliseconds for origin received by the Compute platform.
        compute_latency_5000_to_10000ms,omitempty:
          type: integer
          format: int64
          description: Number of responses with latency between 10,000 and 60,000 milliseconds for origin received by the Compute platform.
        compute_latency_10000_to_60000ms,omitempty:
          type: integer
          format: int64
          description: Number of responses with latency of 60,000 milliseconds and above for origin received by the Compute platform.
        compute_latency_60000ms,omitempty:
          type: integer
          format: int64
          description: Number of responses received for origin requests made by all sources.
        all_responses,omitempty:
          type: integer
          format: int64
          description: Number of header bytes received for origin requests made by all sources.
        all_resp_header_bytes,omitempty:
          type: integer
          format: int64
          description: Number of body bytes received for origin requests made by all sources.
        all_resp_body_bytes,omitempty:
          type: integer
          format: int64
          description: Number of 1xx \"Informational\" category status codes delivered received for origin requests made by all sources.
        all_status_1xx,omitempty:
          type: integer
          format: int64
          description: Number of 2xx \"Success\" status codes received for origin requests made by all sources.
        all_status_2xx,omitempty:
          type: integer
          format: int64
          description: Number of 3xx \"Redirection\" codes received for origin requests made by all sources.
        all_status_3xx,omitempty:
          type: integer
          format: int64
          description: Number of 4xx \"Client Error\" codes received for origin requests made by all sources.
        all_status_4xx,omitempty:
          type: integer
          format: int64
          description: Number of 5xx \"Server Error\" codes received for origin requests made by all sources.
        all_status_5xx,omitempty:
          type: integer
          format: int64
          description: Number of responses received with status code 200 (Success) received for origin requests made by all sources.
        all_status_200,omitempty:
          type: integer
          format: int64
          description: Number of responses received with status code 204 (No Content) received for origin requests made by all sources.
        all_status_204,omitempty:
          type: integer
          format: int64
          description: Number of responses received with status code 206 (Partial Content) received for origin requests made by all sources.
        all_status_206,omitempty:
          type: integer
          format: int64
          description: Number of responses received with status code 301 (Moved Permanently) received for origin requests made by all sources.
        all_status_301,omitempty:
          type: integer
          format: int64
          description: Number of responses received with status code 302 (Found) received for origin requests made by all sources.
        all_status_302,omitempty:
          type: integer
          format: int64
          description: Number of responses received with status code 304 (Not Modified) received for origin requests made by all sources.
        all_status_304,omitempty:
          type: integer
          format: int64
          description: Number of responses received with status code 400 (Bad Request) received for origin requests made by all sources.
        all_status_400,omitempty:
          type: integer
          format: int64
          description: Number of responses received with status code 401 (Unauthorized) received for origin requests made by all sources.
        all_status_401,omitempty:
          type: integer
          format: int64
          description: Number of responses received with status code 403 (Forbidden) received for origin requests made by all sources.
        all_status_403,omitempty:
          type: integer
          format: int64
          description: Number of responses received with status code 404 (Not Found) received for origin requests made by all sources.
        all_status_404,omitempty:
          type: integer
          format: int64
          description: Number of responses received with status code 416 (Range Not Satisfiable) received for origin requests made by all sources.
        all_status_416,omitempty:
          type: integer
          format: int64
          description: Number of responses received with status code 429 (Too Many Requests) received for origin requests made by all sources.
        all_status_429,omitempty:
          type: integer
          format: int64
          description: Number of responses received with status code 500 (Internal Server Error) received for origin requests made by all sources.
        all_status_500,omitempty:
          type: integer
          format: int64
          description: Number of responses received with status code 501 (Not Implemented) received for origin requests made by all sources.
        all_status_501,omitempty:
          type: integer
          format: int64
          description: Number of responses received with status code 502 (Bad Gateway) received for origin requests made by all sources.
        all_status_502,omitempty:
          type: integer
          format: int64
          description: Number of responses received with status code 503 (Service Unavailable) received for origin requests made by all sources.
        all_status_503,omitempty:
          type: integer
          format: int64
          description: Number of responses received with status code 504 (Gateway Timeout) received for origin requests made by all sources.
        all_status_504,omitempty:
          type: integer
          format: int64
          description: Number of responses received with status code 505 (HTTP Version Not Supported) received for origin requests made by all sources.
        all_status_505,omitempty:
          type: integer
          format: int64
          description: Number of responses received with status code 530 received for origin requests made by all sources.
        all_status_530,omitempty:
          type: integer
          format: int64
          description: Number of responses with latency between 0 and 1 millisecond received for origin requests made by all sources.
        all_latency_0_to_1ms,omitempty:
          type: integer
          format: int64
          description: Number of responses with latency between 1 and 5 milliseconds received for origin requests made by all sources.
        all_latency_1_to_5ms,omitempty:
          type: integer
          format: int64
          description: Number of responses with latency between 5 and 10 milliseconds received for origin requests made by all sources.
        all_latency_5_to_10ms,omitempty:
          type: integer
          format: int64
          description: Number of responses with latency between 10 and 50 milliseconds received for origin requests made by all sources.
        all_latency_10_to_50ms,omitempty:
          type: integer
          format: int64
          description: Number of responses with latency between 50 and 100 milliseconds received for origin requests made by all sources.
        all_latency_50_to_100ms,omitempty:
          type: integer
          format: int64
          description: Number of responses with latency between 100 and 250 milliseconds received for origin requests made by all sources.
        all_latency_100_to_250ms,omitempty:
          type: integer
          format: int64
          description: Number of responses with latency between 250 and 500 milliseconds received for origin requests made by all sources.
        all_latency_250_to_500ms,omitempty:
          type: integer
          format: int64
          description: Number of responses with latency between 500 and 1,000 milliseconds received for origin requests made by all sources.
        all_latency_500_to_1000ms,omitempty:
          type: integer
          format: int64
          description: Number of responses with latency between 1,000 and 5,000 milliseconds received for origin requests made by all sources.
        all_latency_1000_to_5000ms,omitempty:
          type: integer
          format: int64
          description: Number of responses with latency between 5,000 and 10,000 milliseconds received for origin requests made by all sources.
        all_latency_5000_to_10000ms,omitempty:
          type: integer
          format: int64
          description: Number of responses with latency between 10,000 and 60,000 milliseconds received for origin requests made by all sources.
        all_latency_10000_to_60000ms,omitempty:
          type: integer
          format: int64
          description: Number of responses with latency of 60,000 milliseconds and above received for origin requests made by all sources.
        all_latency_60000ms,omitempty:
          type: integer
          format: int64
    BrotliCompressionResponseService:
      type: object
      properties:
        service,omitempty:
          $ref: '#/components/schemas/BotManagementResponseServiceService'
    LoggingCloudfilesResponse:
      type: object
      properties:
        name,omitempty:
          type: string
          description: Where in the generated VCL the logging call should be placed. If not set, endpoints with `format_version` of 2 are placed in `vcl_log` and those with `format_version` of 1 are placed
            in `vcl_deliver`.
        placement,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: The name of an existing condition in the configured endpoint, or leave blank to always execute.
        response_condition,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: A Fastly [log format string](https://docs.fastly.com/en/guides/custom-log-formats).
        format,omitempty:
          type: string
          description: The version of the custom logging format used for the configured endpoint. The logging call gets placed by default in `vcl_log` if `format_version` is set to `2` and in `vcl_deliver`
            if `format_version` is set to `1`.
        format_version,omitempty:
          type: string
          description: How the message should be formatted.
        message_type,omitempty:
          type: string
          description: A timestamp format
        timestamp_format,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: The codec used for compressing your logs. Valid values are `zstd`, `snappy`, and `gzip`. Specifying both `compression_codec` and `gzip_level` in the same API request will result in
            an error.
        compression_codec,omitempty:
          type: string
          description: How frequently log files are finalized so they can be available for reading (in seconds).
        period,omitempty:
          type: string
          description: The level of gzip encoding when sending logs (default `0`, no compression). Specifying both `compression_codec` and `gzip_level` in the same API request will result in an error.
        gzip_level,omitempty:
          type: string
          description: Date and time in ISO 8601 format.
        created_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        deleted_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        updated_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
        service_id,omitempty:
          type: string
        version,omitempty:
          type: string
          description: Your Cloud Files account access key.
        access_key,omitempty:
          type: string
          description: The name of your Cloud Files container.
        bucket_name,omitempty:
          type: string
          description: The path to upload logs to.
        path,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: The region to stream logs to.
        region,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: A PGP public key that Fastly will use to encrypt your log files before writing them to disk.
        public_key,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: The username for your Cloud Files account.
        user,omitempty:
          type: string
    LoggingScalyrAdditional:
      type: object
      properties:
        region,omitempty:
          type: string
          description: The token to use for authentication.
        token,omitempty:
          type: string
          description: The name of the logfile within Scalyr.
        project_id,omitempty:
          type: string
    TLSCsrResponseData:
      type: object
      properties:
        id,omitempty:
          type: string
        type,omitempty:
          $ref: '#/components/schemas/TypeTLSCsr'
        attributes,omitempty:
          $ref: '#/components/schemas/TLSCsrResponseAttributes'
        relationships,omitempty:
          $ref: '#/components/schemas/RelationshipTLSPrivateKey'
    DomainInspectorResponseLinksGetAllServicesLinks:
      type: object
      properties:
        self,omitempty:
          type: string
    DdosProtectionTrafficStats:
      type: object
      properties:
        created_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        updated_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Alphanumeric string identifying the customer.
        customer_id,omitempty:
          type: string
          description: Alphanumeric string identifying the service.
        service_id,omitempty:
          type: string
    OriginInspectorResponseLinksGetAllServices:
      type: object
      properties:
        _links,omitempty:
          $ref: '#/components/schemas/OriginInspectorResponseLinksGetAllServicesLinks'
    RequestSettingsAdditional:
      type: object
      properties:
        action,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: Sets the host header.
        default_host,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: Comma separated list of varnish request object fields that should be in the hash key.
        hash_keys,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: Name for the request settings.
        name,omitempty:
          type: string
          description: Condition which, if met, will select this configuration during a request. Optional.
        request_condition,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: Short for X-Forwarded-For.
        xff,omitempty:
          $ref: '#/components/schemas/NullableString'
    VersionResponse:
      type: object
      properties:
        active,omitempty:
          type: boolean
          description: A freeform descriptive note.
        comment,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: Unused at this time.
        deployed,omitempty:
          type: boolean
          description: Whether this version is locked or not. Objects can not be added or edited on locked versions.
        locked,omitempty:
          type: boolean
          description: The number of this version.
        number,omitempty:
          type: integer
          format: int32
          description: Unused at this time.
        staging,omitempty:
          type: boolean
          description: Unused at this time.
        testing,omitempty:
          type: boolean
          description: Date and time in ISO 8601 format.
        created_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        deleted_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        updated_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
        service_id,omitempty:
          type: string
          description: A list of environments where the service has been deployed.
    AutomationTokenCreateResponseAllOf:
      type: object
      properties:
        id,omitempty:
          $ref: '#/components/schemas/ReadOnlyID'
        user_id,omitempty:
          $ref: '#/components/schemas/ReadOnlyUserID'
        customer_id,omitempty:
          $ref: '#/components/schemas/ReadOnlyCustomerID'
          description: A UTC timestamp of when the token was created.
        created_at,omitempty:
          type: string
          format: date-time
        access_token,omitempty:
          type: string
          description: Indicates whether TLS access is enabled for the token.
        tls_access,omitempty:
          type: boolean
          description: A UTC timestamp of when the token was last used.
        last_used_at,omitempty:
          type: string
          format: date-time
          description: The User-Agent header of the client that last used the token.
        user_agent,omitempty:
          type: string
    ConfigStoreItemResponseAllOf:
      type: object
      properties:
        store_id,omitempty:
          type: string
    BotManagementResponseLinksGetAllServicesLinks:
      type: object
      properties:
        self,omitempty:
          type: string
    HistoricalDdos:
      type: object
      properties:
        status,omitempty:
          type: string
        meta,omitempty:
          $ref: '#/components/schemas/HistoricalDdosMeta'
          description: If the query was not successful, this will provide a string that explains why.
        msg,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: A list of [entries](#entry-data-model).
    ComputeACLListEntriesItem:
      type: object
      properties:
        prefix,omitempty:
          type: string
          description: One of \"ALLOW\" or \"BLOCK\".
        action,omitempty:
          type: string
    WebsocketsResponseLinks:
      type: object
      properties:
        _links,omitempty:
          $ref: '#/components/schemas/WebsocketsResponseLinksLinks'
    LoggingHoneycombResponse:
      type: object
      properties:
        name,omitempty:
          type: string
          description: Where in the generated VCL the logging call should be placed. If not set, endpoints with `format_version` of 2 are placed in `vcl_log` and those with `format_version` of 1 are placed
            in `vcl_deliver`.
        placement,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: The name of an existing condition in the configured endpoint, or leave blank to always execute.
        response_condition,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: A Fastly [log format string](https://docs.fastly.com/en/guides/custom-log-formats). Must produce valid JSON that Honeycomb can ingest.
        format,omitempty:
          type: string
          description: The version of the custom logging format used for the configured endpoint. The logging call gets placed by default in `vcl_log` if `format_version` is set to `2` and in `vcl_deliver`
            if `format_version` is set to `1`.
        format_version,omitempty:
          type: string
          description: The Honeycomb Dataset you want to log to.
        dataset,omitempty:
          type: string
          description: The Write Key from the Account page of your Honeycomb account.
        token,omitempty:
          type: string
          description: Date and time in ISO 8601 format.
        created_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        deleted_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        updated_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
        service_id,omitempty:
          type: string
        version,omitempty:
          type: string
    VclSyntaxHighlightingResponse:
      type: object
      properties:
        content,omitempty:
          type: string
    TLSCertificateResponseData:
      type: object
      properties:
        type,omitempty:
          $ref: '#/components/schemas/TypeTLSCertificate'
        attributes,omitempty:
          $ref: '#/components/schemas/TLSCertificateResponseAttributes'
        relationships,omitempty:
          $ref: '#/components/schemas/RelationshipTLSDomains'
        id,omitempty:
          type: string
    SecretStore:
      type: object
      properties:
        name,omitempty:
          type: string
    TLSDomainData:
      type: object
      properties:
        id,omitempty:
          type: string
        type,omitempty:
          $ref: '#/components/schemas/TypeTLSDomain'
        relationships,omitempty:
          $ref: '#/components/schemas/RelationshipsForTLSDomain'
    ValuesDuration:
      type: object
      properties:
        average_response_time,omitempty:
          type: number
          format: float
          description: The P95 time in seconds to respond to requests to the URL in the current dimension.
        p95_response_time,omitempty:
          type: number
          format: float
          description: The total percentage of time to respond to all requests to the URL in the current dimension.
        response_time_percentage,omitempty:
          type: number
          format: float
    SecretResponse:
      type: object
      properties:
        name,omitempty:
          type: string
          description: An opaque identifier of the plaintext secret value. This can be used to determine if a secret value has changed.
        digest,omitempty:
          type: string
          description: Date and time in ISO 8601 format.
        created_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: True if the secret replaced a secret with the same name.
        recreated,omitempty:
          $ref: '#/components/schemas/NullableBool'
    ImageOptimizerResponseBodyGetAllServices:
      type: object
      properties:
        product,omitempty:
          $ref: '#/components/schemas/ImageOptimizerResponseProductProduct'
        customer,omitempty:
          $ref: '#/components/schemas/BotManagementResponseCustomerCustomer'
          description: A list of services with Image Optimizer enabled.
        _links,omitempty:
          $ref: '#/components/schemas/ImageOptimizerResponseLinksGetAllServicesLinks'
    DdosProtectionResponseBodyGetAllServices:
      type: object
      properties:
        product,omitempty:
          $ref: '#/components/schemas/DdosProtectionResponseProductProduct'
        customer,omitempty:
          $ref: '#/components/schemas/BotManagementResponseCustomerCustomer'
          description: A list of services with DDoS Protection enabled.
        _links,omitempty:
          $ref: '#/components/schemas/DdosProtectionResponseLinksGetAllServicesLinks'
    FanoutResponseLinksGetAllServicesLinks:
      type: object
      properties:
        self,omitempty:
          type: string
    ComputeACLListEntries:
      type: object
      properties:
        meta,omitempty:
          $ref: '#/components/schemas/ComputeACLListEntriesMeta'
    InlineResponse400:
      type: object
      properties:
        code,omitempty:
          type: string
    OriginInspectorHistoricalMetaFilters:
      type: object
      properties:
        region,omitempty:
          type: string
        datacenter,omitempty:
          type: string
        host,omitempty:
          type: string
    MutualAuthenticationResponseAttributesAllOf:
      type: object
      properties:
        enforced,omitempty:
          type: boolean
    HTTP3:
      type: object
      properties:
        service_id,omitempty:
          type: string
        version,omitempty:
          type: integer
          format: int32
          description: Date and time in ISO 8601 format.
        created_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        deleted_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Date and time in ISO 8601 format.
        updated_at,omitempty:
          $ref: '#/components/schemas/NullableTime'
          description: Revision number of the HTTP/3 feature implementation. Defaults to the most recent revision.
        feature_revision,omitempty:
          type: integer
          format: int32
    TLSCertificateResponse:
      type: object
      properties:
        data,omitempty:
          $ref: '#/components/schemas/TLSCertificateResponseData'
    TLSBulkCertificateData:
      type: object
      properties:
        type,omitempty:
          $ref: '#/components/schemas/TypeTLSBulkCertificate'
        attributes,omitempty:
          $ref: '#/components/schemas/TLSBulkCertificateDataAttributes'
        relationships,omitempty:
          $ref: '#/components/schemas/RelationshipsForTLSBulkCertificate'
    WebsocketsResponseCustomer:
      type: object
      properties:
        customer,omitempty:
          $ref: '#/components/schemas/BotManagementResponseCustomerCustomer'
    AutomationTokenCreateRequest:
      type: object
      properties:
        attributes,omitempty:
          $ref: '#/components/schemas/AutomationTokenCreateRequestAttributes'
    ServiceIDAndVersion:
      type: object
      properties:
        service_id,omitempty:
          type: string
        version,omitempty:
          type: integer
          format: int32
    DictionaryItemResponseAllOf:
      type: object
      properties:
        dictionary_id,omitempty:
          type: string
        service_id,omitempty:
          type: string
    RelationshipDefaultEcdsaTLSCertificate:
      type: object
      properties:
        default_ecdsa_certificate,omitempty:
          $ref: '#/components/schemas/RelationshipDefaultEcdsaTLSCertificateDefaultEcdsaCertificate'
    AsyncResponse:
      type: object
      properties:
        title,omitempty:
          type: string
        status,omitempty:
          type: string
    OriginInspectorResponseLinks:
      type: object
      properties:
        _links,omitempty:
          $ref: '#/components/schemas/OriginInspectorResponseLinksLinks'
    EventResponse:
      type: object
      properties:
        data,omitempty:
          $ref: '#/components/schemas/Event'
    ServiceAuthorizationDataRelationshipsUser:
      type: object
      properties:
        data,omitempty:
          $ref: '#/components/schemas/ServiceAuthorizationDataRelationshipsUserData'
    RelationshipMemberTLSConfiguration:
      type: object
      properties:
        type,omitempty:
          $ref: '#/components/schemas/TypeTLSConfiguration'
        id,omitempty:
          type: string
    ComputeACLListEntriesMeta:
      type: object
      properties:
        limit,omitempty:
          type: integer
          format: int32
          description: Used for pagination, supply to the next request to get the next block of results.
        next_cursor,omitempty:
          type: string
    ListEomInvoicesResponse:
      type: object
      properties:
        meta,omitempty:
          $ref: '#/components/schemas/Metadata'
    Resource:
      type: object
      properties:
        resource_id,omitempty:
          type: string
          description: The name of the resource link. Note this is separate from the resource store name and might not match the store name.
        name,omitempty:
          type: string
    TLSActivationResponseData:
      type: object
      properties:
        type,omitempty:
          $ref: '#/components/schemas/TypeTLSActivation'
        relationships,omitempty:
          $ref: '#/components/schemas/RelationshipsForTLSActivation'
        id,omitempty:
          type: string
        attributes,omitempty:
          $ref: '#/components/schemas/Timestamps'
    RelationshipTLSDNSRecordsRequestDNSRecordsData:
      type: object
      properties:
        type,omitempty:
          $ref: '#/components/schemas/TypeTLSDNSRecord'
        id,omitempty:
          type: string
    WebsocketsResponseProductProduct:
      type: object
      properties:
        id,omitempty:
          type: string
          description: Name of the object
        object,omitempty:
          type: string
    AutomationTokenResponse:
      type: object
      properties:
        name,omitempty:
          type: string
        role,omitempty:
          type: string
          description: (Optional) The service IDs of the services the token will have access to. Separate service IDs with a space. If no services are specified, the token will have access to all services
            on the account.
        scope,omitempty:
          type: string
          description: (optional) A UTC timestamp of when the token will expire.
        expires_at,omitempty:
          type: string
        id,omitempty:
          $ref: '#/components/schemas/ReadOnlyID'
        customer_id,omitempty:
          $ref: '#/components/schemas/ReadOnlyCustomerID'
          description: The IP address of the client that last used the token.
        ip,omitempty:
          type: string
          description: The User-Agent header of the client that last used the token.
        user_agent,omitempty:
          type: string
          description: Indicates whether TLS access is enabled for the token.
        tls_access,omitempty:
          type: boolean
          description: A UTC timestamp of when the token was last used.
        last_used_at,omitempty:
          type: string
          format: date-time
          description: A UTC timestamp of when the token was created.
        created_at,omitempty:
          type: string
    BrotliCompressionResponseLinksGetAllServicesLinks:
      type: object
      properties:
        self,omitempty:
          type: string
    CacheSetting:
      type: object
      properties:
        action,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: Name of the cache condition controlling when this configuration applies.
        cache_condition,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: Name for the cache settings object.
        name,omitempty:
          type: string
          description: Maximum time in seconds to continue to use a stale version of the object if future requests to your backend server fail (also known as 'stale if error').
        stale_ttl,omitempty:
          type: string
          description: Maximum time to consider the object fresh in the cache (the cache 'time to live').
        ttl,omitempty:
          type: string
    OriginInspectorHistorical:
      type: object
      properties:
        status,omitempty:
          type: string
        meta,omitempty:
          $ref: '#/components/schemas/OriginInspectorHistoricalMeta'
          description: If the query was not successful, this will provide a string that explains why.
        msg,omitempty:
          $ref: '#/components/schemas/NullableString'
          description: A list of [entries](#entry-data-model), each representing one unique combination of dimensions, such as origin host, region or POP.
    InlineResponse2008:
      type: object
      properties:
        meta,omitempty:
          $ref: '#/components/schemas/PaginationCursorMeta'
    TypeResource:
      type: string
      enum:
      - kv-store
      - secret-store
      - config
      description: Resource type
    TypeServiceAuthorization:
      type: string
      enum:
      - service_authorization
      description: Resource type
    TypeService:
      type: string
      enum:
      - service
      description: Resource type
    DdosProtectionAction:
      type: string
      enum:
      - default
      - block
      - log
      - disabled
      description: Action types for a rule.
    TypeStar:
      type: string
      enum:
      - star
      description: Resource type
    TypeUser:
      type: string
      enum:
      - user
      description: Resource type
    Permission:
      type: string
      enum:
      - full
      - read_only
      - purge_select
      - purge_all
      description: The permission the user has in relation to the service.
    LoggingPlacement:
      type: string
      enum:
      - none
      - waf_debug
      - 'null'
      description: Where in the generated VCL the logging call should be placed. If not set, endpoints with `format_version` of 2 are placed in `vcl_log` and those with `format_version` of 1 are placed
        in `vcl_deliver`.
    TypeTLSCsr:
      type: string
      enum:
      - csr
      description: CSR Resource Type
    AwsRegion:
      type: string
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - af-south-1
      - ap-east-1
      - ap-south-1
      - ap-northeast-3
      - ap-northeast-2
      - ap-southeast-1
      - ap-southeast-2
      - ap-northeast-1
      - ca-central-1
      - cn-north-1
      - cn-northwest-1
      - eu-central-1
      - eu-west-1
      - eu-west-2
      - eu-south-1
      - eu-west-3
      - eu-north-1
      - me-south-1
      - sa-east-1
      description: A named set of [AWS resources](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints) that's in the same geographical area.
    EnvironmentName:
      type: string
      enum:
      - staging
      description: the model 'EnvironmentName'
    TypeTLSDomain:
      type: string
      enum:
      - tls_domain
      description: Resource type
    TypeMutualAuthentication:
      type: string
      enum:
      - mutual_authentication
      description: Resource type
    TypeInvitation:
      type: string
      enum:
      - invitation
      description: Resource type
    TypeEvent:
      type: string
      enum:
      - event
      description: Resource type
    TypeTLSBulkCertificate:
      type: string
      enum:
      - tls_bulk_certificate
      description: Resource type
    TypeCustomer:
      type: string
      enum:
      - customer
      description: Resource type
    TypeTLSDNSRecord:
      type: string
      enum:
      - dns_record
      description: Resource type
    TypeBillingAddress:
      type: string
      enum:
      - billing_address
      description: Resource type
    TypeTLSActivation:
      type: string
      enum:
      - tls_activation
      description: Resource type.
    TypeTLSCertificate:
      type: string
      enum:
      - tls_certificate
      description: Resource type
    TypeTLSPrivateKey:
      type: string
      enum:
      - tls_private_key
      description: Resource type
    TypeTLSConfiguration:
      type: string
      enum:
      - tls_configuration
      description: Resource type
    TypeContact:
      type: string
      enum:
      - contact
      description: Resource type
    RoleUser:
      type: string
      enum:
      - user
      - billing
      - engineer
      - superuser
      description: The permissions role assigned to the user. Can be `user`, `billing`, `engineer`, or `superuser`.
    TypeServiceInvitation:
      type: string
      enum:
      - service_invitation
      description: Resource type
    TypeTLSSubscription:
      type: string
      enum:
      - tls_subscription
      description: Resource type
    LoggingMessageType:
      type: string
      enum:
      - classic
      - loggly
      - logplex
      - blank
      description: How the message should be formatted.
    DdosProtectionTrafficAttribute:
      type: string
      enum:
      - source_ip
      - country_code
      - host
      - asn
      - source_ip_prefix
      - user_agent
      - method_path
      description: Name of an attribute type used in traffic stats.
    LoggingUseTLSString:
      type: string
      enum:
      - '0'
      - '1'
      description: Whether to use TLS.
    serviceAuthorization:
      type: object
      description: serviceAuthorization model
      additionalProperties: true
    sudoRequest:
      type: object
      description: sudoRequest model
      additionalProperties: true
    bulkUpdateACLEntriesRequest:
      type: object
      description: bulkUpdateACLEntriesRequest model
      additionalProperties: true
    invitation:
      type: object
      description: invitation model
      additionalProperties: true
    secret:
      type: object
      description: secret model
      additionalProperties: true
    tlsCsr:
      type: object
      description: tlsCsr model
      additionalProperties: true
    InlineResponse2001:
      type: object
      description: InlineResponse2001 model
      additionalProperties: true
    ngwafRequestUpdateConfiguration:
      type: object
      description: ngwafRequestUpdateConfiguration model
      additionalProperties: true
    createResponseObjectRequest:
      type: object
      description: createResponseObjectRequest model
      additionalProperties: true
    tlsConfiguration:
      type: object
      description: tlsConfiguration model
      additionalProperties: true
    bulkUpdateConfigStoreListRequest:
      type: object
      description: bulkUpdateConfigStoreListRequest model
      additionalProperties: true
    computeACLCreateAclsRequest:
      type: object
      description: computeACLCreateAclsRequest model
      additionalProperties: true
    aclEntry:
      type: object
      description: aclEntry model
      additionalProperties: true
    Stats:
      type: object
      description: Stats model
      additionalProperties: true
    purgeResponse:
      type: object
      description: purgeResponse model
      additionalProperties: true
    mutualAuthentication:
      type: object
      description: mutualAuthentication model
      additionalProperties: true
    computeACLUpdate:
      type: object
      description: computeACLUpdate model
      additionalProperties: true
    ListCustomerAddressesResponse:
      type: object
      description: ListCustomerAddressesResponse model
      additionalProperties: true
    bulkUpdateDictionaryListRequest:
      type: object
      description: bulkUpdateDictionaryListRequest model
      additionalProperties: true
    ddosProtectionRequestUpdateConfiguration:
      type: object
      description: ddosProtectionRequestUpdateConfiguration model
      additionalProperties: true
    tlsBulkCertificate:
      type: object
      description: tlsBulkCertificate model
      additionalProperties: true
    billingAddressRequest:
      type: object
      description: billingAddressRequest model
      additionalProperties: true
    body:
      type: object
      description: body model
      additionalProperties: true
    updateDashboardRequest:
      type: object
      description: updateDashboardRequest model
      additionalProperties: true
    requestBody:
      type: object
      description: requestBody model
      additionalProperties: true
    tlsPrivateKey:
      $ref: '#/components/schemas/TLSPrivateKey'
    createDashboardRequest:
      type: object
      description: createDashboardRequest model
      additionalProperties: true
    tlsCertificate:
      $ref: '#/components/schemas/TLSCertificate'
    defaultSettings:
      type: object
      description: defaultSettings model
      additionalProperties: true
    ngwafRequestEnable:
      type: object
      description: ngwafRequestEnable model
      additionalProperties: true
    PublicIPList:
      type: object
      description: PublicIPList model
      additionalProperties: true
    updateBillingAddressRequest:
      type: object
      description: updateBillingAddressRequest model
      additionalProperties: true
    accessKey:
      type: object
      description: accessKey model
      additionalProperties: true
    customerAddress:
      type: object
      description: customerAddress model
      additionalProperties: true
    kvStoreRequestCreate:
      type: object
      description: kvStoreRequestCreate model
      additionalProperties: true
    tlsActivation:
      type: object
      description: tlsActivation model
      additionalProperties: true
    tlsSubscription:
      type: object
      description: tlsSubscription model
      additionalProperties: true
    InlineResponse2009:
      type: object
      description: InlineResponse2009 model
      additionalProperties: true
    automationTokenCreateRequest:
      type: object
      description: automationTokenCreateRequest model
      additionalProperties: true
    star:
      type: object
      description: star model
      additionalProperties: true
    secretStore:
      type: object
      description: secretStore model
      additionalProperties: true
    DashboardItemPropertyDataSourcePropertyConfig:
      type: object
      description: DashboardItemPropertyDataSourcePropertyConfig schema
      additionalProperties: true
    DashboardPropertyCreatedBy:
      type: object
      description: DashboardPropertyCreatedBy schema
      additionalProperties: true
    DashboardPropertyUpdatedBy:
      type: object
      description: DashboardPropertyUpdatedBy schema
      additionalProperties: true
    LogInsightsDimensionAttributes:
      type: object
      description: LogInsightsDimensionAttributes schema
      additionalProperties: true
    LogInsightsDimensions:
      type: object
      description: LogInsightsDimensions schema
      additionalProperties: true
    LogInsightsValues:
      type: object
      description: LogInsightsValues schema
      additionalProperties: true
    NullableFloat32:
      type: object
      description: NullableFloat32 schema
      additionalProperties: true
    NullableLoggingPlacement:
      type: object
      description: NullableLoggingPlacement schema
      additionalProperties: true
    NullableServiceVersionDetailOrNull:
      type: object
      description: NullableServiceVersionDetailOrNull schema
      additionalProperties: true
    ReadOnlyCustomerID:
      type: object
      description: ReadOnlyCustomerID schema
      additionalProperties: true
    ReadOnlyID:
      type: object
      description: ReadOnlyID schema
      additionalProperties: true
    ReadOnlyUserID:
      type: object
      description: ReadOnlyUserID schema
      additionalProperties: true
    RealtimeEntryRecorded:
      type: object
      description: RealtimeEntryRecorded schema
      additionalProperties: true
    RelationshipMutualAuthenticationsMutualAuthentications:
      type: object
      description: RelationshipMutualAuthenticationsMutualAuthentications schema
      additionalProperties: true
    RelationshipServiceInvitationsCreateServiceInvitations:
      type: object
      description: RelationshipServiceInvitationsCreateServiceInvitations schema
      additionalProperties: true
    RelationshipServiceInvitationsServiceInvitations:
      type: object
      description: RelationshipServiceInvitationsServiceInvitations schema
      additionalProperties: true
    RelationshipServicesServices:
      type: object
      description: RelationshipServicesServices schema
      additionalProperties: true
    RelationshipTLSActivationTLSActivation:
      type: object
      description: RelationshipTLSActivationTLSActivation schema
      additionalProperties: true
    RelationshipTLSBulkCertificateTLSBulkCertificate:
      type: object
      description: RelationshipTLSBulkCertificateTLSBulkCertificate schema
      additionalProperties: true
    RelationshipTLSCertificatesTLSCertificates:
      type: object
      description: RelationshipTLSCertificatesTLSCertificates schema
      additionalProperties: true
    RelationshipTLSConfigurationsTLSConfigurations:
      type: object
      description: RelationshipTLSConfigurationsTLSConfigurations schema
      additionalProperties: true
    RelationshipTLSDNSRecordsRequestDNSRecords:
      type: object
      description: RelationshipTLSDNSRecordsRequestDNSRecords schema
      additionalProperties: true
    RelationshipTLSDNSRecordsResponseDNSRecords:
      type: object
      description: RelationshipTLSDNSRecordsResponseDNSRecords schema
      additionalProperties: true
    RelationshipTLSDomainsTLSDomains:
      type: object
      description: RelationshipTLSDomainsTLSDomains schema
      additionalProperties: true
    RelationshipTLSPrivateKeysTLSPrivateKeys:
      type: object
      description: RelationshipTLSPrivateKeysTLSPrivateKeys schema
      additionalProperties: true
    RelationshipTLSSubscriptionTLSSubscription:
      type: object
      description: RelationshipTLSSubscriptionTLSSubscription schema
      additionalProperties: true
    RelationshipsForInvitation:
      type: object
      description: RelationshipsForInvitation schema
      additionalProperties: true
    RelationshipsForMutualAuthentication:
      type: object
      description: RelationshipsForMutualAuthentication schema
      additionalProperties: true
    RelationshipsForTLSBulkCertificate:
      type: object
      description: RelationshipsForTLSBulkCertificate schema
      additionalProperties: true
    RelationshipsForTLSConfiguration:
      type: object
      description: RelationshipsForTLSConfiguration schema
      additionalProperties: true
    RelationshipsForTLSDomain:
      type: object
      description: RelationshipsForTLSDomain schema
      additionalProperties: true
    RelationshipsForTLSPrivateKey:
      type: object
      description: RelationshipsForTLSPrivateKey schema
      additionalProperties: true
    RelationshipsForTLSSubscription:
      type: object
      description: RelationshipsForTLSSubscription schema
      additionalProperties: true
